{"version":3,"sources":["webpack://scribble/webpack/universalModuleDefinition","webpack://scribble/webpack/bootstrap","webpack://scribble/./node_modules/harmonics/main.js","webpack://scribble/./src/browser-clip.ts","webpack://scribble/./src/utils.ts","webpack://scribble/./src/browser-index.ts","webpack://scribble/./src/progression.ts","webpack://scribble/./src/arp.ts","webpack://scribble/./src/midi.ts","webpack://scribble/external \"fs\"","webpack://scribble/./node_modules/jsmidgen/lib/jsmidgen.js","webpack://scribble/(webpack)/buildin/module.js","webpack://scribble/./src/session.ts","webpack://scribble/./src/channel.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__7__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","413","JSON","parse","722","e","a","chord","chords","inlineChord","scale","scales","concat","indexOf","slice","replace","isNaN","b","map","u","h","f","length","push","includes","split","keys","__assign","this","assign","arguments","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","clip","renderingDuration","totalPatternDuration","recursivelyApplyPatternToDurations","utils_1","harmonics_1","convertChordsToNotes","el","isNote","Array","isArray","forEach","Error","getNote","params","counter","randomNotes","num","Math","round","random","notes","getDuration","durations","dur","subdiv","getSeqFn","instrument","Tone","Player","time","start","PolySynth","Sampler","triggerAttackRelease","NoiseSynth","patternArr","char","generateSequence","context","_a","getContext","pattern","player","sample","buffer","synth","sampler","samples","expandStr","Ticks","toSeconds","effects","eff","recreateToneObjectInContext","toDestination","console","warn","url","volume","chain","Sequence","callback","events","subdivision","subdivOrLength","patternRegularNotesCount","filter","patternRandomNotesCount","patternNotesCount","notesCount","n1","n2","smallest","largest","leastCommonMultiple","originalContext","ongoingRenderingCounter","toneObject","_dummyVoice","_buffer","paramsFromSampler","attack","curve","release","paramsFromBuffers","baseUrl","_buffers","urls","fromEntries","entries","shuffle","sizzle","sizzleReps","arpegiate","amp","accentLow","offlineRendering","test","duration","loop","Offline","sequence","loaded","transport","setContext","offlineRenderingCallback","sync","offlineRenderClip","flat","dice","pickOne","sizzleMap","str","stringify","arr","fullShuffle","lastIndex","idx","rnd","floor","maxLevel","pi","PI","piArr","piArrRev","reverse","element","sin","reduce","acc","val","Session","midi","arp","progression","getChordsByProgression","getChordDegrees","modes","browser_clip_1","progression_1","arp_1","midi_1","session_1","theRomans","ionian","dorian","phrygian","lydian","mixolydian","aeolian","locrian","major","minor","idxByDegree","ii","iii","iv","vi","vii","noteOctaveScale","chordDegress","noteOctaveScaleArr","match","join","roman","chordName","prefix","toLowerCase","getChordName","scaleId","note","oct","toString","getProgFactory","T","D","count","M","scaleType","__spreadArrays","il","k","j","jl","fillArr","len","bumpOctave","arr1","arr2","chordsOrParams","finalArr","order","from","filledArr_1","reorderedArr","filledArr_2","message","__createBinding","k2","undefined","__setModuleDefault","__importStar","mod","__importDefault","fs_1","jsmidgen","fileName","bpm","bytes","createFileFromNotes","toBytes","endsWith","URL","createObjectURL","createDownloadLink","default","writeFileSync","log","Uint8Array","ascii","charCodeAt","blob","Blob","type","link","document","createElement","href","download","innerText","file","File","track","Track","setTempo","addTrack","_i","notes_1","noteObj","level","noteOn","noteOff","addChord","exported","DEFAULT_VOLUME","Util","DEFAULT_DURATION","DEFAULT_CHANNEL","midi_letter_pitches","midiPitchFromNote","matches","exec","accidental","parseInt","substr","ensureMidiPitch","midi_pitches_letter","midi_flattened_notes","noteFromMidiPitch","returnFlattened","noteName","octave","noteNum","mpqnFromBpm","mpqn","ret","unshift","bpmFromMpqn","codes2Str","byteArray","String","fromCharCode","str2Bytes","finalBytes","chars","translateTickTime","ticks","bList","MidiEvent","channel","param1","setTime","setType","setChannel","setParam1","setParam2","param2","NOTE_OFF","NOTE_ON","AFTER_TOUCH","CONTROLLER","PROGRAM_CHANGE","CHANNEL_AFTERTOUCH","PITCH_BEND","typeChannelByte","MetaEvent","setData","data","SEQUENCE","TEXT","COPYRIGHT","TRACK_NAME","INSTRUMENT","LYRIC","MARKER","CUE_POINT","CHANNEL_PREFIX","END_OF_TRACK","TEMPO","SMPTE","TIME_SIG","KEY_SIG","SEQ_EVENT","dataBytes","x","config","START_BYTES","END_BYTES","addEvent","event","addNoteOn","pitch","velocity","addNoteOff","addNote","index","setInstrument","tempo","trackLength","eventBytes","startBytes","endBytes","lengthBytes","tracks","HDR_CHUNKID","HDR_CHUNK_SIZE","HDR_TYPE0","HDR_TYPE1","trackCount","Event","Midi","webpackPolyfill","deprecate","paths","children","channel_1","_this","sessionChannels","ch","uniqueIdx","Channel","channels","idxs","find","newIdx_1","createChannel","newChannel","configurable","startRow","startClip","play","channelPatterns","clipDuration","clipDurationInSeconds","Time","stopClips","clips","stop","channelIdx","prevClipIdx","clipIdx","startClips","__rest","getOwnPropertySymbols","propertyIsEnumerable","getNextPos","Transport","position","activePatternIdx","channelClips","originalParamsFiltered","addClip","stopClip","state","clipParams"],"mappings":"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","file":"scribbletune.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"fs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"fs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"scribble\"] = factory(require(\"fs\"));\n\telse\n\t\troot[\"scribble\"] = factory(root[\"fs\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__7__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","(()=>{\"use strict\";var n={413:n=>{n.exports=JSON.parse('{\"5th\":\"100000010000\",\"M7#5sus4\":\"100001001001\",\"7#5sus4\":\"100001001010\",\"sus4\":\"100001010000\",\"M7sus4\":\"100001010001\",\"7sus4\":\"100001010010\",\"7no5\":\"100010000010\",\"aug\":\"100010001000\",\"M7b6\":\"100010001001\",\"maj7#5\":\"100010001001\",\"7#5\":\"100010001010\",\"7b13\":\"100010001010\",\"M\":\"100010010000\",\"maj7\":\"100010010001\",\"7th\":\"100010010010\",\"6th\":\"100010010100\",\"7add6\":\"100010010110\",\"7b6\":\"100010011010\",\"Mb5\":\"100010100000\",\"M7b5\":\"100010100001\",\"7b5\":\"100010100010\",\"maj#4\":\"100010110001\",\"7#11\":\"100010110010\",\"M6#11\":\"100010110100\",\"7#11b13\":\"100010111010\",\"m#5\":\"100100001000\",\"mb6M7\":\"100100001001\",\"m7#5\":\"100100001010\",\"m\":\"100100010000\",\"m/ma7\":\"100100010001\",\"m7\":\"100100010010\",\"m6\":\"100100010100\",\"mMaj7b6\":\"100100011001\",\"dim\":\"100100100000\",\"oM7\":\"100100100001\",\"m7b5\":\"100100100010\",\"dim7\":\"100100100100\",\"o7M7\":\"100100100101\",\"4th\":\"100101000010\",\"madd4\":\"100101010000\",\"m7add11\":\"100101010010\",\"+add#9\":\"100110001000\",\"7#5#9\":\"100110001010\",\"7#9\":\"100110010010\",\"13#9\":\"100110010110\",\"7#9b13\":\"100110011010\",\"maj7#9#11\":\"100110110001\",\"7#9#11\":\"100110110010\",\"13#9#11\":\"100110110110\",\"7#9#11b13\":\"100110111010\",\"sus2\":\"101000010000\",\"M9#5sus4\":\"101001001001\",\"sus24\":\"101001010000\",\"M9sus4\":\"101001010001\",\"11th\":\"101001010010\",\"9sus4\":\"101001010010\",\"13sus4\":\"101001010110\",\"9no5\":\"101010000010\",\"13no5\":\"101010000110\",\"M#5add9\":\"101010001000\",\"maj9#5\":\"101010001001\",\"9#5\":\"101010001010\",\"9b13\":\"101010001010\",\"Madd9\":\"101010010000\",\"maj9\":\"101010010001\",\"9th\":\"101010010010\",\"6/9\":\"101010010100\",\"maj13\":\"101010010101\",\"M7add13\":\"101010010101\",\"13th\":\"101010010110\",\"M9b5\":\"101010100001\",\"9b5\":\"101010100010\",\"13b5\":\"101010100110\",\"9#5#11\":\"101010101010\",\"maj9#11\":\"101010110001\",\"9#11\":\"101010110010\",\"69#11\":\"101010110100\",\"M13#11\":\"101010110101\",\"13#11\":\"101010110110\",\"9#11b13\":\"101010111010\",\"m9#5\":\"101100001010\",\"madd9\":\"101100010000\",\"mM9\":\"101100010001\",\"m9\":\"101100010010\",\"m69\":\"101100010100\",\"m13\":\"101100010110\",\"mMaj9b6\":\"101100011001\",\"m9b5\":\"101100100010\",\"m11A\":\"101101001010\",\"m11\":\"101101010010\",\"b9sus\":\"110001010010\",\"11b9\":\"110001010010\",\"7sus4b9b13\":\"110001011010\",\"alt7\":\"110010000010\",\"7#5b9\":\"110010001010\",\"Maddb9\":\"110010010000\",\"M7b9\":\"110010010001\",\"7b9\":\"110010010010\",\"13b9\":\"110010010110\",\"7b9b13\":\"110010011010\",\"7#5b9#11\":\"110010101010\",\"7b9#11\":\"110010110010\",\"13b9#11\":\"110010110110\",\"7b9b13#11\":\"110010111010\",\"mb6b9\":\"110100001000\",\"7b9#9\":\"110110010010\"}')},722:n=>{n.exports=JSON.parse('{\"major pentatonic\":\"101010010100\",\"ionian pentatonic\":\"100011010001\",\"mixolydian pentatonic\":\"100011010010\",\"ritusen\":\"101001010100\",\"egyptian\":\"101001010010\",\"neopolitan major pentatonic\":\"100011100010\",\"vietnamese 1\":\"100101011000\",\"pelog\":\"110100011000\",\"kumoijoshi\":\"110001011000\",\"hirajoshi\":\"101100011000\",\"iwato\":\"110001100010\",\"in-sen\":\"110001010010\",\"lydian pentatonic\":\"100010110001\",\"malkos raga\":\"100101001010\",\"locrian pentatonic\":\"100101100010\",\"minor pentatonic\":\"100101010010\",\"minor six pentatonic\":\"100101010100\",\"flat three pentatonic\":\"101100010100\",\"flat six pentatonic\":\"101010011000\",\"scriabin\":\"110010010100\",\"whole tone pentatonic\":\"100010101010\",\"lydian #5P pentatonic\":\"100010101001\",\"lydian dominant pentatonic\":\"100010110010\",\"minor #7M pentatonic\":\"100101010001\",\"super locrian pentatonic\":\"100110100010\",\"minor hexatonic\":\"101101010001\",\"augmented\":\"100110011001\",\"major blues\":\"101110010100\",\"piongio\":\"101001010110\",\"prometheus neopolitan\":\"110010100110\",\"prometheus\":\"101010100110\",\"mystery #1\":\"110010101010\",\"six tone symmetric\":\"110011001100\",\"whole tone\":\"101010101010\",\"messiaen\\'s mode #5\":\"110001110001\",\"minor blues\":\"100101110010\",\"locrian major\":\"101011101010\",\"double harmonic lydian\":\"110010111001\",\"harmonic minor\":\"101101011001\",\"altered\":\"110110101010\",\"locrian #2\":\"101101101010\",\"mixolydian b6\":\"101011011010\",\"lydian dominant\":\"101010110110\",\"lydian\":\"101010110101\",\"lydian augmented\":\"101010101101\",\"dorian b2\":\"110101010110\",\"melodic minor\":\"101101010101\",\"locrian\":\"110101101010\",\"ultralocrian\":\"110110101100\",\"locrian 6\":\"110101100110\",\"augmented heptatonic\":\"100111011001\",\"romanian minor\":\"101100110110\",\"dorian #4\":\"101100110110\",\"lydian diminished\":\"101100110101\",\"phrygian\":\"110101011010\",\"leading whole tone\":\"101010101011\",\"lydian minor\":\"101010111010\",\"phrygian dominant\":\"110011011010\",\"balinese\":\"110101011001\",\"neopolitan major\":\"110101010101\",\"aeolian\":\"101101011010\",\"harmonic major\":\"101011011001\",\"double harmonic major\":\"110011011001\",\"dorian\":\"101101010110\",\"hungarian minor\":\"101100111001\",\"hungarian major\":\"100110110110\",\"oriental\":\"110011100110\",\"flamenco\":\"110110110010\",\"todi raga\":\"110100111001\",\"mixolydian\":\"101011010110\",\"persian\":\"110011101001\",\"major\":\"101011010101\",\"enigmatic\":\"110010101011\",\"major augmented\":\"101011001101\",\"lydian #9\":\"100110110101\",\"messiaen\\'s mode #4\":\"111001111001\",\"purvi raga\":\"110011111001\",\"spanish heptatonic\":\"110111011010\",\"bebop\":\"101011010111\",\"bebop minor\":\"101111010110\",\"bebop major\":\"101011011101\",\"bebop locrian\":\"110101111010\",\"minor bebop\":\"101101011011\",\"diminished\":\"101101101101\",\"ichikosucho\":\"101011110101\",\"minor six diminished\":\"101101011101\",\"half-whole diminished\":\"110110110110\",\"kafi raga\":\"100111010111\",\"messiaen\\'s mode #6\":\"101011101011\",\"composite blues\":\"101111110110\",\"messiaen\\'s mode #3\":\"101110111011\",\"messiaen\\'s mode #7\":\"111101111101\",\"chromatic\":\"111111111111\",\"ionian\":\"101011010101\",\"minor\":\"101101011010\"}')}},e={};function o(a){var i=e[a];if(void 0!==i)return i.exports;var t=e[a]={exports:{}};return n[a](t,t.exports,o),t.exports}o.d=(n,e)=>{for(var a in e)o.o(e,a)&&!o.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},o.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),o.r=n=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})};var a={};(()=>{o.r(a),o.d(a,{chord:()=>m,chords:()=>r,inlineChord:()=>t,scale:()=>c,scales:()=>s});var n=o(722),e=o(413),i=function(o){var a=o.scale,i=o.chord,t=a||i,r=a?\"scale\":\"chord\";if(\"string\"!=typeof t)throw\"\".concat(t,\" is not a valid input for \").concat(r);var s=t.indexOf(\" \"),m=t.slice(s+1),c=t.slice(0,s),d=c.replace(/\\d/g,\"\"),l=+c.replace(/\\D/g,\"\");if(isNaN(l))throw\"\".concat(c[0],\" does not have a valid octave\");if(!n[m]&&!e[m])throw\"\".concat(t,\" is not a valid \").concat(r);for(var b=function(n,e){var o=[\"C\",\"Db\",\"D\",\"Eb\",\"E\",\"F\",\"Gb\",\"G\",\"Ab\",\"A\",\"Bb\",\"B\"].map((function(n){return n+e})),a=[\"C\",\"Db\",\"D\",\"Eb\",\"E\",\"F\",\"Gb\",\"G\",\"Ab\",\"A\",\"Bb\",\"B\"].map((function(n){return n+(e+1)})),i=o.concat(a);return i.slice(i.indexOf(n+e))}(d,l),u=[],p=0,h=0,f=a?n:e;p<f[m].length;)\"1\"===f[m][p]&&u.push(b[h]),p++,h++;return u},t=function(n){var e,o,a=\"b9sus\",t=4;return n.includes(a)?(o=a,e=n.slice(0,n.indexOf(a))):(e=n[0],o=n.slice(1),\"b\"!==n[1]&&\"#\"!==n[1]||(e+=n[1],o=n.slice(2))),n.includes(\"_\")&&(t=+n.split(\"_\")[1],o=o.slice(0,o.indexOf(\"_\"))),i({chord:e+t+\" \"+o})},r=function(){return Object.keys(e)},s=function(){return Object.keys(n)},m=function(n){return i({chord:n})},c=function(n){return i({scale:n})}})();var i=exports;for(var t in a)i[t]=a[t];a.__esModule&&Object.defineProperty(i,\"__esModule\",{value:!0})})();","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clip = exports.renderingDuration = exports.totalPatternDuration = exports.recursivelyApplyPatternToDurations = void 0;\nvar utils_1 = require(\"./utils\");\nvar harmonics_1 = require(\"harmonics\");\nvar defaultSubdiv = '4n';\nvar defaultDur = '8n';\n/**\n * Get default params for a clip, such as root note, pattern etc\n * @return {Object}\n */\nvar getDefaultParams = function () { return ({\n    notes: ['C4'],\n    pattern: 'x',\n    shuffle: false,\n    sizzle: false,\n    sizzleReps: 1,\n    arpegiate: false,\n    subdiv: '4n',\n    amp: 100,\n    accentLow: 70,\n    randomNotes: null,\n    effects: [],\n    offlineRendering: false,\n}); };\n/**\n * HDR speed is denoted by the number of ticks per note\n * By default this is set to a quarter note (4n) to be in line with Tone.js' default subdivision\n * Technically a bar is 512 ticks long. So it's HDR speed is 512\n * @type {Object}\n */\nvar hdr = {\n    '1m': 2048,\n    '2m': 4096,\n    '3m': 6144,\n    '4m': 8192,\n    '1n': 512,\n    '2n': 256,\n    '4n': 128,\n    '8n': 64,\n    '16n': 32,\n};\nvar convertChordsToNotes = function (el) {\n    if (utils_1.isNote(el)) {\n        // A note needs to be an array so that it can accomodate chords or single notes with a single interface\n        return [el];\n    }\n    if (Array.isArray(el)) {\n        // This could be a chord provided as an array\n        // make sure it uses valid notes\n        el.forEach(function (n) {\n            if (!utils_1.isNote(n)) {\n                throw new TypeError('array must comprise valid notes');\n            }\n        });\n        return el;\n    }\n    if (!Array.isArray(el)) {\n        var c = harmonics_1.chord(el);\n        if (c && c.length) {\n            return c;\n        }\n    }\n    throw new Error(\"Chord \" + el + \" not found\");\n};\nvar random = function (num) {\n    if (num === void 0) { num = 1; }\n    return Math.round(Math.random() * num);\n};\nvar getNote = function (el, params, counter) {\n    return el === 'R' && params.randomNotes\n        ? params.randomNotes[random(params.randomNotes.length - 1)]\n        : params.notes[counter % params.notes.length];\n};\nvar getDuration = function (params, counter) {\n    return params.durations\n        ? params.durations[counter % params.durations.length]\n        : params.dur || params.subdiv || defaultDur;\n};\n/**\n * @param  {Object}\n * @return {Function}\n * Take an object literal which has a Tone.js instrument and return a function that can be used\n * as the callback in Tone.Sequence https://tonejs.github.io/docs/Sequence\n */\nvar getSeqFn = function (params) {\n    var counter = 0;\n    if (params.instrument instanceof Tone.Player) {\n        return function (time, el) {\n            if (el === 'x' || el === 'R') {\n                params.instrument.start(time);\n                counter++;\n            }\n        };\n    }\n    else if (params.instrument instanceof Tone.PolySynth ||\n        params.instrument instanceof Tone.Sampler) {\n        return function (time, el) {\n            if (el === 'x' || el === 'R') {\n                params.instrument.triggerAttackRelease(getNote(el, params, counter), getDuration(params, counter), time);\n                counter++;\n            }\n        };\n    }\n    else if (params.instrument instanceof Tone.NoiseSynth) {\n        return function (time, el) {\n            if (el === 'x' || el === 'R') {\n                params.instrument.triggerAttackRelease(getDuration(params, counter), time);\n                counter++;\n            }\n        };\n    }\n    else {\n        return function (time, el) {\n            if (el === 'x' || el === 'R') {\n                params.instrument.triggerAttackRelease(getNote(el, params, counter)[0], getDuration(params, counter), time);\n                counter++;\n            }\n        };\n    }\n};\nexports.recursivelyApplyPatternToDurations = function (patternArr, length, durations) {\n    if (durations === void 0) { durations = []; }\n    patternArr.forEach(function (char) {\n        if (typeof char === 'string') {\n            if (char === 'x' || char === 'R') {\n                durations.push(length);\n            }\n            if (char === '_' && durations.length) {\n                durations[durations.length - 1] += length;\n            }\n        }\n        if (Array.isArray(char)) {\n            exports.recursivelyApplyPatternToDurations(char, length / char.length, durations);\n        }\n    });\n    return durations;\n};\nvar generateSequence = function (params, context) {\n    var _a;\n    context = context || Tone.getContext();\n    if (!params.pattern) {\n        throw new Error('No pattern provided!');\n    }\n    if (!params.player &&\n        !params.instrument &&\n        !params.sample &&\n        !params.buffer &&\n        !params.synth &&\n        !params.sampler &&\n        !params.samples) {\n        throw new Error('No player or instrument provided!');\n    }\n    if (!params.durations && !params.dur) {\n        params.durations = exports.recursivelyApplyPatternToDurations(utils_1.expandStr(params.pattern), Tone.Ticks(params.subdiv || defaultSubdiv).toSeconds());\n    }\n    /*\n      1. The params object can be used to pass a sample (sound source) OR a synth(Synth/FMSynth/AMSynth etc) or samples.\n      Scribbletune will then create a Tone.js Player or Tone.js Instrument or Tone.js Sampler respectively\n      2. It can also be used to pass a Tone.js Player object or instrument that was created elsewhere\n      (mostly by Scribbletune itself in the channel creation method)\n      Either ways, a pattern is required and it will be used to create a playable Tone.js Sequence\n       */\n    var effects = [];\n    var createEffect = function (eff) {\n        var effect = typeof eff === 'string'\n            ? new Tone[eff]({ context: context })\n            : eff.context !== context\n                ? recreateToneObjectInContext(eff, context)\n                : eff;\n        return effect.toDestination();\n    };\n    var startEffect = function (eff) {\n        return typeof eff.start === 'function' ? eff.start() : eff;\n    };\n    if (params.effects) {\n        if (!Array.isArray(params.effects)) {\n            params.effects = [params.effects];\n        }\n        effects = params.effects.map(createEffect).map(startEffect);\n    }\n    if (params.synth && !params.instrument) {\n        params.instrument = params.synth;\n        console.warn('The \"synth\" parameter will be deprecated in the future. Please use the \"instrument\" parameter instead.');\n    }\n    params.instrument =\n        params.sample || params.buffer\n            ? new Tone.Player({\n                url: params.sample || params.buffer,\n                context: context,\n            })\n            : params.sampler\n                ? params.sampler\n                : params.player\n                    ? params.player\n                    : params.samples\n                        ? new Tone.Sampler({ url: params.samples, context: context })\n                        : typeof params.instrument === 'string'\n                            ? new Tone[params.instrument]({ context: context })\n                            : params.instrument;\n    if (params.instrument.context !== context) {\n        params.instrument = recreateToneObjectInContext(params.instrument, context);\n    }\n    if (params.volume) {\n        params.instrument.volume.value = params.volume;\n    }\n    (_a = params.instrument).chain.apply(_a, effects).toDestination();\n    return new Tone.Sequence({\n        callback: getSeqFn(params),\n        events: utils_1.expandStr(params.pattern),\n        subdivision: params.subdiv || defaultSubdiv,\n        context: context,\n    });\n};\nexports.totalPatternDuration = function (pattern, subdivOrLength) {\n    return typeof subdivOrLength === 'number'\n        ? subdivOrLength * utils_1.expandStr(pattern).length\n        : Tone.Ticks(subdivOrLength).toSeconds() * utils_1.expandStr(pattern).length;\n};\nvar leastCommonMultiple = function (n1, n2) {\n    var _a = n1 < n2 ? [n1, n2] : [n2, n1], smallest = _a[0], largest = _a[1];\n    var i = largest;\n    while (i % smallest !== 0) {\n        i += largest;\n    }\n    return i;\n};\nexports.renderingDuration = function (pattern, subdivOrLength, notes, randomNotes) {\n    var patternRegularNotesCount = pattern.split('').filter(function (c) {\n        return c === 'x';\n    }).length;\n    var patternRandomNotesCount = pattern.split('').filter(function (c) {\n        return c === 'R';\n    }).length;\n    var patternNotesCount = (randomNotes === null || randomNotes === void 0 ? void 0 : randomNotes.length) ? patternRegularNotesCount\n        : patternRegularNotesCount + patternRandomNotesCount;\n    var notesCount = notes.length || 1;\n    return ((exports.totalPatternDuration(pattern, subdivOrLength) / patternNotesCount) *\n        leastCommonMultiple(notesCount, patternNotesCount));\n};\nvar ongoingRenderingCounter = 0;\nvar originalContext;\nvar recreateToneObjectInContext = function (toneObject, context) {\n    if (toneObject instanceof Tone.PolySynth) {\n        return new Tone.PolySynth(Tone[toneObject._dummyVoice.name], __assign(__assign({}, toneObject.get()), { context: context }));\n    }\n    else if (toneObject instanceof Tone.Player) {\n        return new Tone.Player({ url: toneObject._buffer, context: context });\n    }\n    else if (toneObject instanceof Tone.Sampler) {\n        var _a = toneObject.get(), attack = _a.attack, curve = _a.curve, release = _a.release, volume = _a.volume;\n        var paramsFromSampler = { attack: attack, curve: curve, release: release, volume: volume };\n        var paramsFromBuffers = {\n            baseUrl: toneObject._buffers.baseUrl,\n            urls: Object.fromEntries(toneObject._buffers._buffers.entries()),\n        };\n        return new Tone.Sampler(__assign(__assign(__assign({}, paramsFromSampler), paramsFromBuffers), { context: context }));\n    }\n    else {\n        return new Tone[toneObject.name](__assign(__assign({}, toneObject.get()), { context: context }));\n    }\n};\nvar offlineRenderClip = function (params, duration) {\n    if (!originalContext) {\n        originalContext = Tone.getContext();\n    }\n    ongoingRenderingCounter++;\n    var player = new Tone.Player({ context: originalContext, loop: true });\n    Tone.Offline(function (context) { return __awaiter(void 0, void 0, void 0, function () {\n        var sequence;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    sequence = generateSequence(params, context);\n                    return [4 /*yield*/, Tone.loaded()];\n                case 1:\n                    _a.sent();\n                    sequence.start();\n                    context.transport.start();\n                    return [2 /*return*/];\n            }\n        });\n    }); }, duration).then(function (buffer) {\n        var _a;\n        player.buffer = buffer;\n        ongoingRenderingCounter--;\n        if (ongoingRenderingCounter === 0) {\n            Tone.setContext(originalContext);\n            (_a = params.offlineRenderingCallback) === null || _a === void 0 ? void 0 : _a.call(params);\n        }\n    });\n    player.toDestination();\n    player.sync();\n    return player;\n};\n/**\n * @param  {Object}\n * @return {Tone.js Sequence Object}\n * Take a object literal that may have a Tone.js player OR instrument\n * or simply a sample or synth with a pattern and return a Tone.js sequence\n */\nexports.clip = function (params) {\n    params = __assign(__assign({}, getDefaultParams()), (params || {}));\n    // If notes is a string, split it into an array\n    if (typeof params.notes === 'string') {\n        // Remove any accidental double spaces\n        params.notes = params.notes.replace(/\\s{2,}/g, ' ');\n        params.notes = params.notes.split(' ');\n    }\n    params.notes = params.notes.map(convertChordsToNotes);\n    if (/[^x\\-_\\[\\]R]/.test(params.pattern)) {\n        throw new TypeError(\"pattern can only comprise x - _ [ ], found \" + params.pattern);\n    }\n    if (params.shuffle) {\n        params.notes = utils_1.shuffle(params.notes);\n    }\n    if (params.randomNotes && typeof params.randomNotes === 'string') {\n        params.randomNotes = params.randomNotes.replace(/\\s{2,}/g, ' ').split(/\\s/);\n    }\n    if (params.randomNotes) {\n        params.randomNotes = params.randomNotes.map(convertChordsToNotes);\n    }\n    if (params.offlineRendering) {\n        return offlineRenderClip(params, exports.renderingDuration(params.pattern, params.subdiv || defaultSubdiv, params.notes, params.randomNotes));\n    }\n    return generateSequence(params, originalContext);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flat = exports.dice = exports.pickOne = exports.sizzleMap = exports.shuffle = exports.expandStr = exports.isNote = void 0;\n/**\n * Take a string input and check if it s a note name or not\n * @param  {String} str Note name e.g. c4\n * @return {Boolean} Return true for c4 or return false for something like CM\n */\nexports.isNote = function (str) {\n    return /^[a-gA-G](?:#|b)?\\d$/.test(str);\n};\n/**\n * Take a String input such as xxx[xx[xx]]\n * and return an Array as ['x', 'x', 'x', ['x', 'x', ['x', 'x']]]\n * @param  {String} str\n * @return {Array}\n */\nexports.expandStr = function (str) {\n    str = JSON.stringify(str.split(''));\n    str = str.replace(/,\"\\[\",/g, ', [');\n    str = str.replace(/\"\\[\",/g, '[');\n    str = str.replace(/,\"\\]\"/g, ']');\n    return JSON.parse(str);\n};\n/**\n * Basic Array randomizer\n * @param  {Array} arr\n * @param  {boolean} fullShuffle Ensure no elements remain in old place\n * @return {Array}\n */\nexports.shuffle = function (arr, fullShuffle) {\n    if (fullShuffle === void 0) { fullShuffle = true; }\n    var lastIndex = arr.length - 1;\n    // Shuffle algorithm by Richard Durstenfeld (Donald E. Knuth), also Ronald Fisher and Frank Yates.\n    // \"Full Shuffle\" Modification to ensure no elements remain in their original place (by taking each element once\n    // and swapping with any remaining elements)\n    arr.forEach(function (el, idx) {\n        if (idx >= lastIndex) {\n            // No shuffling last element\n            // One before last is always swapped with last at the end of the loop\n            // Since previous swaps can move last element into other places, there is still a random shuffle of last element\n            return;\n        }\n        // Swap el with one of the higher elements randomly\n        var rnd;\n        rnd = fullShuffle\n            ? // Pick random number from idx+1 to lastIndex (Modified algorithm, (N-1)! combinations)\n                // Math.random -> [0, 1) -> [0, lastIndex-idx ) --floor-> [0, lastIndex-idx-1]\n                // rnd = [0, lastIndex-idx-1] + 1 + idx = [1 + idx, lastIndex]\n                // (Original algorithm would pick rnd = [idx, lastIndex], thus any element could arrive back into its slot)\n                Math.floor(Math.random() * (lastIndex - idx)) + 1 + idx\n            : // Pick random number from idx to lastIndex (Unmodified Richard Durstenfeld, N! combinations)\n                Math.floor(Math.random() * (lastIndex + 1 - idx)) + idx;\n        arr[idx] = arr[rnd];\n        arr[rnd] = el;\n    });\n    return arr;\n};\n/**\n * Return an array of numbers relative to maxLevel || 127 ordered in a Sine wave format\n * This is used by the `sizzle` param of the `clip` method to add a rudimentary variation to the accent of each note\n * @param {Number} maxLevel A number between not more than 127\n * @return {Array}  Example output [63, 90, 110, 127, 110, 90, 63, 0, 63, 90, 110, 127, 110, 90, 63, 0]\n */\nexports.sizzleMap = function (maxLevel) {\n    if (maxLevel === void 0) { maxLevel = 127; }\n    var pi = Math.PI;\n    var piArr = [\n        pi / 6,\n        pi / 4,\n        pi / 3,\n        pi / 2,\n        (2 * pi) / 3,\n        (3 * pi) / 4,\n        (5 * pi) / 6,\n        pi,\n    ];\n    var piArrRev = [\n        0,\n        pi / 6,\n        pi / 4,\n        pi / 3,\n        pi / 2,\n        (2 * pi) / 3,\n        (3 * pi) / 4,\n        (5 * pi) / 6,\n    ];\n    piArrRev.reverse();\n    var arr = piArr.concat(piArrRev);\n    return arr.map(function (element) { return Math.round(Math.sin(element) * maxLevel); });\n};\n/**\n * Pick one item randomly from an array and return it\n * @param arr\n */\nexports.pickOne = function (arr) {\n    return arr.length > 1 ? arr[Math.round(Math.random())] : arr[0];\n};\n/**\n * Boolean generator\n */\nexports.dice = function () { return !!Math.round(Math.random()); };\n/**\n * Polyfill for Array.prototype.flat\n */\nexports.flat = function (arr) {\n    return arr.reduce(function (acc, val) { return acc.concat(val); }, []);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Session = exports.midi = exports.arp = exports.progression = exports.getChordsByProgression = exports.getChordDegrees = exports.clip = exports.chords = exports.chord = exports.modes = exports.scales = exports.mode = exports.scale = void 0;\nvar harmonics_1 = require(\"harmonics\");\nObject.defineProperty(exports, \"scales\", { enumerable: true, get: function () { return harmonics_1.scales; } });\nObject.defineProperty(exports, \"modes\", { enumerable: true, get: function () { return harmonics_1.scales; } });\nObject.defineProperty(exports, \"chords\", { enumerable: true, get: function () { return harmonics_1.chords; } });\nObject.defineProperty(exports, \"scale\", { enumerable: true, get: function () { return harmonics_1.scale; } });\nObject.defineProperty(exports, \"mode\", { enumerable: true, get: function () { return harmonics_1.scale; } });\nObject.defineProperty(exports, \"chord\", { enumerable: true, get: function () { return harmonics_1.chord; } });\nvar browser_clip_1 = require(\"./browser-clip\");\nObject.defineProperty(exports, \"clip\", { enumerable: true, get: function () { return browser_clip_1.clip; } });\nvar progression_1 = require(\"./progression\");\nObject.defineProperty(exports, \"getChordDegrees\", { enumerable: true, get: function () { return progression_1.getChordDegrees; } });\nObject.defineProperty(exports, \"getChordsByProgression\", { enumerable: true, get: function () { return progression_1.getChordsByProgression; } });\nObject.defineProperty(exports, \"progression\", { enumerable: true, get: function () { return progression_1.progression; } });\nvar arp_1 = require(\"./arp\");\nObject.defineProperty(exports, \"arp\", { enumerable: true, get: function () { return arp_1.arp; } });\nvar midi_1 = require(\"./midi\");\nObject.defineProperty(exports, \"midi\", { enumerable: true, get: function () { return midi_1.midi; } });\nvar session_1 = require(\"./session\");\nObject.defineProperty(exports, \"Session\", { enumerable: true, get: function () { return session_1.Session; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.progression = exports.getChordsByProgression = exports.getChordDegrees = void 0;\nvar harmonics_1 = require(\"harmonics\");\nvar utils_1 = require(\"./utils\");\n/**\n * Get the chords that go with a given scale/mode\n * This is useful only in case you want to check what chords work with a scale/mode\n * so that you can come up with chord progressions\n * @param  {String} mode e.g. major\n * @return {Array} e.g.['I', 'ii', 'iii', 'IV', 'V', 'vi', 'vii°']\n */\nexports.getChordDegrees = function (mode) {\n    var theRomans = {\n        ionian: ['I', 'ii', 'iii', 'IV', 'V', 'vi', 'vii°'],\n        dorian: ['i', 'ii', 'III', 'IV', 'v', 'vi°', 'VII'],\n        phrygian: ['i', 'II', 'III', 'iv', 'v°', 'VI', 'vii'],\n        lydian: ['I', 'II', 'iii', 'iv°', 'V', 'vi', 'vii'],\n        mixolydian: ['I', 'ii', 'iii°', 'IV', 'v', 'vi', 'VII'],\n        aeolian: ['i', 'ii°', 'III', 'iv', 'v', 'VI', 'VII'],\n        locrian: ['i°', 'II', 'iii', 'iv', 'V', 'VI', 'vii'],\n        'melodic minor': ['i', 'ii', 'III+', 'IV', 'V', 'vi°', 'vii°'],\n        'harmonic minor': ['i', 'ii°', 'III+', 'iv', 'V', 'VI', 'vii°'],\n    };\n    theRomans.major = theRomans.ionian;\n    theRomans.minor = theRomans.aeolian;\n    return theRomans[mode] || [];\n};\nvar idxByDegree = {\n    i: 0,\n    ii: 1,\n    iii: 2,\n    iv: 3,\n    v: 4,\n    vi: 5,\n    vii: 6,\n};\n/**\n * Get a chord name from degree\n * @param  {String} roman e.g. ii OR ii° OR V7\n * @return {String} e.g. m OR m7b5 OR Maj7\n */\nvar getChordName = function (roman) {\n    // remove any non character\n    var str = roman.replace(/\\W/g, '');\n    var prefix = 'M';\n    // check if it s lowercase\n    if (str.toLowerCase() === str) {\n        prefix = 'm';\n    }\n    if (roman.indexOf('°') > -1) {\n        return prefix + '7b5';\n    }\n    if (roman.indexOf('+') > -1) {\n        return prefix + '#5';\n    }\n    if (roman.indexOf('7') > -1) {\n        return prefix === 'M' ? 'maj7' : 'm7';\n    }\n    return prefix;\n};\n/**\n * Take the specified scale and degrees and return the chord names for them\n * These can be used as the value for the `notes` param of the `clip` method\n * @param {String} noteOctaveScale e.g. 'C4 major'\n * @param  {String} chordDegress e.g. 'I IV V IV'\n * @return {String} e.g. 'CM FM GM FM'\n */\nexports.getChordsByProgression = function (noteOctaveScale, chordDegress) {\n    // Set the octave if missing\n    // For example if the method was called with `C major` instead of `C4 major`, then add the 4\n    var noteOctaveScaleArr = noteOctaveScale.split(' ');\n    if (!noteOctaveScaleArr[0].match(/\\d/)) {\n        noteOctaveScaleArr[0] += '4';\n        noteOctaveScale = noteOctaveScaleArr.join(' ');\n    }\n    // Get the scale from the given note and scale/mode combination\n    var mode = harmonics_1.scale(noteOctaveScale);\n    var chordDegreesArr = chordDegress.replace(/\\s*,+\\s*/g, ' ').split(' ');\n    // Now we have something like ['i', 'ii', 'IV']\n    // Convert it to a chord family such as ['Cm', 'Dm', 'FM']\n    var chordFamily = chordDegreesArr.map(function (roman, idx) {\n        var chordName = getChordName(roman); // e.g. m\n        // get the index to be used by removing any digit or non alphabet character\n        var scaleId = idxByDegree[roman.replace(/\\W|\\d/g, '').toLowerCase()]; // e.g. 0\n        // get the note itself\n        var note = mode[scaleId]; // e.g. C\n        // get the octave of the note;\n        var oct = note.replace(/\\D+/, ''); // e.g. 4\n        // now get the chord\n        return note.replace(/\\d/, '') + chordName + '_' + oct;\n    });\n    return chordFamily.toString().replace(/,/g, ' ');\n};\nvar getProgFactory = function (_a) {\n    var T = _a.T, P = _a.P, D = _a.D;\n    return function (count) {\n        if (count === void 0) { count = 4; }\n        var chords = [];\n        // Push root/tonic\n        chords.push(utils_1.pickOne(T));\n        var i = 1;\n        // Pick a predominant\n        if (i < count - 1) {\n            chords.push(utils_1.pickOne(P));\n            i++;\n        }\n        // Try another predominant\n        if (i < count - 1 && utils_1.dice()) {\n            chords.push(utils_1.pickOne(P));\n            i++;\n        }\n        ///////// 4 or more//////////\n        if (i < count - 1) {\n            // Pick a dominant\n            chords.push(utils_1.pickOne(D));\n            i++;\n        }\n        if (i < count - 1) {\n            // Pick a predominant\n            chords.push(utils_1.pickOne(P));\n            i++;\n        }\n        if (i < count - 1) {\n            // Pick a dominant\n            chords.push(utils_1.pickOne(D));\n            i++;\n        }\n        // Pick a predominant if possible\n        if (i < count - 1 && utils_1.dice()) {\n            chords.push(utils_1.pickOne(P));\n            i++;\n        }\n        ////////////////////////////\n        // Fill the rest with dominant\n        while (i < count) {\n            chords.push(utils_1.pickOne(D));\n            i++;\n        }\n        return chords;\n    };\n};\nvar M = getProgFactory({ T: ['I', 'vi'], P: ['ii', 'IV'], D: ['V'] });\nvar m = getProgFactory({ T: ['i', 'VI'], P: ['ii', 'iv'], D: ['V'] });\n/**\n * Generate a chord progression based on basic music theory\n * where we follow tonic to optionally predominant and then dominant\n * and then randomly to predominant and continue this till we reach `count`\n * @param scaleType e.g. M (for major chord progression), m (for minor chord progression)\n * @param count e.g. 4\n */\nexports.progression = function (scaleType, count) {\n    if (count === void 0) { count = 4; }\n    if (scaleType === 'major' || scaleType === 'M') {\n        return M(count);\n    }\n    if (scaleType === 'minor' || scaleType === 'm') {\n        return m(count);\n    }\n};\n","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.arp = void 0;\nvar harmonics_1 = require(\"harmonics\");\nvar DEFAULT_OCTAVE = 4;\n/**\n * Take an array and fill it with it s own elements in the next octave till it s of the specified `len`\n * @param  {Array} arr e.g. ['a4', 'b4']\n * @param  {Number} e.g. len 4\n * @return {Array} e.g. ['a4', 'b4', 'a5', 'b5']\n */\nvar fillArr = function (arr, len) {\n    var bumpOctave = function (el) {\n        if (!el) {\n            throw new Error('Empty element');\n        }\n        var note = el.replace(/\\d/, '');\n        var oct = el.replace(/\\D/g, '') || DEFAULT_OCTAVE;\n        if (!note) {\n            throw new Error('Incorrect note');\n        }\n        return note + (+oct + 1);\n    };\n    // Create a couple of chord arrays with bumped octaves\n    // so that something like [c3, e3, g4] turns into [c4, e4, g5] and [c5, e5, g6]\n    var arr1 = arr.map(bumpOctave);\n    var arr2 = arr1.map(bumpOctave);\n    var finalArr = __spreadArrays(arr, arr1, arr2);\n    // Slice and return only as much as required\n    return finalArr.slice(0, len);\n};\n/**\n *\n * @param chordsOrParams a string that denotes comma separated chords to be used or an object with additional properties\n * By default, if this is a string, the the count of notes generated is 8 and the order is ascending.\n * For instance arp('CM FM') will result in an array of notes [C4, E4, G4, F4, A4, C4, C5, E5]\n * You can even provide Params as an object.\n * For e.g. arp({count: 8, order: '10325476', chords: 'FM_4 Gm7b5_4 AbM_4 Bbm_4 Cm_5 DbM_5 EbM_5})\n */\nexports.arp = function (chordsOrParams) {\n    var finalArr = [];\n    var params = {\n        count: 4,\n        order: '0123',\n        chords: '',\n    };\n    if (typeof chordsOrParams === 'string') {\n        params.chords = chordsOrParams;\n    }\n    else {\n        if (chordsOrParams.order && chordsOrParams.order.match(/\\D/g)) {\n            throw new TypeError('Invalid value for order');\n        }\n        if (chordsOrParams.count > 8 || chordsOrParams.count < 2) {\n            throw new TypeError('Invalid value for count');\n        }\n        // Provision a order for the notes in case only count was provided\n        if (chordsOrParams.count && !chordsOrParams.order) {\n            params.order = Array.from(Array(chordsOrParams.count).keys()).join('');\n        }\n        Object.assign(params, chordsOrParams);\n    }\n    // Chords can be passed as a string, e.g. 'CM_4 FM_4'\n    // or as an array of notes arrays e.g. [['C3', 'E3', 'G3', 'B3'], ['F3', 'A3', 'C4', 'E4']]\n    if (typeof params.chords === 'string') {\n        var chordsArr = params.chords.split(' ');\n        chordsArr.forEach(function (c, i) {\n            try {\n                var filledArr_1 = fillArr(harmonics_1.inlineChord(c), params.count);\n                // reorder the filledArr as per params.order\n                var reorderedArr = params.order\n                    .split('')\n                    .map(function (idx) { return filledArr_1[idx]; });\n                finalArr = __spreadArrays(finalArr, reorderedArr);\n            }\n            catch (e) {\n                throw new Error(\"Cannot decode chord \" + (i + 1) + \" \\\"\" + c + \"\\\" in given \\\"\" + params.chords + \"\\\"\");\n            }\n        });\n    }\n    else if (Array.isArray(params.chords)) {\n        params.chords.forEach(function (c, i) {\n            try {\n                var filledArr_2 = fillArr(c, params.count);\n                // reorder the filledArr as per params.order\n                var reorderedArr = params.order\n                    .split('')\n                    .map(function (idx) { return filledArr_2[idx]; });\n                finalArr = __spreadArrays(finalArr, reorderedArr);\n            }\n            catch (e) {\n                throw new Error(e.message + \" chord \" + (i + 1) + \" \\\"\" + c + \"\\\"\");\n            }\n        });\n    }\n    else {\n        throw new TypeError('Invalid value for chords');\n    }\n    return finalArr;\n};\n","\"use strict\";\n/*global LiveAPI:true*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.midi = void 0;\nvar fs_1 = __importDefault(require(\"fs\"));\nvar jsmidgen = __importStar(require(\"jsmidgen\"));\n/**\n * Take an array of note objects to generate a MIDI file in the same location as this method is called\n * @param  {<Array>NoteObject} notes    Notes are in the format: {note: ['c3'], level: 127, length: 64}\n * @param  {String | null} fileName If a filename is not provided, then `music.mid` is used by default\n * If `null` is passed for `fileName`, bytes are returned instead of creating a file\n * If this method is called from a browser then it will return a HTML link that you can append in your page\n * This link will enable the generated MIDI as a downloadable file.\n * @param {Number | null} bpm If a value is provided, the generated midi file will be set to this bpm value.\n */\nexports.midi = function (notes, fileName, bpm) {\n    if (fileName === void 0) { fileName = 'music.mid'; }\n    var file = createFileFromNotes(notes, bpm);\n    var bytes = file.toBytes();\n    if (fileName === null) {\n        return bytes;\n    }\n    if (!fileName.endsWith('.mid')) {\n        fileName = fileName + '.mid';\n    }\n    if (typeof window !== 'undefined' &&\n        window.URL &&\n        window.URL.createObjectURL) {\n        return createDownloadLink(bytes, fileName);\n    }\n    fs_1.default.writeFileSync(fileName, bytes, 'binary');\n    console.log(\"MIDI file generated: \" + fileName + \".\");\n};\n/**\n * Create a downloadable link\n * @param b\n */\nvar createDownloadLink = function (b, fileName) {\n    // Convert bytes to array buffer\n    // Accepted answer on https://stackoverflow.com/questions/35038884/download-file-from-bytes-in-javascript\n    var bytes = new Uint8Array(b.length);\n    for (var i = 0; i < b.length; i++) {\n        var ascii = b.charCodeAt(i);\n        bytes[i] = ascii;\n    }\n    // Create a Blob so that we can set it up with the type of file we want (for eg MIDI)\n    var blob = new Blob([bytes], { type: 'audio/midi' });\n    // Create a link element to be used (you can use an existing link on the page as well)\n    var link = document.createElement('a');\n    link.href =\n        (typeof window !== 'undefined' &&\n            typeof window.URL !== 'undefined' &&\n            typeof window.URL.createObjectURL !== 'undefined' &&\n            window.URL.createObjectURL(blob)) ||\n            '';\n    // Give the downloadable file a name\n    link.download = fileName;\n    link.innerText = 'Download MIDI file';\n    return link;\n};\nvar createFileFromNotes = function (notes, bpm) {\n    var file = new jsmidgen.File();\n    var track = new jsmidgen.Track();\n    // set the track's bpm if it is provided\n    if (typeof bpm === 'number') {\n        track.setTempo(bpm);\n    }\n    file.addTrack(track);\n    for (var _i = 0, notes_1 = notes; _i < notes_1.length; _i++) {\n        var noteObj = notes_1[_i];\n        var level = noteObj.level || 127;\n        // While writing chords (multiple notes per tick)\n        // only the first noteOn (or noteOff) needs the complete arity of the function call\n        // subsequent calls need only the first 2 args (channel and note)\n        if (noteObj.note) {\n            if (typeof noteObj.note === 'string') {\n                track.noteOn(0, noteObj.note, noteObj.length, level); // channel, pitch(note), length, velocity\n                track.noteOff(0, noteObj.note, noteObj.length, level);\n            }\n            else {\n                track.addChord(0, noteObj.note, noteObj.length, level);\n            }\n        }\n        else {\n            track.noteOff(0, '', noteObj.length);\n        }\n    }\n    return file;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","var Midi = {};\n\n(function(exported) {\n\n\tvar DEFAULT_VOLUME   = exported.DEFAULT_VOLUME   = 90;\n\tvar DEFAULT_DURATION = exported.DEFAULT_DURATION = 128;\n\tvar DEFAULT_CHANNEL  = exported.DEFAULT_CHANNEL  = 0;\n\n\t/* ******************************************************************\n\t * Utility functions\n\t ****************************************************************** */\n\n\tvar Util = {\n\n\t\tmidi_letter_pitches: { a:21, b:23, c:12, d:14, e:16, f:17, g:19 },\n\n\t\t/**\n\t\t * Convert a symbolic note name (e.g. \"c4\") to a numeric MIDI pitch (e.g.\n\t\t * 60, middle C).\n\t\t *\n\t\t * @param {string} n - The symbolic note name to parse.\n\t\t * @returns {number} The MIDI pitch that corresponds to the symbolic note\n\t\t * name.\n\t\t */\n\t\tmidiPitchFromNote: function(n) {\n\t\t\tvar matches = /([a-g])(#+|b+)?([0-9]+)$/i.exec(n);\n\t\t\tvar note = matches[1].toLowerCase(), accidental = matches[2] || '', octave = parseInt(matches[3], 10);\n\t\t\treturn (12 * octave) + Util.midi_letter_pitches[note] + (accidental.substr(0,1)=='#'?1:-1) * accidental.length;\n\t\t},\n\n\t\t/**\n\t\t * Ensure that the given argument is converted to a MIDI pitch. Note that\n\t\t * it may already be one (including a purely numeric string).\n\t\t *\n\t\t * @param {string|number} p - The pitch to convert.\n\t\t * @returns {number} The resulting numeric MIDI pitch.\n\t\t */\n\t\tensureMidiPitch: function(p) {\n\t\t\tif (typeof p == 'number' || !/[^0-9]/.test(p)) {\n\t\t\t\t// numeric pitch\n\t\t\t\treturn parseInt(p, 10);\n\t\t\t} else {\n\t\t\t\t// assume it's a note name\n\t\t\t\treturn Util.midiPitchFromNote(p);\n\t\t\t}\n\t\t},\n\n\t\tmidi_pitches_letter: { '12':'c', '13':'c#', '14':'d', '15':'d#', '16':'e', '17':'f', '18':'f#', '19':'g', '20':'g#', '21':'a', '22':'a#', '23':'b' },\n\t\tmidi_flattened_notes: { 'a#':'bb', 'c#':'db', 'd#':'eb', 'f#':'gb', 'g#':'ab' },\n\n\t\t/**\n\t\t * Convert a numeric MIDI pitch value (e.g. 60) to a symbolic note name\n\t\t * (e.g. \"c4\").\n\t\t *\n\t\t * @param {number} n - The numeric MIDI pitch value to convert.\n\t\t * @param {boolean} [returnFlattened=false] - Whether to prefer flattened\n\t\t * notes to sharpened ones. Optional, default false.\n\t\t * @returns {string} The resulting symbolic note name.\n\t\t */\n\t\tnoteFromMidiPitch: function(n, returnFlattened) {\n\t\t\tvar octave = 0, noteNum = n, noteName, returnFlattened = returnFlattened || false;\n\t\t\tif (n > 23) {\n\t\t\t\t// noteNum is on octave 1 or more\n\t\t\t\toctave = Math.floor(n/12) - 1;\n\t\t\t\t// subtract number of octaves from noteNum\n\t\t\t\tnoteNum = n - octave * 12;\n\t\t\t}\n\n\t\t\t// get note name (c#, d, f# etc)\n\t\t\tnoteName = Util.midi_pitches_letter[noteNum];\n\t\t\t// Use flattened notes if requested (e.g. f# should be output as gb)\n\t\t\tif (returnFlattened && noteName.indexOf('#') > 0) {\n\t\t\t\tnoteName = Util.midi_flattened_notes[noteName];\n\t\t\t}\n\t\t\treturn noteName + octave;\n\t\t},\n\n\t\t/**\n\t\t * Convert beats per minute (BPM) to microseconds per quarter note (MPQN).\n\t\t *\n\t\t * @param {number} bpm - A number in beats per minute.\n\t\t * @returns {number} The number of microseconds per quarter note.\n\t\t */\n\t\tmpqnFromBpm: function(bpm) {\n\t\t\tvar mpqn = Math.floor(60000000 / bpm);\n\t\t\tvar ret=[];\n\t\t\tdo {\n\t\t\t\tret.unshift(mpqn & 0xFF);\n\t\t\t\tmpqn >>= 8;\n\t\t\t} while (mpqn);\n\t\t\twhile (ret.length < 3) {\n\t\t\t\tret.push(0);\n\t\t\t}\n\t\t\treturn ret;\n\t\t},\n\n\t\t/**\n\t\t * Convert microseconds per quarter note (MPQN) to beats per minute (BPM).\n\t\t *\n\t\t * @param {number} mpqn - The number of microseconds per quarter note.\n\t\t * @returns {number} A number in beats per minute.\n\t\t */\n\t\tbpmFromMpqn: function(mpqn) {\n\t\t\tvar m = mpqn;\n\t\t\tif (typeof mpqn[0] != 'undefined') {\n\t\t\t\tm = 0;\n\t\t\t\tfor (var i=0, l=mpqn.length-1; l >= 0; ++i, --l) {\n\t\t\t\t\tm |= mpqn[i] << l;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Math.floor(60000000 / mpqn);\n\t\t},\n\n\t\t/**\n\t\t * Converts an array of bytes to a string of hexadecimal characters. Prepares\n\t\t * it to be converted into a base64 string.\n\t\t *\n\t\t * @param {Array} byteArray - Array of bytes to be converted.\n\t\t * @returns {string} Hexadecimal string, e.g. \"097B8A\".\n\t\t */\n\t\tcodes2Str: function(byteArray) {\n\t\t\treturn String.fromCharCode.apply(null, byteArray);\n\t\t},\n\n\t\t/**\n\t\t * Converts a string of hexadecimal values to an array of bytes. It can also\n\t\t * add remaining \"0\" nibbles in order to have enough bytes in the array as the\n\t\t * `finalBytes` parameter.\n\t\t *\n\t\t * @param {string} str - string of hexadecimal values e.g. \"097B8A\"\n\t\t * @param {number} [finalBytes] - Optional. The desired number of bytes\n\t\t * (not nibbles) that the returned array should contain.\n\t\t * @returns {Array} An array of nibbles.\n\t\t */\n\t\tstr2Bytes: function (str, finalBytes) {\n\t\t\tif (finalBytes) {\n\t\t\t\twhile ((str.length / 2) < finalBytes) { str = \"0\" + str; }\n\t\t\t}\n\n\t\t\tvar bytes = [];\n\t\t\tfor (var i=str.length-1; i>=0; i = i-2) {\n\t\t\t\tvar chars = i === 0 ? str[i] : str[i-1] + str[i];\n\t\t\t\tbytes.unshift(parseInt(chars, 16));\n\t\t\t}\n\n\t\t\treturn bytes;\n\t\t},\n\n\t\t/**\n\t\t * Translates number of ticks to MIDI timestamp format, returning an array\n\t\t * of bytes with the time values. MIDI has a very particular way to express\n\t\t * time; take a good look at the spec before ever touching this function.\n\t\t *\n\t\t * @param {number} ticks - Number of ticks to be translated.\n\t\t * @returns {number} Array of bytes that form the MIDI time value.\n\t\t */\n\t\ttranslateTickTime: function(ticks) {\n\t\t\tvar buffer = ticks & 0x7F;\n\n\t\t\twhile (ticks = ticks >> 7) {\n\t\t\t\tbuffer <<= 8;\n\t\t\t\tbuffer |= ((ticks & 0x7F) | 0x80);\n\t\t\t}\n\n\t\t\tvar bList = [];\n\t\t\twhile (true) {\n\t\t\t\tbList.push(buffer & 0xff);\n\n\t\t\t\tif (buffer & 0x80) { buffer >>= 8; }\n\t\t\t\telse { break; }\n\t\t\t}\n\t\t\treturn bList;\n\t\t},\n\n\t};\n\n\t/* ******************************************************************\n\t * Event class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a MIDI event.\n\t *\n\t * Parameters include:\n\t *  - time [optional number] - Ticks since previous event.\n\t *  - type [required number] - Type of event.\n\t *  - channel [required number] - Channel for the event.\n\t *  - param1 [required number] - First event parameter.\n\t *  - param2 [optional number] - Second event parameter.\n\t */\n\tvar MidiEvent = function(params) {\n\t\tif (!this) return new MidiEvent(params);\n\t\tif (params &&\n\t\t\t\t(params.type    !== null || params.type    !== undefined) &&\n\t\t\t\t(params.channel !== null || params.channel !== undefined) &&\n\t\t\t\t(params.param1  !== null || params.param1  !== undefined)) {\n\t\t\tthis.setTime(params.time);\n\t\t\tthis.setType(params.type);\n\t\t\tthis.setChannel(params.channel);\n\t\t\tthis.setParam1(params.param1);\n\t\t\tthis.setParam2(params.param2);\n\t\t}\n\t};\n\n\t// event codes\n\tMidiEvent.NOTE_OFF           = 0x80;\n\tMidiEvent.NOTE_ON            = 0x90;\n\tMidiEvent.AFTER_TOUCH        = 0xA0;\n\tMidiEvent.CONTROLLER         = 0xB0;\n\tMidiEvent.PROGRAM_CHANGE     = 0xC0;\n\tMidiEvent.CHANNEL_AFTERTOUCH = 0xD0;\n\tMidiEvent.PITCH_BEND         = 0xE0;\n\n\n\t/**\n\t * Set the time for the event in ticks since the previous event.\n\t *\n\t * @param {number} ticks - The number of ticks since the previous event. May\n\t * be zero.\n\t */\n\tMidiEvent.prototype.setTime = function(ticks) {\n\t\tthis.time = Util.translateTickTime(ticks || 0);\n\t};\n\n\t/**\n\t * Set the type of the event. Must be one of the event codes on MidiEvent.\n\t *\n\t * @param {number} type - Event type.\n\t */\n\tMidiEvent.prototype.setType = function(type) {\n\t\tif (type < MidiEvent.NOTE_OFF || type > MidiEvent.PITCH_BEND) {\n\t\t\tthrow new Error(\"Trying to set an unknown event: \" + type);\n\t\t}\n\n\t\tthis.type = type;\n\t};\n\n\t/**\n\t * Set the channel for the event. Must be between 0 and 15, inclusive.\n\t *\n\t * @param {number} channel - The event channel.\n\t */\n\tMidiEvent.prototype.setChannel = function(channel) {\n\t\tif (channel < 0 || channel > 15) {\n\t\t\tthrow new Error(\"Channel is out of bounds.\");\n\t\t}\n\n\t\tthis.channel = channel;\n\t};\n\n\t/**\n\t * Set the first parameter for the event. Must be between 0 and 255,\n\t * inclusive.\n\t *\n\t * @param {number} p - The first event parameter value.\n\t */\n\tMidiEvent.prototype.setParam1 = function(p) {\n\t\tthis.param1 = p;\n\t};\n\n\t/**\n\t * Set the second parameter for the event. Must be between 0 and 255,\n\t * inclusive.\n\t *\n\t * @param {number} p - The second event parameter value.\n\t */\n\tMidiEvent.prototype.setParam2 = function(p) {\n\t\tthis.param2 = p;\n\t};\n\n\t/**\n\t * Serialize the event to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tMidiEvent.prototype.toBytes = function() {\n\t\tvar byteArray = [];\n\n\t\tvar typeChannelByte = this.type | (this.channel & 0xF);\n\n\t\tbyteArray.push.apply(byteArray, this.time);\n\t\tbyteArray.push(typeChannelByte);\n\t\tbyteArray.push(this.param1);\n\n\t\t// Some events don't have a second parameter\n\t\tif (this.param2 !== undefined && this.param2 !== null) {\n\t\t\tbyteArray.push(this.param2);\n\t\t}\n\t\treturn byteArray;\n\t};\n\n\t/* ******************************************************************\n\t * MetaEvent class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a meta event.\n\t *\n\t * Parameters include:\n\t *  - time [optional number] - Ticks since previous event.\n\t *  - type [required number] - Type of event.\n\t *  - data [optional array|string] - Event data.\n\t */\n\tvar MetaEvent = function(params) {\n\t\tif (!this) return new MetaEvent(params);\n\t\tvar p = params || {};\n\t\tthis.setTime(params.time);\n\t\tthis.setType(params.type);\n\t\tthis.setData(params.data);\n\t};\n\n\tMetaEvent.SEQUENCE   = 0x00;\n\tMetaEvent.TEXT       = 0x01;\n\tMetaEvent.COPYRIGHT  = 0x02;\n\tMetaEvent.TRACK_NAME = 0x03;\n\tMetaEvent.INSTRUMENT = 0x04;\n\tMetaEvent.LYRIC      = 0x05;\n\tMetaEvent.MARKER     = 0x06;\n\tMetaEvent.CUE_POINT  = 0x07;\n\tMetaEvent.CHANNEL_PREFIX = 0x20;\n\tMetaEvent.END_OF_TRACK   = 0x2f;\n\tMetaEvent.TEMPO      = 0x51;\n\tMetaEvent.SMPTE      = 0x54;\n\tMetaEvent.TIME_SIG   = 0x58;\n\tMetaEvent.KEY_SIG    = 0x59;\n\tMetaEvent.SEQ_EVENT  = 0x7f;\n\n\t/**\n\t * Set the time for the event in ticks since the previous event.\n\t *\n\t * @param {number} ticks - The number of ticks since the previous event. May\n\t * be zero.\n\t */\n\tMetaEvent.prototype.setTime = function(ticks) {\n\t\tthis.time = Util.translateTickTime(ticks || 0);\n\t};\n\n\t/**\n\t * Set the type of the event. Must be one of the event codes on MetaEvent.\n\t *\n\t * @param {number} t - Event type.\n\t */\n\tMetaEvent.prototype.setType = function(t) {\n\t\tthis.type = t;\n\t};\n\n\t/**\n\t * Set the data associated with the event. May be a string or array of byte\n\t * values.\n\t *\n\t * @param {string|Array} d - Event data.\n\t */\n\tMetaEvent.prototype.setData = function(d) {\n\t\tthis.data = d;\n\t};\n\n\t/**\n\t * Serialize the event to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tMetaEvent.prototype.toBytes = function() {\n\t\tif (!this.type) {\n\t\t\tthrow new Error(\"Type for meta-event not specified.\");\n\t\t}\n\n\t\tvar byteArray = [];\n\t\tbyteArray.push.apply(byteArray, this.time);\n\t\tbyteArray.push(0xFF, this.type);\n\n\t\t// If data is an array, we assume that it contains several bytes. We\n\t\t// apend them to byteArray.\n\t\tif (Array.isArray(this.data)) {\n\t\t\tbyteArray.push(this.data.length);\n\t\t\tbyteArray.push.apply(byteArray, this.data);\n\t\t} else if (typeof this.data == 'number') {\n\t\t\tbyteArray.push(1, this.data);\n\t\t} else if (this.data !== null && this.data !== undefined) {\n\t\t\t// assume string; may be a bad assumption\n\t\t\tbyteArray.push(this.data.length);\n\t\t\tvar dataBytes = this.data.split('').map(function(x){ return x.charCodeAt(0) });\n\t\t\tbyteArray.push.apply(byteArray, dataBytes);\n\t\t} else {\n\t\t\tbyteArray.push(0);\n\t\t}\n\n\t\treturn byteArray;\n\t};\n\n\t/* ******************************************************************\n\t * Track class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a MIDI track.\n\t *\n\t * Parameters include:\n\t *  - events [optional array] - Array of events for the track.\n\t */\n\tvar Track = function(config) {\n\t\tif (!this) return new Track(config);\n\t\tvar c = config || {};\n\t\tthis.events = c.events || [];\n\t};\n\n\tTrack.START_BYTES = [0x4d, 0x54, 0x72, 0x6b];\n\tTrack.END_BYTES   = [0x00, 0xFF, 0x2F, 0x00];\n\n\t/**\n\t * Add an event to the track.\n\t *\n\t * @param {MidiEvent|MetaEvent} event - The event to add.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addEvent = function(event) {\n\t\tthis.events.push(event);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The volume for the note, defaults to\n\t * DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNoteOn = Track.prototype.noteOn = function(channel, pitch, time, velocity) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.NOTE_ON,\n\t\t\tchannel: channel,\n\t\t\tparam1: Util.ensureMidiPitch(pitch),\n\t\t\tparam2: velocity || DEFAULT_VOLUME,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-off event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The velocity the note was released,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNoteOff = Track.prototype.noteOff = function(channel, pitch, time, velocity) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.NOTE_OFF,\n\t\t\tchannel: channel,\n\t\t\tparam1: Util.ensureMidiPitch(pitch),\n\t\t\tparam2: velocity || DEFAULT_VOLUME,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on and -off event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} dur - The duration of the note, in ticks.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The velocity the note was released,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNote = Track.prototype.note = function(channel, pitch, dur, time, velocity) {\n\t\tthis.noteOn(channel, pitch, time, velocity);\n\t\tif (dur) {\n\t\t\tthis.noteOff(channel, pitch, dur, velocity);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on and -off event to the track for each pitch in an array of pitches.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {array} chord - An array of pitches, either numeric or\n\t * symbolic.\n\t * @param {number} dur - The duration of the chord, in ticks.\n\t * @param {number} [velocity=90] - The velocity of the chord,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addChord = Track.prototype.chord = function(channel, chord, dur, velocity) {\n\t\tif (!Array.isArray(chord) && !chord.length) {\n\t\t\tthrow new Error('Chord must be an array of pitches');\n\t\t}\n\t\tchord.forEach(function(note) {\n\t\t\tthis.noteOn(channel, note, 0, velocity);\n\t\t}, this);\n\t\tchord.forEach(function(note, index) {\n\t\t\tif (index === 0) {\n\t\t\t\tthis.noteOff(channel, note, dur);\n\t\t\t} else {\n\t\t\t\tthis.noteOff(channel, note);\n\t\t\t}\n\t\t}, this);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Set instrument for the track.\n\t *\n\t * @param {number} channel - The channel to set the instrument on.\n\t * @param {number} instrument - The instrument to set it to.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.setInstrument = Track.prototype.instrument = function(channel, instrument, time) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.PROGRAM_CHANGE,\n\t\t\tchannel: channel,\n\t\t\tparam1: instrument,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Set the tempo for the track.\n\t *\n\t * @param {number} bpm - The new number of beats per minute.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.setTempo = Track.prototype.tempo = function(bpm, time) {\n\t\tthis.events.push(new MetaEvent({\n\t\t\ttype: MetaEvent.TEMPO,\n\t\t\tdata: Util.mpqnFromBpm(bpm),\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Serialize the track to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tTrack.prototype.toBytes = function() {\n\t\tvar trackLength = 0;\n\t\tvar eventBytes = [];\n\t\tvar startBytes = Track.START_BYTES;\n\t\tvar endBytes   = Track.END_BYTES;\n\n\t\tvar addEventBytes = function(event) {\n\t\t\tvar bytes = event.toBytes();\n\t\t\ttrackLength += bytes.length;\n\t\t\teventBytes.push.apply(eventBytes, bytes);\n\t\t};\n\n\t\tthis.events.forEach(addEventBytes);\n\n\t\t// Add the end-of-track bytes to the sum of bytes for the track, since\n\t\t// they are counted (unlike the start-of-track ones).\n\t\ttrackLength += endBytes.length;\n\n\t\t// Makes sure that track length will fill up 4 bytes with 0s in case\n\t\t// the length is less than that (the usual case).\n\t\tvar lengthBytes = Util.str2Bytes(trackLength.toString(16), 4);\n\n\t\treturn startBytes.concat(lengthBytes, eventBytes, endBytes);\n\t};\n\n\t/* ******************************************************************\n\t * File class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a file object.\n\t *\n\t * Parameters include:\n\t *  - ticks [optional number] - Number of ticks per beat, defaults to 128.\n\t *    Must be 1-32767.\n\t *  - tracks [optional array] - Track data.\n\t */\n\tvar File = function(config){\n\t\tif (!this) return new File(config);\n\n\t\tvar c = config || {};\n\t\tif (c.ticks) {\n\t\t\tif (typeof c.ticks !== 'number') {\n\t\t\t\tthrow new Error('Ticks per beat must be a number!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (c.ticks <= 0 || c.ticks >= (1 << 15) || c.ticks % 1 !== 0) {\n\t\t\t\tthrow new Error('Ticks per beat must be an integer between 1 and 32767!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.ticks = c.ticks || 128;\n\t\tthis.tracks = c.tracks || [];\n\t};\n\n\tFile.HDR_CHUNKID     = \"MThd\";             // File magic cookie\n\tFile.HDR_CHUNK_SIZE  = \"\\x00\\x00\\x00\\x06\"; // Header length for SMF\n\tFile.HDR_TYPE0       = \"\\x00\\x00\";         // Midi Type 0 id\n\tFile.HDR_TYPE1       = \"\\x00\\x01\";         // Midi Type 1 id\n\n\t/**\n\t * Add a track to the file.\n\t *\n\t * @param {Track} track - The track to add.\n\t */\n\tFile.prototype.addTrack = function(track) {\n\t\tif (track) {\n\t\t\tthis.tracks.push(track);\n\t\t\treturn this;\n\t\t} else {\n\t\t\ttrack = new Track();\n\t\t\tthis.tracks.push(track);\n\t\t\treturn track;\n\t\t}\n\t};\n\n\t/**\n\t * Serialize the MIDI file to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tFile.prototype.toBytes = function() {\n\t\tvar trackCount = this.tracks.length.toString(16);\n\n\t\t// prepare the file header\n\t\tvar bytes = File.HDR_CHUNKID + File.HDR_CHUNK_SIZE;\n\n\t\t// set Midi type based on number of tracks\n\t\tif (parseInt(trackCount, 16) > 1) {\n\t\t\tbytes += File.HDR_TYPE1;\n\t\t} else {\n\t\t\tbytes += File.HDR_TYPE0;\n\t\t}\n\n\t\t// add the number of tracks (2 bytes)\n\t\tbytes += Util.codes2Str(Util.str2Bytes(trackCount, 2));\n\t\t// add the number of ticks per beat (currently hardcoded)\n\t\tbytes += String.fromCharCode((this.ticks/256),  this.ticks%256);;\n\n\t\t// iterate over the tracks, converting to bytes too\n\t\tthis.tracks.forEach(function(track) {\n\t\t\tbytes += Util.codes2Str(track.toBytes());\n\t\t});\n\n\t\treturn bytes;\n\t};\n\n\t/* ******************************************************************\n\t * Exports\n\t ****************************************************************** */\n\n\texported.Util = Util;\n\texported.File = File;\n\texported.Track = Track;\n\texported.Event = MidiEvent;\n\texported.MetaEvent = MetaEvent;\n\n})( Midi );\n\nif (typeof module != 'undefined' && module !== null) {\n\tmodule.exports = Midi;\n} else if (typeof exports != 'undefined' && exports !== null) {\n\texports = Midi;\n} else {\n\tthis.Midi = Midi;\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Session = void 0;\nvar channel_1 = require(\"./channel\");\nvar Session = /** @class */ (function () {\n    function Session(arr) {\n        var _this = this;\n        arr = arr || [];\n        this.sessionChannels = arr.map(function (ch, i) {\n            // Make sure ch.idx is not empty and unique in this.sessionChannels\n            ch.idx = ch.idx || i;\n            ch.idx = _this.uniqueIdx(_this.sessionChannels, ch.idx);\n            return new channel_1.Channel(ch);\n        });\n    }\n    // Return unique idx for given channels\n    Session.prototype.uniqueIdx = function (channels, idx) {\n        if (!channels) {\n            return idx || 0;\n        }\n        // Channel idx's\n        var idxs = channels.reduce(function (acc, c) {\n            return (!acc.find(function (i) { return i === c.idx; }) && acc.concat(c.idx)) || acc;\n        }, []);\n        if (!idx || idxs.find(function (i) { return i === idx; })) {\n            var newIdx_1 = channels.length;\n            while (idxs.find(function (i) { return i === newIdx_1; })) {\n                newIdx_1 = newIdx_1 + 1;\n            }\n            return newIdx_1;\n        }\n        return idx;\n    };\n    Session.prototype.createChannel = function (ch) {\n        // Make sure ch.idx is unique in this.sessionChannels\n        ch.idx = this.uniqueIdx(this.sessionChannels, ch.idx);\n        var newChannel = new channel_1.Channel(ch);\n        this.sessionChannels.push(newChannel);\n        return newChannel;\n    };\n    Object.defineProperty(Session.prototype, \"channels\", {\n        get: function () {\n            return this.sessionChannels;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Start the clips at a specific index in all the channels\n    Session.prototype.startRow = function (idx) {\n        this.sessionChannels.forEach(function (ch) {\n            ch.startClip(idx);\n        });\n    };\n    Session.prototype.play = function (params) {\n        var _this = this;\n        var channelPatterns = params.channelPatterns;\n        var clipDuration = params.clipDuration || '4:0:0';\n        var clipDurationInSeconds = Tone.Time(clipDuration).toSeconds();\n        var stopClips = function (clips, time) {\n            clips.forEach(function (c) { return c.stop(time); });\n        };\n        var startClips = function (channelIdx, clipIdx, time) {\n            return clipIdx === '-'\n                ? []\n                : _this.channels\n                    .filter(function (c) { return c.idx === channelIdx; })\n                    .map(function (c) { return c.clips[clipIdx].start(time); });\n        };\n        channelPatterns.forEach(function (_a) {\n            var channelIdx = _a.channelIdx, pattern = _a.pattern;\n            var clips = [];\n            var time = 0;\n            var prevClipIdx = '-';\n            pattern.split('').forEach(function (clipIdx) {\n                if (clipIdx !== prevClipIdx && clipIdx !== '_') {\n                    stopClips(clips, time);\n                    clips = startClips(channelIdx, clipIdx, time);\n                }\n                prevClipIdx = clipIdx;\n                time += clipDurationInSeconds;\n            });\n            stopClips(clips, time);\n        });\n    };\n    return Session;\n}());\nexports.Session = Session;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Channel = void 0;\nvar browser_clip_1 = require(\"./browser-clip\");\n/**\n * Get the next logical position to play in the session\n * Tone has a build-in method `Tone.Transport.nextSubdivision('4n')`\n * but I think it s better to round off as follows for live performance\n */\nvar getNextPos = function () {\n    var arr = Tone.Transport.position.split(':');\n    // If we are still around 0:0:0x, then set start position to 0\n    if (arr[0] === '0' && arr[1] === '0') {\n        return 0;\n    }\n    // Else set it to the next bar\n    return +arr[0] + 1 + ':0:0';\n};\n/**\n * Channel\n * A channel is made up of a Tone.js Player/Instrument, one or more\n * Tone.js sequences (known as clips in Scribbletune)\n * & optionally a set of effects (with or without presets)\n *\n * API:\n * clips -> Get all clips for this channel\n * addClip -> Add a new clip to the channel\n * startClip -> Start a clip at the provided index\n * stopClip -> Stop a clip at the provided index\n * activeClipIdx -> Get the clip that is currently playing\n */\nvar Channel = /** @class */ (function () {\n    function Channel(params) {\n        var _this = this;\n        (this.idx = params.idx || 0), (this.activePatternIdx = -1);\n        this.channelClips = [];\n        try {\n            if (params.sample) {\n                this.player = new Tone.Player(params.sample);\n            }\n            if (params.synth) {\n                this.instrument = new Tone[params.synth]();\n            }\n            if (params.samples) {\n                this.sampler = new Tone.Sampler(params.samples);\n            }\n        }\n        catch (e) {\n            throw new Error(e.message + \" in channel \" + this.idx + \" \\\"\" + (params === null || params === void 0 ? void 0 : params.name) + \"\\\"\");\n        }\n        // Filter out unrequired params and create clip params object\n        var clips = params.clips, samples = params.samples, sample = params.sample, synth = params.synth, originalParamsFiltered = __rest(params, [\"clips\", \"samples\", \"sample\", \"synth\"]);\n        params.clips.forEach(function (c, i) {\n            try {\n                _this.addClip(__assign(__assign({}, c), originalParamsFiltered));\n            }\n            catch (e) {\n                throw new Error(e.message + \" in channel \" + _this.idx + \" \\\"\" + (params === null || params === void 0 ? void 0 : params.name) + \"\\\" clip \" + (i + 1));\n            }\n        }, this);\n    }\n    Object.defineProperty(Channel.prototype, \"clips\", {\n        get: function () {\n            return this.channelClips;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Channel.prototype.startClip = function (idx) {\n        // Stop any other currently running clip\n        if (this.activePatternIdx > -1 && this.activePatternIdx !== idx) {\n            this.stopClip(this.activePatternIdx);\n        }\n        if (this.channelClips[idx] && this.channelClips[idx].state !== 'started') {\n            this.activePatternIdx = idx;\n            this.channelClips[idx].start(getNextPos());\n        }\n    };\n    Channel.prototype.stopClip = function (idx) {\n        this.channelClips[idx].stop(getNextPos());\n    };\n    Channel.prototype.addClip = function (clipParams, idx) {\n        idx = idx || this.channelClips.length;\n        if (clipParams.pattern) {\n            this.channelClips[idx] = browser_clip_1.clip(__assign({ player: this.player, instrument: this.instrument, sampler: this.sampler }, clipParams));\n        }\n        else {\n            // Allow creation of empty clips\n            this.channelClips[idx] = null;\n        }\n    };\n    Object.defineProperty(Channel.prototype, \"activeClipIdx\", {\n        get: function () {\n            return this.activePatternIdx;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Channel;\n}());\nexports.Channel = Channel;\n"],"sourceRoot":""}
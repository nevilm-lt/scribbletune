{"version":3,"sources":["webpack://scribble/webpack/universalModuleDefinition","webpack://scribble/webpack/bootstrap","webpack://scribble/./src/scales-n-chords.ts","webpack://scribble/./src/utils.ts","webpack://scribble/./node_modules/jsmidgen/lib/jsmidgen.js","webpack://scribble/./src/browser-index.ts","webpack://scribble/(webpack)/buildin/module.js","webpack://scribble/./src/browser-clip.ts","webpack://scribble/./src/progression.ts","webpack://scribble/./src/arp.ts","webpack://scribble/./src/midi.ts","webpack://scribble/external \"fs\"","webpack://scribble/./src/session.ts","webpack://scribble/./src/channel.ts","webpack://scribble/./src/clip.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__9__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","chord","scale","chords","chordMaps","scales","scaleMaps","jsmidgen_1","major","minor","ritusen","egyptian","pelog","kumoijoshi","hirajoshi","iwato","scriabin","augmented","piongio","prometheus","altered","lydian","locrian","ultralocrian","phrygian","balinese","aeolian","dorian","oriental","flamenco","mixolydian","persian","enigmatic","bebop","diminished","ichikosucho","chromatic","keys","fifth","sus4","M7sus4","aug","Mb6","M7b6","aug7","M","maj7","Δ","ma7","M7","Maj7","dom","add6","add13","M6","sixth","Mb5","M7b5","M6b5","mb6","mb6M7","min","mM7","mMaj7","mΔ","m7","min7","mi7","m6","mMaj7b6","dim","oM7","m7b5","ø","dim7","o7","o7M7","quartal","madd4","m7add11","m7add4","sus2","sus24","sus4add9","M9sus4","eleventh","Madd9","add9","add2","maj9","Δ9","maj13","Maj13","M7add13","M9b5","madd9","mMaj9","m9","m69","m13","mMaj9b6","m9b5","m11A","m11","b9sus","phryg","alt7","Maddb9","M7b9","mb6b9","match","accidental","note","scaleName","toLowerCase","pitch","Util","midiPitchFromNote","scaleNotes","toUpperCase","slice","length","note_1","noteFromMidiPitch","push","octave","replace","chordName","concat","chordNotes","forEach","idx","flat","dice","pickOne","sizzleMap","shuffle","expandStr","isNote","str","test","JSON","stringify","split","parse","arr","lastIndex","el","rnd","Math","round","random","maxLevel","pi","PI","piArr","piArrRev","reverse","map","element","sin","reduce","acc","val","exported","DEFAULT_VOLUME","DEFAULT_DURATION","DEFAULT_CHANNEL","midi_letter_pitches","a","b","e","f","g","matches","exec","parseInt","substr","ensureMidiPitch","midi_pitches_letter","midi_flattened_notes","returnFlattened","noteName","noteNum","floor","indexOf","mpqnFromBpm","bpm","mpqn","ret","unshift","bpmFromMpqn","codes2Str","byteArray","String","fromCharCode","apply","str2Bytes","finalBytes","bytes","chars","translateTickTime","ticks","buffer","bList","MidiEvent","params","this","type","undefined","channel","param1","setTime","time","setType","setChannel","setParam1","setParam2","param2","NOTE_OFF","NOTE_ON","AFTER_TOUCH","CONTROLLER","PROGRAM_CHANGE","CHANNEL_AFTERTOUCH","PITCH_BEND","Error","toBytes","typeChannelByte","MetaEvent","setData","data","SEQUENCE","TEXT","COPYRIGHT","TRACK_NAME","INSTRUMENT","LYRIC","MARKER","CUE_POINT","CHANNEL_PREFIX","END_OF_TRACK","TEMPO","SMPTE","TIME_SIG","KEY_SIG","SEQ_EVENT","Array","isArray","dataBytes","x","charCodeAt","Track","config","events","START_BYTES","END_BYTES","addEvent","event","addNoteOn","noteOn","velocity","addNoteOff","noteOff","addNote","dur","addChord","index","setInstrument","instrument","setTempo","tempo","trackLength","eventBytes","startBytes","endBytes","lengthBytes","toString","File","tracks","HDR_CHUNKID","HDR_CHUNK_SIZE","HDR_TYPE0","HDR_TYPE1","addTrack","track","trackCount","Event","Midi","Session","midi","arp","progression","getChordsByProgression","getChordDegrees","clip","modes","scales_n_chords_1","browser_clip_1","progression_1","arp_1","midi_1","session_1","webpackPolyfill","deprecate","paths","children","__assign","assign","arguments","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","y","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","renderingDuration","totalPatternDuration","recursivelyApplyPatternToDurations","utils_1","convertChordsToNotes","getNote","counter","randomNotes","num","notes","getDuration","durations","subdiv","getSeqFn","Tone","Player","start","PolySynth","Sampler","triggerAttackRelease","NoiseSynth","patternArr","char","generateSequence","context","_a","getContext","pattern","player","sample","synth","sampler","samples","Ticks","toSeconds","effects","eff","recreateToneObjectInContext","toDestination","console","warn","url","volume","chain","Sequence","callback","subdivision","subdivOrLength","patternRegularNotesCount","filter","patternRandomNotesCount","patternNotesCount","notesCount","n1","n2","smallest","largest","leastCommonMultiple","originalContext","ongoingRenderingCounter","toneObject","_dummyVoice","_buffer","paramsFromSampler","attack","curve","release","paramsFromBuffers","baseUrl","_buffers","urls","fromEntries","entries","sizzle","sizzleReps","arpegiate","amp","accentLow","offlineRendering","duration","loop","Offline","sequence","loaded","transport","setContext","offlineRenderingCallback","sync","offlineRenderClip","theRomans","ionian","idxByDegree","ii","iii","iv","vi","vii","noteOctaveScale","chordDegress","noteOctaveScaleArr","join","roman","prefix","getChordName","scaleId","oct","getProgFactory","T","D","count","scaleType","__spreadArrays","il","k","j","jl","fillArr","len","bumpOctave","arr1","arr2","chordsOrParams","finalArr","order","from","_loop_1","filledArr","reorderedArr","_i","chordsArr_1","_loop_2","_b","__createBinding","k2","__setModuleDefault","__importStar","mod","__importDefault","fs_1","jsmidgen","fileName","createFileFromNotes","endsWith","URL","createObjectURL","createDownloadLink","default","writeFileSync","log","Uint8Array","ascii","blob","Blob","link","document","createElement","href","download","innerText","file","notes_1","noteObj","level","channel_1","sessionChannels","ch","Channel","createChannel","newChannel","configurable","startRow","startClip","play","_this","channelPatterns","clipDuration","clipDurationInSeconds","Time","stopClips","clips","stop","channelIdx","prevClipIdx","clipIdx","channels","startClips","__rest","getOwnPropertySymbols","propertyIsEnumerable","clip_1","getNextPos","Transport","position","activePatternIdx","channelClips","originalParamsFiltered","addClip","stopClip","state","clipParams","hdr","clipNotes","recursivelyApplyPatternToNotes","volArr","style","beats","stepLevel","abs","accent","clipNotes_1","clipNote"],"mappings":"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","file":"scribbletune.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"fs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"fs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"scribble\"] = factory(require(\"fs\"));\n\telse\n\t\troot[\"scribble\"] = factory(root[\"fs\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__9__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.chord = exports.scale = exports.chords = exports.chordMaps = exports.scales = exports.scaleMaps = void 0;\nvar jsmidgen_1 = require(\"jsmidgen\");\n// The following scale and chord maps are generated via Tonal https://github.com/tonaljs/tonal\n// The reason to not use Tonal directly is to reduce overall file size and\n// easily enable the JS to be transpilable to EcmaScript v5 to support maxforlive device development\n// From lib point of view, almost no functionality in Scribbletune is lost because of this.\nexports.scaleMaps = {\n    major: 'WWHWWW',\n    minor: 'WHWWHW',\n    'major pentatonic': 'WWAW',\n    'ionian pentatonic': 'HHWH',\n    'mixolydian pentatonic': 'HHWA',\n    ritusen: 'WAWW',\n    egyptian: 'WAWA',\n    'neopolitan major pentatonic': 'HHHH',\n    'vietnamese 1': 'AWWH',\n    pelog: 'HWHH',\n    kumoijoshi: 'HHWH',\n    hirajoshi: 'WHHH',\n    iwato: 'HHHH',\n    'in-sen': 'HHWA',\n    'lydian pentatonic': 'HWHH',\n    'malkos raga': 'AWAW',\n    'locrian pentatonic': 'AWHH',\n    'minor pentatonic': 'AWWA',\n    'minor six pentatonic': 'AWWW',\n    'flat three pentatonic': 'WHHW',\n    'flat six pentatonic': 'WWAH',\n    scriabin: 'HAAW',\n    'whole tone pentatonic': 'HWWW',\n    // 'lydian #5p pentatonic': 'HWWA',\n    'lydian dominant pentatonic': 'HWHA',\n    'minor #7M pentatonic': 'AWWH',\n    'super locrian pentatonic': 'AHWH',\n    'minor hexatonic': 'WHWWH',\n    augmented: 'AHAHA',\n    'major blues': 'WHHAW',\n    piongio: 'WAWWH',\n    'prometheus neopolitan': 'HAWAH',\n    prometheus: 'WWWAH',\n    'mystery #1': 'HAWWW',\n    'six tone symmetric': 'HAHAH',\n    'whole tone': 'WWWWW',\n    \"messiaen's mode #5\": 'HHHHH',\n    'minor blues': 'AWHHA',\n    'locrian major': 'WWHHWW',\n    'double harmonic lydian': 'HAWHHA',\n    'harmonic minor': 'WHWWHA',\n    altered: 'HWHWWW',\n    'locrian #2': 'WHWHWW',\n    'mixolydian b6': 'WWHWHW',\n    'lydian dominant': 'WWWHWH',\n    lydian: 'WWWHWW',\n    'lydian augmented': 'WWWWHW',\n    'dorian b2': 'HWWWWH',\n    'melodic minor': 'WHWWWW',\n    locrian: 'HWWHWW',\n    ultralocrian: 'HWHWWH',\n    'locrian 6': 'HWWHAH',\n    'augmented heptatonic': 'AHHWHA',\n    'romanian minor': 'WHAHWH',\n    'dorian #4': 'WHAHWH',\n    'lydian diminished': 'WHAHWW',\n    phrygian: 'HWWWHW',\n    'leading whole tone': 'WWWWWH',\n    'lydian minor': 'WWWHHW',\n    'phrygian dominant': 'HAHWHW',\n    balinese: 'HWWWHA',\n    'neopolitan major': 'HWWWWW',\n    aeolian: 'WHWWHW',\n    'harmonic major': 'WWHWHA',\n    'double harmonic major': 'HAHWHA',\n    dorian: 'WHWWWH',\n    'hungarian minor': 'WHAHHA',\n    'hungarian major': 'AHWHWH',\n    oriental: 'HAHHAH',\n    flamenco: 'HWHWHA',\n    'todi raga': 'HWAHHA',\n    mixolydian: 'WWHWWH',\n    persian: 'HAHHWA',\n    enigmatic: 'HAWWWH',\n    'major augmented': 'WWHAHW',\n    'lydian #9': 'AHWHWW',\n    \"messiaen's mode #4\": 'HHAHHHA',\n    'purvi raga': 'HAHHHHA',\n    'spanish heptatonic': 'HWHHWHW',\n    bebop: 'WWHWWHH',\n    'bebop minor': 'WHHHWWH',\n    'bebop major': 'WWHWHHW',\n    'bebop locrian': 'HWWHHHW',\n    'minor bebop': 'WHWWHWH',\n    diminished: 'WHWHWHW',\n    ichikosucho: 'WWHHHWW',\n    'minor six diminished': 'WHWWHHW',\n    'half-whole diminished': 'HWHWHWH',\n    'kafi raga': 'AHHWWHH',\n    \"messiaen's mode #6\": 'WWHHWWH',\n    'composite blues': 'WHHHHHWH',\n    \"messiaen's mode #3\": 'WHHWHHWH',\n    \"messiaen's mode #7\": 'HHHWHHHHW',\n    chromatic: 'HHHHHHHHHHH',\n};\n/**\n * Get a list of scales available in Scribbletune.\n * @return {Array}     [example output: ['major', 'minor', 'harmonic minor']]\n */\nexports.scales = function () { return Object.keys(exports.scaleMaps); };\nexports.chordMaps = {\n    '5th': [0, 7],\n    fifth: [0, 7],\n    'M7#5sus4': [0, 5, 8, 11],\n    '7#5sus4': [0, 5, 8, 10],\n    sus4: [0, 5, 7],\n    // 'suspended fourth': [0, 5, 7],\n    M7sus4: [0, 5, 7, 11],\n    '7sus4': [0, 5, 7, 10],\n    'suspended fourth seventh': [0, 5, 7, 10],\n    '7no5': [0, 4, 10],\n    aug: [0, 4, 8],\n    '+': [0, 4, 8],\n    '+5': [0, 4, 8],\n    augmented: [0, 4, 8],\n    Mb6: [0, 4, 20],\n    M7b6: [0, 4, 8, 11],\n    // 'major seventh flat sixth': [0, 4, 8, 11],\n    'maj7#5': [0, 4, 8, 11],\n    'maj7+5': [0, 4, 8, 11],\n    '+maj7': [0, 4, 8, 11],\n    // 'augmented seventh': [0, 4, 8, 11],\n    '7#5': [0, 4, 8, 10],\n    '+7': [0, 4, 8, 10],\n    '7aug': [0, 4, 8, 10],\n    aug7: [0, 4, 8, 10],\n    '7b13': [0, 4, 10, 20],\n    M: [0, 4, 7],\n    major: [0, 4, 7],\n    maj7: [0, 4, 7, 11],\n    Δ: [0, 4, 7, 11],\n    ma7: [0, 4, 7, 11],\n    M7: [0, 4, 7, 11],\n    Maj7: [0, 4, 7, 11],\n    // 'major seventh': [0, 4, 7, 11],\n    '7th': [0, 4, 7, 10],\n    dom: [0, 4, 7, 10],\n    // 'dominant seventh': [0, 4, 7, 10],\n    add6: [0, 4, 7, 9],\n    add13: [0, 4, 7, 9],\n    M6: [0, 4, 7, 9],\n    sixth: [0, 4, 7, 9],\n    '7add6': [0, 4, 7, 10, 21],\n    '7add13': [0, 4, 7, 10, 21],\n    '7b6': [0, 4, 7, 8, 10],\n    Mb5: [0, 4, 6],\n    M7b5: [0, 4, 6, 11],\n    '7b5': [0, 4, 6, 10],\n    'maj#4': [0, 4, 7, 11, 18],\n    'Δ#4': [0, 4, 7, 11, 18],\n    'Δ#11': [0, 4, 7, 11, 18],\n    lydian: [0, 4, 7, 11, 18],\n    '7#11': [0, 4, 7, 10, 18],\n    '7#4': [0, 4, 7, 10, 18],\n    // 'lydian dominant seventh': [0, 4, 7, 10, 18],\n    'M6#11': [0, 4, 7, 9, 18],\n    M6b5: [0, 4, 7, 9, 18],\n    '6#11': [0, 4, 7, 9, 18],\n    '6b5': [0, 4, 7, 9, 18],\n    '7#11b13': [0, 4, 7, 10, 18, 20],\n    '7b5b13': [0, 4, 7, 10, 18, 20],\n    'm#5': [0, 3, 8],\n    'm+': [0, 3, 8],\n    mb6: [0, 3, 8],\n    mb6M7: [0, 3, 8, 11],\n    'm7#5': [0, 3, 8, 10],\n    m: [0, 3, 7],\n    min: [0, 3, 7],\n    '-': [0, 4, 7],\n    minor: [0, 3, 7],\n    'm/ma7': [0, 3, 7, 11],\n    'm/maj7': [0, 3, 7, 11],\n    mM7: [0, 3, 7, 11],\n    mMaj7: [0, 3, 7, 11],\n    'm/M7': [0, 3, 7, 11],\n    mΔ: [0, 3, 7, 11],\n    // 'minor/major seventh': [0, 3, 7, 11],\n    m7: [0, 3, 7, 10],\n    min7: [0, 3, 7, 10],\n    mi7: [0, 3, 7, 10],\n    // 'minor seventh': [0, 3, 7, 10],\n    m6: [0, 3, 7, 9],\n    'minor sixth': [0, 3, 7, 9],\n    mMaj7b6: [0, 3, 7, 8, 11],\n    dim: [0, 3, 6],\n    '°': [0, 3, 6],\n    o: [0, 3, 6],\n    diminished: [0, 3, 6],\n    oM7: [0, 3, 6, 11],\n    m7b5: [0, 3, 6, 10],\n    ø: [0, 3, 6, 10],\n    dim7: [0, 3, 6, 9],\n    '°7': [0, 3, 6, 9],\n    o7: [0, 3, 6, 9],\n    // 'diminished seventh': [0, 3, 6, 9],\n    o7M7: [0, 3, 6, 9, 11],\n    '4th': [0, 5, 10, 15],\n    quartal: [0, 5, 10, 15],\n    madd4: [0, 3, 5, 7],\n    m7add11: [0, 3, 7, 10, 17],\n    m7add4: [0, 3, 7, 10, 17],\n    '+add#9': [0, 4, 8, 15],\n    '7#5#9': [0, 4, 8, 10, 15],\n    '7alt': [0, 4, 8, 10, 15],\n    '7#9': [0, 4, 7, 10, 15],\n    // 'dominant sharp ninth': [0, 4, 7, 10, 15],\n    '13#9': [0, 4, 7, 10, 15, 21],\n    '7#9b13': [0, 4, 7, 10, 15, 20],\n    'maj7#9#11': [0, 4, 7, 11, 15, 18],\n    '7#9#11': [0, 4, 7, 10, 15, 18],\n    '7b5#9': [0, 4, 7, 10, 15, 18],\n    '13#9#11': [0, 4, 7, 10, 15, 18, 21],\n    '7#9#11b13': [0, 4, 7, 10, 15, 18, 20],\n    sus2: [0, 2, 7],\n    // 'suspended second': [0, 2, 7],\n    'M9#5sus4': [0, 5, 8, 11, 14],\n    sus24: [0, 2, 5, 7],\n    sus4add9: [0, 2, 5, 7],\n    M9sus4: [0, 5, 7, 11, 14],\n    '11th': [0, 7, 10, 14, 17],\n    eleventh: [0, 7, 10, 14, 17],\n    '9sus4': [0, 5, 7, 10, 14],\n    '9sus': [0, 5, 7, 10, 14],\n    '13sus4': [0, 5, 7, 10, 14, 21],\n    '13sus': [0, 5, 7, 10, 14, 21],\n    '9no5': [0, 4, 10, 14],\n    '13no5': [0, 4, 10, 14, 21],\n    'M#5add9': [0, 4, 8, 14],\n    '+add9': [0, 4, 8, 14],\n    'maj9#5': [0, 4, 8, 11, 14],\n    'Maj9#5': [0, 4, 8, 11, 14],\n    '9#5': [0, 4, 8, 10, 14],\n    '9+': [0, 4, 8, 10, 14],\n    '9b13': [0, 4, 10, 14, 20],\n    Madd9: [0, 4, 7, 14],\n    add9: [0, 4, 7, 14],\n    add2: [0, 4, 7, 14],\n    maj9: [0, 4, 7, 11, 14],\n    Δ9: [0, 4, 7, 11, 14],\n    // 'major ninth': [0, 4, 7, 11, 14],\n    '9th': [0, 4, 7, 10, 14],\n    // 'dominant ninth': [0, 4, 7, 10, 14],\n    '6/9': [0, 4, 7, 9, 14],\n    'sixth/ninth': [0, 4, 7, 9, 14],\n    maj13: [0, 4, 7, 11, 14, 21],\n    Maj13: [0, 4, 7, 11, 14, 21],\n    // 'major thirteenth': [0, 4, 7, 11, 14, 21],\n    M7add13: [0, 4, 7, 9, 11, 14],\n    '13th': [0, 4, 7, 10, 14, 21],\n    // 'dominant thirteenth': [0, 4, 7, 10, 14, 21],\n    M9b5: [0, 4, 6, 11, 14],\n    '9b5': [0, 4, 6, 10, 14],\n    '13b5': [0, 4, 6, 9, 10, 14],\n    '9#5#11': [0, 4, 8, 10, 14, 18],\n    'maj9#11': [0, 4, 7, 11, 14, 18],\n    'Δ9#11': [0, 4, 7, 11, 14, 18],\n    // 'major sharp eleventh (lydian)': [0, 4, 7, 11, 14, 18],\n    '9#11': [0, 4, 7, 10, 14, 18],\n    '9+4': [0, 4, 7, 10, 14, 18],\n    '9#4': [0, 4, 7, 10, 14, 18],\n    'M13#11': [0, 4, 7, 11, 14, 18, 21],\n    'maj13#11': [0, 4, 7, 11, 14, 18, 21],\n    'M13+4': [0, 4, 7, 11, 14, 18, 21],\n    'M13#4': [0, 4, 7, 11, 14, 18, 21],\n    '13#11': [0, 4, 7, 10, 14, 18, 21],\n    '13+4': [0, 4, 7, 10, 14, 18, 21],\n    '13#4': [0, 4, 7, 10, 14, 18, 21],\n    '9#11b13': [0, 4, 7, 10, 14, 18, 20],\n    '9b5b13': [0, 4, 7, 10, 14, 18, 20],\n    'm9#5': [0, 3, 8, 10, 14],\n    madd9: [0, 3, 7, 14],\n    mMaj9: [0, 3, 7, 11, 14],\n    m9: [0, 3, 7, 10, 14],\n    // 'minor ninth': [0, 3, 7, 10, 14],\n    m69: [0, 3, 7, 9, 14],\n    m13: [0, 3, 7, 10, 14, 21],\n    // 'minor thirteenth': [0, 3, 7, 10, 14, 21],\n    mMaj9b6: [0, 3, 7, 8, 11, 14],\n    m9b5: [0, 2, 3, 6, 10],\n    m11A: [0, 3, 8, 10, 14, 17],\n    m11: [0, 3, 7, 10, 14, 17],\n    // 'minor eleventh': [0, 3, 7, 10, 14, 17],\n    b9sus: [0, 5, 7, 10, 14],\n    phryg: [0, 5, 7, 10, 13],\n    // 'suspended fourth flat ninth': [0, 5, 7, 10, 13],\n    '11b9': [0, 7, 10, 13, 17],\n    '7sus4b9b13': [0, 5, 7, 10, 13, 20],\n    '7b9b13sus4': [0, 5, 7, 10, 13, 20],\n    alt7: [0, 4, 10, 13],\n    altered: [0, 4, 10, 13],\n    '7#5b9': [0, 4, 8, 10, 13],\n    Maddb9: [0, 4, 7, 13],\n    M7b9: [0, 4, 7, 11, 13],\n    '7b9': [0, 4, 7, 10, 13],\n    // 'dominant flat ninth': [0, 4, 7, 10, 13],\n    '13b9': [0, 4, 7, 10, 13, 21],\n    '7b9b13': [0, 4, 7, 10, 13, 20],\n    '7#5b9#11': [0, 4, 8, 10, 13, 18],\n    '7b9#11': [0, 4, 7, 10, 13, 18],\n    '7b5b9': [0, 4, 7, 10, 13, 18],\n    '13b9#11': [0, 4, 7, 10, 13, 18, 21],\n    '7b9b13#11': [0, 4, 7, 10, 13, 18, 20],\n    '7b9#11b13': [0, 4, 7, 10, 13, 18, 20],\n    '7b5b9b13': [0, 4, 7, 10, 13, 18, 20],\n    mb6b9: [0, 3, 8, 13],\n    '7b9#9': [0, 4, 7, 10, 13, 15],\n};\n/**\n * Get a list of chords available in Scribbletune.\n * @return {Array}     [example output: ['maj', 'min', 'dim']]\n */\nexports.chords = function () { return Object.keys(exports.chordMaps); };\n/**\n * Generate a scale using static scale maps\n * @param name Name of the scale e.g. C4 major\n */\nexports.scale = function (name) {\n    var match = name.match(/([A-Ga-g])(b|#)?([0-9])\\s([a-zA-Z0-9\\s\\#\\-\\']+)/);\n    var root = match[1];\n    var accidental = match[2] || '';\n    var octave = match[3];\n    var note = root + accidental + octave;\n    var scaleName = match[4].toLowerCase();\n    if (!exports.scaleMaps[scaleName]) {\n        throw \"No such scale \" + scaleName;\n    }\n    var pitch = jsmidgen_1.Util.midiPitchFromNote(note);\n    var scaleNotes = [note[0].toUpperCase() + note.slice(1)];\n    for (var i = 0; i < exports.scaleMaps[scaleName].length; i++) {\n        if (exports.scaleMaps[scaleName][i] === 'A') {\n            pitch += 3;\n        }\n        else if (exports.scaleMaps[scaleName][i] === 'W') {\n            pitch += 2;\n        }\n        else {\n            // H\n            pitch += 1;\n        }\n        var note_1 = jsmidgen_1.Util.noteFromMidiPitch(pitch, accidental ? accidental === 'b' : true);\n        note_1 = note_1[0].toUpperCase() + note_1.slice(1);\n        scaleNotes.push(note_1);\n    }\n    return scaleNotes;\n};\n/**\n * Generate a chord based on static chord maps\n * @param name\n */\nexports.chord = function (name) {\n    var match = name.match(/([A-Ga-g])(b|#)?([a-zA-Z0-9\\-\\+\\#\\s\\Δ\\°\\ø\\(\\)\\/]+)(\\_[0-9])?/);\n    var root = match[1];\n    var accidental = match[2] || '';\n    var octave = (match[4] &&\n        match[4].replace(/\\D/, '')) ||\n        '4';\n    var note = root + accidental + octave;\n    var chordName = match[3];\n    if (!exports.chordMaps[chordName]) {\n        throw \"No such chord \" + chordName;\n    }\n    var chromatic = exports.scale(note + ' chromatic').concat(exports.scale(root + accidental + (+octave + 1) + ' chromatic'));\n    var chordNotes = [];\n    exports.chordMaps[chordName].forEach(function (idx) {\n        chordNotes.push(chromatic[idx]);\n    });\n    return chordNotes;\n};\n// The following methods were used to generate scale and chord maps from Tonal\n// Leaving them here till we can find a better place to park them\n// const getScaleMaps = (str) => {\n//   let scaleMap = '';\n//   const scaleNotes = scribble.scale('C4 ' + str);\n//   const firstNote = scaleNotes.shift();\n//   let currentPitch = jsmidgen.Util.midiPitchFromNote(firstNote);\n//   while (scaleNotes.length) {\n//     let note = scaleNotes.shift();\n//     let pitch = jsmidgen.Util.midiPitchFromNote(note);\n//     if (pitch - currentPitch === 3) {\n//       scaleMap += 'A';\n//     } else if (pitch - currentPitch === 2) {\n//       scaleMap += 'W';\n//     } else {\n//       scaleMap += 'H';\n//     }\n//     currentPitch = pitch;\n//   }\n//   return scaleMap;\n// };\n// scribble.scales().forEach((s) => {\n//   console.log(`\"${s.toLowerCase()}\": '${getScaleMaps(s)}',`);\n// });\n// const getChordMaps = (chordName) => {\n//   const chordMap = [0];\n//   const chordNotes = scribble.chord('C' + chordName);\n//   const firstNote = chordNotes.shift();\n//   const currentPitch = jsmidgen.Util.midiPitchFromNote(firstNote);\n//   while (chordNotes.length) {\n//     let note = chordNotes.shift();\n//     let pitch = jsmidgen.Util.midiPitchFromNote(note);\n//     chordMap.push(pitch - currentPitch);\n//   }\n//   return chordMap;\n// };\n// scribble.chords().forEach((s) => {\n//   if (unsupportedChordNames.includes(s)) {\n//     return;\n//   }\n//   chordMaps[s] = getChordMaps(s);\n// });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flat = exports.dice = exports.pickOne = exports.sizzleMap = exports.shuffle = exports.expandStr = exports.isNote = void 0;\n/**\n * Take a string input and check if it s a note name or not\n * @param  {String} str Note name e.g. c4\n * @return {Boolean} Return true for c4 or return false for something like CM\n */\nexports.isNote = function (str) {\n    return /^[a-gA-G](?:#|b)?\\d$/.test(str);\n};\n/**\n * Take a String input such as xxx[xx[xx]]\n * and return an Array as ['x', 'x', 'x', ['x', 'x', ['x', 'x']]]\n * @param  {String} str\n * @return {Array}\n */\nexports.expandStr = function (str) {\n    str = JSON.stringify(str.split(''));\n    str = str.replace(/,\"\\[\",/g, ', [');\n    str = str.replace(/\"\\[\",/g, '[');\n    str = str.replace(/,\"\\]\"/g, ']');\n    return JSON.parse(str);\n};\n/**\n * Basic Array randomizer\n * @param  {Array} arr\n * @return {Array}\n */\nexports.shuffle = function (arr) {\n    var lastIndex = arr.length - 1;\n    arr.forEach(function (el, idx) {\n        var rnd = Math.round(Math.random() * lastIndex);\n        arr[idx] = arr[rnd];\n        arr[rnd] = el;\n    });\n    return arr;\n};\n/**\n * Return an array of numbers relative to maxLevel || 127 ordered in a Sine wave format\n * This is used by the `sizzle` param of the `clip` method to add a rudimentary variation to the accent of each note\n * @param {Number} maxLevel A number between not more than 127\n * @return {Array}  Example output [63, 90, 110, 127, 110, 90, 63, 0, 63, 90, 110, 127, 110, 90, 63, 0]\n */\nexports.sizzleMap = function (maxLevel) {\n    if (maxLevel === void 0) { maxLevel = 127; }\n    var pi = Math.PI;\n    var piArr = [\n        pi / 6,\n        pi / 4,\n        pi / 3,\n        pi / 2,\n        (2 * pi) / 3,\n        (3 * pi) / 4,\n        (5 * pi) / 6,\n        pi,\n    ];\n    var piArrRev = [\n        0,\n        pi / 6,\n        pi / 4,\n        pi / 3,\n        pi / 2,\n        (2 * pi) / 3,\n        (3 * pi) / 4,\n        (5 * pi) / 6,\n    ];\n    piArrRev.reverse();\n    var arr = piArr.concat(piArrRev);\n    return arr.map(function (element) { return Math.round(Math.sin(element) * maxLevel); });\n};\n/**\n * Pick one item randomly from an array and return it\n * @param arr\n */\nexports.pickOne = function (arr) {\n    return arr.length > 1 ? arr[Math.round(Math.random())] : arr[0];\n};\n/**\n * Boolean generator\n */\nexports.dice = function () { return !!Math.round(Math.random()); };\n/**\n * Polyfill for Array.prototype.flat\n */\nexports.flat = function (arr) {\n    return arr.reduce(function (acc, val) { return acc.concat(val); }, []);\n};\n","var Midi = {};\n\n(function(exported) {\n\n\tvar DEFAULT_VOLUME   = exported.DEFAULT_VOLUME   = 90;\n\tvar DEFAULT_DURATION = exported.DEFAULT_DURATION = 128;\n\tvar DEFAULT_CHANNEL  = exported.DEFAULT_CHANNEL  = 0;\n\n\t/* ******************************************************************\n\t * Utility functions\n\t ****************************************************************** */\n\n\tvar Util = {\n\n\t\tmidi_letter_pitches: { a:21, b:23, c:12, d:14, e:16, f:17, g:19 },\n\n\t\t/**\n\t\t * Convert a symbolic note name (e.g. \"c4\") to a numeric MIDI pitch (e.g.\n\t\t * 60, middle C).\n\t\t *\n\t\t * @param {string} n - The symbolic note name to parse.\n\t\t * @returns {number} The MIDI pitch that corresponds to the symbolic note\n\t\t * name.\n\t\t */\n\t\tmidiPitchFromNote: function(n) {\n\t\t\tvar matches = /([a-g])(#+|b+)?([0-9]+)$/i.exec(n);\n\t\t\tvar note = matches[1].toLowerCase(), accidental = matches[2] || '', octave = parseInt(matches[3], 10);\n\t\t\treturn (12 * octave) + Util.midi_letter_pitches[note] + (accidental.substr(0,1)=='#'?1:-1) * accidental.length;\n\t\t},\n\n\t\t/**\n\t\t * Ensure that the given argument is converted to a MIDI pitch. Note that\n\t\t * it may already be one (including a purely numeric string).\n\t\t *\n\t\t * @param {string|number} p - The pitch to convert.\n\t\t * @returns {number} The resulting numeric MIDI pitch.\n\t\t */\n\t\tensureMidiPitch: function(p) {\n\t\t\tif (typeof p == 'number' || !/[^0-9]/.test(p)) {\n\t\t\t\t// numeric pitch\n\t\t\t\treturn parseInt(p, 10);\n\t\t\t} else {\n\t\t\t\t// assume it's a note name\n\t\t\t\treturn Util.midiPitchFromNote(p);\n\t\t\t}\n\t\t},\n\n\t\tmidi_pitches_letter: { '12':'c', '13':'c#', '14':'d', '15':'d#', '16':'e', '17':'f', '18':'f#', '19':'g', '20':'g#', '21':'a', '22':'a#', '23':'b' },\n\t\tmidi_flattened_notes: { 'a#':'bb', 'c#':'db', 'd#':'eb', 'f#':'gb', 'g#':'ab' },\n\n\t\t/**\n\t\t * Convert a numeric MIDI pitch value (e.g. 60) to a symbolic note name\n\t\t * (e.g. \"c4\").\n\t\t *\n\t\t * @param {number} n - The numeric MIDI pitch value to convert.\n\t\t * @param {boolean} [returnFlattened=false] - Whether to prefer flattened\n\t\t * notes to sharpened ones. Optional, default false.\n\t\t * @returns {string} The resulting symbolic note name.\n\t\t */\n\t\tnoteFromMidiPitch: function(n, returnFlattened) {\n\t\t\tvar octave = 0, noteNum = n, noteName, returnFlattened = returnFlattened || false;\n\t\t\tif (n > 23) {\n\t\t\t\t// noteNum is on octave 1 or more\n\t\t\t\toctave = Math.floor(n/12) - 1;\n\t\t\t\t// subtract number of octaves from noteNum\n\t\t\t\tnoteNum = n - octave * 12;\n\t\t\t}\n\n\t\t\t// get note name (c#, d, f# etc)\n\t\t\tnoteName = Util.midi_pitches_letter[noteNum];\n\t\t\t// Use flattened notes if requested (e.g. f# should be output as gb)\n\t\t\tif (returnFlattened && noteName.indexOf('#') > 0) {\n\t\t\t\tnoteName = Util.midi_flattened_notes[noteName];\n\t\t\t}\n\t\t\treturn noteName + octave;\n\t\t},\n\n\t\t/**\n\t\t * Convert beats per minute (BPM) to microseconds per quarter note (MPQN).\n\t\t *\n\t\t * @param {number} bpm - A number in beats per minute.\n\t\t * @returns {number} The number of microseconds per quarter note.\n\t\t */\n\t\tmpqnFromBpm: function(bpm) {\n\t\t\tvar mpqn = Math.floor(60000000 / bpm);\n\t\t\tvar ret=[];\n\t\t\tdo {\n\t\t\t\tret.unshift(mpqn & 0xFF);\n\t\t\t\tmpqn >>= 8;\n\t\t\t} while (mpqn);\n\t\t\twhile (ret.length < 3) {\n\t\t\t\tret.push(0);\n\t\t\t}\n\t\t\treturn ret;\n\t\t},\n\n\t\t/**\n\t\t * Convert microseconds per quarter note (MPQN) to beats per minute (BPM).\n\t\t *\n\t\t * @param {number} mpqn - The number of microseconds per quarter note.\n\t\t * @returns {number} A number in beats per minute.\n\t\t */\n\t\tbpmFromMpqn: function(mpqn) {\n\t\t\tvar m = mpqn;\n\t\t\tif (typeof mpqn[0] != 'undefined') {\n\t\t\t\tm = 0;\n\t\t\t\tfor (var i=0, l=mpqn.length-1; l >= 0; ++i, --l) {\n\t\t\t\t\tm |= mpqn[i] << l;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Math.floor(60000000 / mpqn);\n\t\t},\n\n\t\t/**\n\t\t * Converts an array of bytes to a string of hexadecimal characters. Prepares\n\t\t * it to be converted into a base64 string.\n\t\t *\n\t\t * @param {Array} byteArray - Array of bytes to be converted.\n\t\t * @returns {string} Hexadecimal string, e.g. \"097B8A\".\n\t\t */\n\t\tcodes2Str: function(byteArray) {\n\t\t\treturn String.fromCharCode.apply(null, byteArray);\n\t\t},\n\n\t\t/**\n\t\t * Converts a string of hexadecimal values to an array of bytes. It can also\n\t\t * add remaining \"0\" nibbles in order to have enough bytes in the array as the\n\t\t * `finalBytes` parameter.\n\t\t *\n\t\t * @param {string} str - string of hexadecimal values e.g. \"097B8A\"\n\t\t * @param {number} [finalBytes] - Optional. The desired number of bytes\n\t\t * (not nibbles) that the returned array should contain.\n\t\t * @returns {Array} An array of nibbles.\n\t\t */\n\t\tstr2Bytes: function (str, finalBytes) {\n\t\t\tif (finalBytes) {\n\t\t\t\twhile ((str.length / 2) < finalBytes) { str = \"0\" + str; }\n\t\t\t}\n\n\t\t\tvar bytes = [];\n\t\t\tfor (var i=str.length-1; i>=0; i = i-2) {\n\t\t\t\tvar chars = i === 0 ? str[i] : str[i-1] + str[i];\n\t\t\t\tbytes.unshift(parseInt(chars, 16));\n\t\t\t}\n\n\t\t\treturn bytes;\n\t\t},\n\n\t\t/**\n\t\t * Translates number of ticks to MIDI timestamp format, returning an array\n\t\t * of bytes with the time values. MIDI has a very particular way to express\n\t\t * time; take a good look at the spec before ever touching this function.\n\t\t *\n\t\t * @param {number} ticks - Number of ticks to be translated.\n\t\t * @returns {number} Array of bytes that form the MIDI time value.\n\t\t */\n\t\ttranslateTickTime: function(ticks) {\n\t\t\tvar buffer = ticks & 0x7F;\n\n\t\t\twhile (ticks = ticks >> 7) {\n\t\t\t\tbuffer <<= 8;\n\t\t\t\tbuffer |= ((ticks & 0x7F) | 0x80);\n\t\t\t}\n\n\t\t\tvar bList = [];\n\t\t\twhile (true) {\n\t\t\t\tbList.push(buffer & 0xff);\n\n\t\t\t\tif (buffer & 0x80) { buffer >>= 8; }\n\t\t\t\telse { break; }\n\t\t\t}\n\t\t\treturn bList;\n\t\t},\n\n\t};\n\n\t/* ******************************************************************\n\t * Event class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a MIDI event.\n\t *\n\t * Parameters include:\n\t *  - time [optional number] - Ticks since previous event.\n\t *  - type [required number] - Type of event.\n\t *  - channel [required number] - Channel for the event.\n\t *  - param1 [required number] - First event parameter.\n\t *  - param2 [optional number] - Second event parameter.\n\t */\n\tvar MidiEvent = function(params) {\n\t\tif (!this) return new MidiEvent(params);\n\t\tif (params &&\n\t\t\t\t(params.type    !== null || params.type    !== undefined) &&\n\t\t\t\t(params.channel !== null || params.channel !== undefined) &&\n\t\t\t\t(params.param1  !== null || params.param1  !== undefined)) {\n\t\t\tthis.setTime(params.time);\n\t\t\tthis.setType(params.type);\n\t\t\tthis.setChannel(params.channel);\n\t\t\tthis.setParam1(params.param1);\n\t\t\tthis.setParam2(params.param2);\n\t\t}\n\t};\n\n\t// event codes\n\tMidiEvent.NOTE_OFF           = 0x80;\n\tMidiEvent.NOTE_ON            = 0x90;\n\tMidiEvent.AFTER_TOUCH        = 0xA0;\n\tMidiEvent.CONTROLLER         = 0xB0;\n\tMidiEvent.PROGRAM_CHANGE     = 0xC0;\n\tMidiEvent.CHANNEL_AFTERTOUCH = 0xD0;\n\tMidiEvent.PITCH_BEND         = 0xE0;\n\n\n\t/**\n\t * Set the time for the event in ticks since the previous event.\n\t *\n\t * @param {number} ticks - The number of ticks since the previous event. May\n\t * be zero.\n\t */\n\tMidiEvent.prototype.setTime = function(ticks) {\n\t\tthis.time = Util.translateTickTime(ticks || 0);\n\t};\n\n\t/**\n\t * Set the type of the event. Must be one of the event codes on MidiEvent.\n\t *\n\t * @param {number} type - Event type.\n\t */\n\tMidiEvent.prototype.setType = function(type) {\n\t\tif (type < MidiEvent.NOTE_OFF || type > MidiEvent.PITCH_BEND) {\n\t\t\tthrow new Error(\"Trying to set an unknown event: \" + type);\n\t\t}\n\n\t\tthis.type = type;\n\t};\n\n\t/**\n\t * Set the channel for the event. Must be between 0 and 15, inclusive.\n\t *\n\t * @param {number} channel - The event channel.\n\t */\n\tMidiEvent.prototype.setChannel = function(channel) {\n\t\tif (channel < 0 || channel > 15) {\n\t\t\tthrow new Error(\"Channel is out of bounds.\");\n\t\t}\n\n\t\tthis.channel = channel;\n\t};\n\n\t/**\n\t * Set the first parameter for the event. Must be between 0 and 255,\n\t * inclusive.\n\t *\n\t * @param {number} p - The first event parameter value.\n\t */\n\tMidiEvent.prototype.setParam1 = function(p) {\n\t\tthis.param1 = p;\n\t};\n\n\t/**\n\t * Set the second parameter for the event. Must be between 0 and 255,\n\t * inclusive.\n\t *\n\t * @param {number} p - The second event parameter value.\n\t */\n\tMidiEvent.prototype.setParam2 = function(p) {\n\t\tthis.param2 = p;\n\t};\n\n\t/**\n\t * Serialize the event to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tMidiEvent.prototype.toBytes = function() {\n\t\tvar byteArray = [];\n\n\t\tvar typeChannelByte = this.type | (this.channel & 0xF);\n\n\t\tbyteArray.push.apply(byteArray, this.time);\n\t\tbyteArray.push(typeChannelByte);\n\t\tbyteArray.push(this.param1);\n\n\t\t// Some events don't have a second parameter\n\t\tif (this.param2 !== undefined && this.param2 !== null) {\n\t\t\tbyteArray.push(this.param2);\n\t\t}\n\t\treturn byteArray;\n\t};\n\n\t/* ******************************************************************\n\t * MetaEvent class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a meta event.\n\t *\n\t * Parameters include:\n\t *  - time [optional number] - Ticks since previous event.\n\t *  - type [required number] - Type of event.\n\t *  - data [optional array|string] - Event data.\n\t */\n\tvar MetaEvent = function(params) {\n\t\tif (!this) return new MetaEvent(params);\n\t\tvar p = params || {};\n\t\tthis.setTime(params.time);\n\t\tthis.setType(params.type);\n\t\tthis.setData(params.data);\n\t};\n\n\tMetaEvent.SEQUENCE   = 0x00;\n\tMetaEvent.TEXT       = 0x01;\n\tMetaEvent.COPYRIGHT  = 0x02;\n\tMetaEvent.TRACK_NAME = 0x03;\n\tMetaEvent.INSTRUMENT = 0x04;\n\tMetaEvent.LYRIC      = 0x05;\n\tMetaEvent.MARKER     = 0x06;\n\tMetaEvent.CUE_POINT  = 0x07;\n\tMetaEvent.CHANNEL_PREFIX = 0x20;\n\tMetaEvent.END_OF_TRACK   = 0x2f;\n\tMetaEvent.TEMPO      = 0x51;\n\tMetaEvent.SMPTE      = 0x54;\n\tMetaEvent.TIME_SIG   = 0x58;\n\tMetaEvent.KEY_SIG    = 0x59;\n\tMetaEvent.SEQ_EVENT  = 0x7f;\n\n\t/**\n\t * Set the time for the event in ticks since the previous event.\n\t *\n\t * @param {number} ticks - The number of ticks since the previous event. May\n\t * be zero.\n\t */\n\tMetaEvent.prototype.setTime = function(ticks) {\n\t\tthis.time = Util.translateTickTime(ticks || 0);\n\t};\n\n\t/**\n\t * Set the type of the event. Must be one of the event codes on MetaEvent.\n\t *\n\t * @param {number} t - Event type.\n\t */\n\tMetaEvent.prototype.setType = function(t) {\n\t\tthis.type = t;\n\t};\n\n\t/**\n\t * Set the data associated with the event. May be a string or array of byte\n\t * values.\n\t *\n\t * @param {string|Array} d - Event data.\n\t */\n\tMetaEvent.prototype.setData = function(d) {\n\t\tthis.data = d;\n\t};\n\n\t/**\n\t * Serialize the event to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tMetaEvent.prototype.toBytes = function() {\n\t\tif (!this.type) {\n\t\t\tthrow new Error(\"Type for meta-event not specified.\");\n\t\t}\n\n\t\tvar byteArray = [];\n\t\tbyteArray.push.apply(byteArray, this.time);\n\t\tbyteArray.push(0xFF, this.type);\n\n\t\t// If data is an array, we assume that it contains several bytes. We\n\t\t// apend them to byteArray.\n\t\tif (Array.isArray(this.data)) {\n\t\t\tbyteArray.push(this.data.length);\n\t\t\tbyteArray.push.apply(byteArray, this.data);\n\t\t} else if (typeof this.data == 'number') {\n\t\t\tbyteArray.push(1, this.data);\n\t\t} else if (this.data !== null && this.data !== undefined) {\n\t\t\t// assume string; may be a bad assumption\n\t\t\tbyteArray.push(this.data.length);\n\t\t\tvar dataBytes = this.data.split('').map(function(x){ return x.charCodeAt(0) });\n\t\t\tbyteArray.push.apply(byteArray, dataBytes);\n\t\t} else {\n\t\t\tbyteArray.push(0);\n\t\t}\n\n\t\treturn byteArray;\n\t};\n\n\t/* ******************************************************************\n\t * Track class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a MIDI track.\n\t *\n\t * Parameters include:\n\t *  - events [optional array] - Array of events for the track.\n\t */\n\tvar Track = function(config) {\n\t\tif (!this) return new Track(config);\n\t\tvar c = config || {};\n\t\tthis.events = c.events || [];\n\t};\n\n\tTrack.START_BYTES = [0x4d, 0x54, 0x72, 0x6b];\n\tTrack.END_BYTES   = [0x00, 0xFF, 0x2F, 0x00];\n\n\t/**\n\t * Add an event to the track.\n\t *\n\t * @param {MidiEvent|MetaEvent} event - The event to add.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addEvent = function(event) {\n\t\tthis.events.push(event);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The volume for the note, defaults to\n\t * DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNoteOn = Track.prototype.noteOn = function(channel, pitch, time, velocity) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.NOTE_ON,\n\t\t\tchannel: channel,\n\t\t\tparam1: Util.ensureMidiPitch(pitch),\n\t\t\tparam2: velocity || DEFAULT_VOLUME,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-off event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The velocity the note was released,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNoteOff = Track.prototype.noteOff = function(channel, pitch, time, velocity) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.NOTE_OFF,\n\t\t\tchannel: channel,\n\t\t\tparam1: Util.ensureMidiPitch(pitch),\n\t\t\tparam2: velocity || DEFAULT_VOLUME,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on and -off event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} dur - The duration of the note, in ticks.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The velocity the note was released,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNote = Track.prototype.note = function(channel, pitch, dur, time, velocity) {\n\t\tthis.noteOn(channel, pitch, time, velocity);\n\t\tif (dur) {\n\t\t\tthis.noteOff(channel, pitch, dur, velocity);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on and -off event to the track for each pitch in an array of pitches.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {array} chord - An array of pitches, either numeric or\n\t * symbolic.\n\t * @param {number} dur - The duration of the chord, in ticks.\n\t * @param {number} [velocity=90] - The velocity of the chord,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addChord = Track.prototype.chord = function(channel, chord, dur, velocity) {\n\t\tif (!Array.isArray(chord) && !chord.length) {\n\t\t\tthrow new Error('Chord must be an array of pitches');\n\t\t}\n\t\tchord.forEach(function(note) {\n\t\t\tthis.noteOn(channel, note, 0, velocity);\n\t\t}, this);\n\t\tchord.forEach(function(note, index) {\n\t\t\tif (index === 0) {\n\t\t\t\tthis.noteOff(channel, note, dur);\n\t\t\t} else {\n\t\t\t\tthis.noteOff(channel, note);\n\t\t\t}\n\t\t}, this);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Set instrument for the track.\n\t *\n\t * @param {number} channel - The channel to set the instrument on.\n\t * @param {number} instrument - The instrument to set it to.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.setInstrument = Track.prototype.instrument = function(channel, instrument, time) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.PROGRAM_CHANGE,\n\t\t\tchannel: channel,\n\t\t\tparam1: instrument,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Set the tempo for the track.\n\t *\n\t * @param {number} bpm - The new number of beats per minute.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.setTempo = Track.prototype.tempo = function(bpm, time) {\n\t\tthis.events.push(new MetaEvent({\n\t\t\ttype: MetaEvent.TEMPO,\n\t\t\tdata: Util.mpqnFromBpm(bpm),\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Serialize the track to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tTrack.prototype.toBytes = function() {\n\t\tvar trackLength = 0;\n\t\tvar eventBytes = [];\n\t\tvar startBytes = Track.START_BYTES;\n\t\tvar endBytes   = Track.END_BYTES;\n\n\t\tvar addEventBytes = function(event) {\n\t\t\tvar bytes = event.toBytes();\n\t\t\ttrackLength += bytes.length;\n\t\t\teventBytes.push.apply(eventBytes, bytes);\n\t\t};\n\n\t\tthis.events.forEach(addEventBytes);\n\n\t\t// Add the end-of-track bytes to the sum of bytes for the track, since\n\t\t// they are counted (unlike the start-of-track ones).\n\t\ttrackLength += endBytes.length;\n\n\t\t// Makes sure that track length will fill up 4 bytes with 0s in case\n\t\t// the length is less than that (the usual case).\n\t\tvar lengthBytes = Util.str2Bytes(trackLength.toString(16), 4);\n\n\t\treturn startBytes.concat(lengthBytes, eventBytes, endBytes);\n\t};\n\n\t/* ******************************************************************\n\t * File class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a file object.\n\t *\n\t * Parameters include:\n\t *  - ticks [optional number] - Number of ticks per beat, defaults to 128.\n\t *    Must be 1-32767.\n\t *  - tracks [optional array] - Track data.\n\t */\n\tvar File = function(config){\n\t\tif (!this) return new File(config);\n\n\t\tvar c = config || {};\n\t\tif (c.ticks) {\n\t\t\tif (typeof c.ticks !== 'number') {\n\t\t\t\tthrow new Error('Ticks per beat must be a number!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (c.ticks <= 0 || c.ticks >= (1 << 15) || c.ticks % 1 !== 0) {\n\t\t\t\tthrow new Error('Ticks per beat must be an integer between 1 and 32767!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.ticks = c.ticks || 128;\n\t\tthis.tracks = c.tracks || [];\n\t};\n\n\tFile.HDR_CHUNKID     = \"MThd\";             // File magic cookie\n\tFile.HDR_CHUNK_SIZE  = \"\\x00\\x00\\x00\\x06\"; // Header length for SMF\n\tFile.HDR_TYPE0       = \"\\x00\\x00\";         // Midi Type 0 id\n\tFile.HDR_TYPE1       = \"\\x00\\x01\";         // Midi Type 1 id\n\n\t/**\n\t * Add a track to the file.\n\t *\n\t * @param {Track} track - The track to add.\n\t */\n\tFile.prototype.addTrack = function(track) {\n\t\tif (track) {\n\t\t\tthis.tracks.push(track);\n\t\t\treturn this;\n\t\t} else {\n\t\t\ttrack = new Track();\n\t\t\tthis.tracks.push(track);\n\t\t\treturn track;\n\t\t}\n\t};\n\n\t/**\n\t * Serialize the MIDI file to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tFile.prototype.toBytes = function() {\n\t\tvar trackCount = this.tracks.length.toString(16);\n\n\t\t// prepare the file header\n\t\tvar bytes = File.HDR_CHUNKID + File.HDR_CHUNK_SIZE;\n\n\t\t// set Midi type based on number of tracks\n\t\tif (parseInt(trackCount, 16) > 1) {\n\t\t\tbytes += File.HDR_TYPE1;\n\t\t} else {\n\t\t\tbytes += File.HDR_TYPE0;\n\t\t}\n\n\t\t// add the number of tracks (2 bytes)\n\t\tbytes += Util.codes2Str(Util.str2Bytes(trackCount, 2));\n\t\t// add the number of ticks per beat (currently hardcoded)\n\t\tbytes += String.fromCharCode((this.ticks/256),  this.ticks%256);;\n\n\t\t// iterate over the tracks, converting to bytes too\n\t\tthis.tracks.forEach(function(track) {\n\t\t\tbytes += Util.codes2Str(track.toBytes());\n\t\t});\n\n\t\treturn bytes;\n\t};\n\n\t/* ******************************************************************\n\t * Exports\n\t ****************************************************************** */\n\n\texported.Util = Util;\n\texported.File = File;\n\texported.Track = Track;\n\texported.Event = MidiEvent;\n\texported.MetaEvent = MetaEvent;\n\n})( Midi );\n\nif (typeof module != 'undefined' && module !== null) {\n\tmodule.exports = Midi;\n} else if (typeof exports != 'undefined' && exports !== null) {\n\texports = Midi;\n} else {\n\tthis.Midi = Midi;\n}\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Session = exports.midi = exports.arp = exports.progression = exports.getChordsByProgression = exports.getChordDegrees = exports.clip = exports.chords = exports.chord = exports.modes = exports.scales = exports.mode = exports.scale = void 0;\nvar scales_n_chords_1 = require(\"./scales-n-chords\");\nObject.defineProperty(exports, \"scales\", { enumerable: true, get: function () { return scales_n_chords_1.scales; } });\nObject.defineProperty(exports, \"modes\", { enumerable: true, get: function () { return scales_n_chords_1.scales; } });\nObject.defineProperty(exports, \"chords\", { enumerable: true, get: function () { return scales_n_chords_1.chords; } });\nObject.defineProperty(exports, \"scale\", { enumerable: true, get: function () { return scales_n_chords_1.scale; } });\nObject.defineProperty(exports, \"mode\", { enumerable: true, get: function () { return scales_n_chords_1.scale; } });\nObject.defineProperty(exports, \"chord\", { enumerable: true, get: function () { return scales_n_chords_1.chord; } });\nvar browser_clip_1 = require(\"./browser-clip\");\nObject.defineProperty(exports, \"clip\", { enumerable: true, get: function () { return browser_clip_1.clip; } });\nvar progression_1 = require(\"./progression\");\nObject.defineProperty(exports, \"getChordDegrees\", { enumerable: true, get: function () { return progression_1.getChordDegrees; } });\nObject.defineProperty(exports, \"getChordsByProgression\", { enumerable: true, get: function () { return progression_1.getChordsByProgression; } });\nObject.defineProperty(exports, \"progression\", { enumerable: true, get: function () { return progression_1.progression; } });\nvar arp_1 = require(\"./arp\");\nObject.defineProperty(exports, \"arp\", { enumerable: true, get: function () { return arp_1.arp; } });\nvar midi_1 = require(\"./midi\");\nObject.defineProperty(exports, \"midi\", { enumerable: true, get: function () { return midi_1.midi; } });\nvar session_1 = require(\"./session\");\nObject.defineProperty(exports, \"Session\", { enumerable: true, get: function () { return session_1.Session; } });\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clip = exports.renderingDuration = exports.totalPatternDuration = exports.recursivelyApplyPatternToDurations = void 0;\nvar utils_1 = require(\"./utils\");\nvar scales_n_chords_1 = require(\"./scales-n-chords\");\nvar defaultSubdiv = '4n';\nvar defaultDur = '8n';\n/**\n * Get default params for a clip, such as root note, pattern etc\n * @return {Object}\n */\nvar getDefaultParams = function () { return ({\n    notes: ['C4'],\n    pattern: 'x',\n    shuffle: false,\n    sizzle: false,\n    sizzleReps: 1,\n    arpegiate: false,\n    subdiv: '4n',\n    amp: 100,\n    accentLow: 70,\n    randomNotes: null,\n    effects: [],\n    offlineRendering: false,\n}); };\n/**\n * HDR speed is denoted by the number of ticks per note\n * By default this is set to a quarter note (4n) to be in line with Tone.js' default subdivision\n * Technically a bar is 512 ticks long. So it's HDR speed is 512\n * @type {Object}\n */\nvar hdr = {\n    '1m': 2048,\n    '2m': 4096,\n    '3m': 6144,\n    '4m': 8192,\n    '1n': 512,\n    '2n': 256,\n    '4n': 128,\n    '8n': 64,\n    '16n': 32,\n};\nvar convertChordsToNotes = function (el) {\n    if (utils_1.isNote(el)) {\n        // A note needs to be an array so that it can accomodate chords or single notes with a single interface\n        return [el];\n    }\n    if (Array.isArray(el)) {\n        // This could be a chord provided as an array\n        // make sure it uses valid notes\n        el.forEach(function (n) {\n            if (!utils_1.isNote(n)) {\n                throw new TypeError('array must comprise valid notes');\n            }\n        });\n        return el;\n    }\n    if (!Array.isArray(el)) {\n        var c = scales_n_chords_1.chord(el);\n        if (c && c.length) {\n            return c;\n        }\n    }\n    throw new Error(\"Chord \" + el + \" not found\");\n};\nvar random = function (num) {\n    if (num === void 0) { num = 1; }\n    return Math.round(Math.random() * num);\n};\nvar getNote = function (el, params, counter) {\n    return el === 'R' && params.randomNotes\n        ? params.randomNotes[random(params.randomNotes.length - 1)]\n        : params.notes[counter % params.notes.length];\n};\nvar getDuration = function (params, counter) {\n    return params.durations\n        ? params.durations[counter % params.durations.length]\n        : params.dur || params.subdiv || defaultDur;\n};\n/**\n * @param  {Object}\n * @return {Function}\n * Take an object literal which has a Tone.js instrument and return a function that can be used\n * as the callback in Tone.Sequence https://tonejs.github.io/docs/Sequence\n */\nvar getSeqFn = function (params) {\n    var counter = 0;\n    if (params.instrument instanceof Tone.Player) {\n        return function (time, el) {\n            if (el === 'x' || el === 'R') {\n                params.instrument.start(time);\n                counter++;\n            }\n        };\n    }\n    else if (params.instrument instanceof Tone.PolySynth ||\n        params.instrument instanceof Tone.Sampler) {\n        return function (time, el) {\n            if (el === 'x' || el === 'R') {\n                params.instrument.triggerAttackRelease(getNote(el, params, counter), getDuration(params, counter), time);\n                counter++;\n            }\n        };\n    }\n    else if (params.instrument instanceof Tone.NoiseSynth) {\n        return function (time, el) {\n            if (el === 'x' || el === 'R') {\n                params.instrument.triggerAttackRelease(getDuration(params, counter), time);\n                counter++;\n            }\n        };\n    }\n    else {\n        return function (time, el) {\n            if (el === 'x' || el === 'R') {\n                params.instrument.triggerAttackRelease(getNote(el, params, counter)[0], getDuration(params, counter), time);\n                counter++;\n            }\n        };\n    }\n};\nexports.recursivelyApplyPatternToDurations = function (patternArr, length, durations) {\n    if (durations === void 0) { durations = []; }\n    patternArr.forEach(function (char) {\n        if (typeof char === 'string') {\n            if (char === 'x' || char === 'R') {\n                durations.push(length);\n            }\n            if (char === '_' && durations.length) {\n                durations[durations.length - 1] += length;\n            }\n        }\n        if (Array.isArray(char)) {\n            exports.recursivelyApplyPatternToDurations(char, length / char.length, durations);\n        }\n    });\n    return durations;\n};\nvar generateSequence = function (params, context) {\n    var _a;\n    context = context || Tone.getContext();\n    if (!params.pattern) {\n        throw new Error('No pattern provided!');\n    }\n    if (!params.player &&\n        !params.instrument &&\n        !params.sample &&\n        !params.buffer &&\n        !params.synth &&\n        !params.sampler &&\n        !params.samples) {\n        throw new Error('No player or instrument provided!');\n    }\n    if (!params.durations && !params.dur) {\n        params.durations = exports.recursivelyApplyPatternToDurations(utils_1.expandStr(params.pattern), Tone.Ticks(params.subdiv || defaultSubdiv).toSeconds());\n    }\n    /*\n      1. The params object can be used to pass a sample (sound source) OR a synth(Synth/FMSynth/AMSynth etc) or samples.\n      Scribbletune will then create a Tone.js Player or Tone.js Instrument or Tone.js Sampler respectively\n      2. It can also be used to pass a Tone.js Player object or instrument that was created elsewhere\n      (mostly by Scribbletune itself in the channel creation method)\n      Either ways, a pattern is required and it will be used to create a playable Tone.js Sequence\n       */\n    var effects = [];\n    var createEffect = function (eff) {\n        var effect = typeof eff === 'string'\n            ? new Tone[eff]({ context: context })\n            : eff.context !== context\n                ? recreateToneObjectInContext(eff, context)\n                : eff;\n        return effect.toDestination();\n    };\n    var startEffect = function (eff) {\n        return typeof eff.start === 'function' ? eff.start() : eff;\n    };\n    if (params.effects) {\n        if (!Array.isArray(params.effects)) {\n            params.effects = [params.effects];\n        }\n        effects = params.effects.map(createEffect).map(startEffect);\n    }\n    if (params.synth && !params.instrument) {\n        params.instrument = params.synth;\n        console.warn('The \"synth\" parameter will be deprecated in the future. Please use the \"instrument\" parameter instead.');\n    }\n    params.instrument =\n        params.sample || params.buffer\n            ? new Tone.Player({\n                url: params.sample || params.buffer,\n                context: context,\n            })\n            : params.sampler\n                ? params.sampler\n                : params.player\n                    ? params.player\n                    : params.samples\n                        ? new Tone.Sampler({ url: params.samples, context: context })\n                        : typeof params.instrument === 'string'\n                            ? new Tone[params.instrument]({ context: context })\n                            : params.instrument;\n    if (params.instrument.context !== context) {\n        params.instrument = recreateToneObjectInContext(params.instrument, context);\n    }\n    if (params.volume) {\n        params.instrument.volume.value = params.volume;\n    }\n    (_a = params.instrument).chain.apply(_a, effects).toDestination();\n    return new Tone.Sequence({\n        callback: getSeqFn(params),\n        events: utils_1.expandStr(params.pattern),\n        subdivision: params.subdiv || defaultSubdiv,\n        context: context,\n    });\n};\nexports.totalPatternDuration = function (pattern, subdivOrLength) {\n    return typeof subdivOrLength === 'number'\n        ? subdivOrLength * utils_1.expandStr(pattern).length\n        : Tone.Ticks(subdivOrLength).toSeconds() * utils_1.expandStr(pattern).length;\n};\nvar leastCommonMultiple = function (n1, n2) {\n    var _a = n1 < n2 ? [n1, n2] : [n2, n1], smallest = _a[0], largest = _a[1];\n    var i = largest;\n    while (i % smallest !== 0) {\n        i += largest;\n    }\n    return i;\n};\nexports.renderingDuration = function (pattern, subdivOrLength, notes, randomNotes) {\n    var patternRegularNotesCount = pattern.split('').filter(function (c) {\n        return c === 'x';\n    }).length;\n    var patternRandomNotesCount = pattern.split('').filter(function (c) {\n        return c === 'R';\n    }).length;\n    var patternNotesCount = (randomNotes === null || randomNotes === void 0 ? void 0 : randomNotes.length) ? patternRegularNotesCount\n        : patternRegularNotesCount + patternRandomNotesCount;\n    var notesCount = notes.length || 1;\n    return ((exports.totalPatternDuration(pattern, subdivOrLength) / patternNotesCount) *\n        leastCommonMultiple(notesCount, patternNotesCount));\n};\nvar ongoingRenderingCounter = 0;\nvar originalContext;\nvar recreateToneObjectInContext = function (toneObject, context) {\n    if (toneObject instanceof Tone.PolySynth) {\n        return new Tone.PolySynth(Tone[toneObject._dummyVoice.name], __assign(__assign({}, toneObject.get()), { context: context }));\n    }\n    else if (toneObject instanceof Tone.Player) {\n        return new Tone.Player({ url: toneObject._buffer, context: context });\n    }\n    else if (toneObject instanceof Tone.Sampler) {\n        var _a = toneObject.get(), attack = _a.attack, curve = _a.curve, release = _a.release, volume = _a.volume;\n        var paramsFromSampler = { attack: attack, curve: curve, release: release, volume: volume };\n        var paramsFromBuffers = {\n            baseUrl: toneObject._buffers.baseUrl,\n            urls: Object.fromEntries(toneObject._buffers._buffers.entries()),\n        };\n        return new Tone.Sampler(__assign(__assign(__assign({}, paramsFromSampler), paramsFromBuffers), { context: context }));\n    }\n    else {\n        return new Tone[toneObject.name](__assign(__assign({}, toneObject.get()), { context: context }));\n    }\n};\nvar offlineRenderClip = function (params, duration) {\n    if (!originalContext) {\n        originalContext = Tone.getContext();\n    }\n    ongoingRenderingCounter++;\n    var player = new Tone.Player({ context: originalContext, loop: true });\n    Tone.Offline(function (context) { return __awaiter(void 0, void 0, void 0, function () {\n        var sequence;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    sequence = generateSequence(params, context);\n                    return [4 /*yield*/, Tone.loaded()];\n                case 1:\n                    _a.sent();\n                    sequence.start();\n                    context.transport.start();\n                    return [2 /*return*/];\n            }\n        });\n    }); }, duration).then(function (buffer) {\n        var _a;\n        player.buffer = buffer;\n        ongoingRenderingCounter--;\n        if (ongoingRenderingCounter === 0) {\n            Tone.setContext(originalContext);\n            (_a = params.offlineRenderingCallback) === null || _a === void 0 ? void 0 : _a.call(params);\n        }\n    });\n    player.toDestination();\n    player.sync();\n    return player;\n};\n/**\n * @param  {Object}\n * @return {Tone.js Sequence Object}\n * Take a object literal that may have a Tone.js player OR instrument\n * or simply a sample or synth with a pattern and return a Tone.js sequence\n */\nexports.clip = function (params) {\n    params = __assign(__assign({}, getDefaultParams()), (params || {}));\n    // If notes is a string, split it into an array\n    if (typeof params.notes === 'string') {\n        // Remove any accidental double spaces\n        params.notes = params.notes.replace(/\\s{2,}/g, ' ');\n        params.notes = params.notes.split(' ');\n    }\n    params.notes = params.notes.map(convertChordsToNotes);\n    if (/[^x\\-_\\[\\]R]/.test(params.pattern)) {\n        throw new TypeError(\"pattern can only comprise x - _ [ ], found \" + params.pattern);\n    }\n    if (params.shuffle) {\n        params.notes = utils_1.shuffle(params.notes);\n    }\n    if (params.randomNotes && typeof params.randomNotes === 'string') {\n        params.randomNotes = params.randomNotes.replace(/\\s{2,}/g, ' ').split(/\\s/);\n    }\n    if (params.randomNotes) {\n        params.randomNotes = params.randomNotes.map(convertChordsToNotes);\n    }\n    if (params.offlineRendering) {\n        return offlineRenderClip(params, exports.renderingDuration(params.pattern, params.subdiv || defaultSubdiv, params.notes, params.randomNotes));\n    }\n    return generateSequence(params, originalContext);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.progression = exports.getChordsByProgression = exports.getChordDegrees = void 0;\nvar scales_n_chords_1 = require(\"./scales-n-chords\");\nvar utils_1 = require(\"./utils\");\n/**\n * Get the chords that go with a given scale/mode\n * This is useful only in case you want to check what chords work with a scale/mode\n * so that you can come up with chord progressions\n * @param  {String} mode e.g. major\n * @return {Array} e.g.['I', 'ii', 'iii', 'IV', 'V', 'vi', 'vii°']\n */\nexports.getChordDegrees = function (mode) {\n    var theRomans = {\n        ionian: ['I', 'ii', 'iii', 'IV', 'V', 'vi', 'vii°'],\n        dorian: ['i', 'ii', 'III', 'IV', 'v', 'vi°', 'VII'],\n        phrygian: ['i', 'II', 'III', 'iv', 'v°', 'VI', 'vii'],\n        lydian: ['I', 'II', 'iii', 'iv°', 'V', 'vi', 'vii'],\n        mixolydian: ['I', 'ii', 'iii°', 'IV', 'v', 'vi', 'VII'],\n        aeolian: ['i', 'ii°', 'III', 'iv', 'v', 'VI', 'VII'],\n        locrian: ['i°', 'II', 'iii', 'iv', 'V', 'VI', 'vii'],\n        'melodic minor': ['i', 'ii', 'III+', 'IV', 'V', 'vi°', 'vii°'],\n        'harmonic minor': ['i', 'ii°', 'III+', 'iv', 'V', 'VI', 'vii°'],\n    };\n    theRomans.major = theRomans.ionian;\n    theRomans.minor = theRomans.aeolian;\n    return theRomans[mode] || [];\n};\nvar idxByDegree = {\n    i: 0,\n    ii: 1,\n    iii: 2,\n    iv: 3,\n    v: 4,\n    vi: 5,\n    vii: 6,\n};\n/**\n * Get a chord name from degree\n * @param  {String} roman e.g. ii OR ii° OR V7\n * @return {String} e.g. m OR m7b5 OR Maj7\n */\nvar getChordName = function (roman) {\n    // remove any non character\n    var str = roman.replace(/\\W/g, '');\n    var prefix = 'M';\n    // check if it s lowercase\n    if (str.toLowerCase() === str) {\n        prefix = 'm';\n    }\n    if (roman.indexOf('°') > -1) {\n        return prefix + '7b5';\n    }\n    if (roman.indexOf('+') > -1) {\n        return prefix + '#5';\n    }\n    if (roman.indexOf('7') > -1) {\n        return prefix === 'M' ? 'Maj7' : 'm7';\n    }\n    return prefix;\n};\n/**\n * Take the specified scale and degrees and return the chord names for them\n * These can be used as the value for the `notes` param of the `clip` method\n * @param {String} noteOctaveScale e.g. 'C4 major'\n * @param  {String} chordDegress e.g. 'I IV V IV'\n * @return {String} e.g. 'CM FM GM FM'\n */\nexports.getChordsByProgression = function (noteOctaveScale, chordDegress) {\n    // Set the octave if missing\n    // For example if the method was called with `C major` instead of `C4 major`, then add the 4\n    var noteOctaveScaleArr = noteOctaveScale.split(' ');\n    if (!noteOctaveScaleArr[0].match(/\\d/)) {\n        noteOctaveScaleArr[0] += '4';\n        noteOctaveScale = noteOctaveScaleArr.join(' ');\n    }\n    // Get the scale from the given note and scale/mode combination\n    var mode = scales_n_chords_1.scale(noteOctaveScale);\n    var chordDegreesArr = chordDegress.replace(/\\s*,+\\s*/g, ' ').split(' ');\n    // Now we have something like ['i', 'ii', 'IV']\n    // Convert it to a chord family such as ['Cm', 'Dm', 'FM']\n    var chordFamily = chordDegreesArr.map(function (roman, idx) {\n        var chordName = getChordName(roman); // e.g. m\n        // get the index to be used by removing any digit or non alphabet character\n        var scaleId = idxByDegree[roman.replace(/\\W|\\d/g, '').toLowerCase()]; // e.g. 0\n        // get the note itself\n        var note = mode[scaleId]; // e.g. C\n        // get the octave of the note;\n        var oct = note.replace(/\\D+/, ''); // e.g. 4\n        // now get the chord\n        return note.replace(/\\d/, '') + chordName + '_' + oct;\n    });\n    return chordFamily.toString().replace(/,/g, ' ');\n};\nvar getProgFactory = function (_a) {\n    var T = _a.T, P = _a.P, D = _a.D;\n    return function (count) {\n        if (count === void 0) { count = 4; }\n        var chords = [];\n        // Push root/tonic\n        chords.push(utils_1.pickOne(T));\n        var i = 1;\n        // Pick a predominant\n        if (i < count - 1) {\n            chords.push(utils_1.pickOne(P));\n            i++;\n        }\n        // Try another predominant\n        if (i < count - 1 && utils_1.dice()) {\n            chords.push(utils_1.pickOne(P));\n            i++;\n        }\n        ///////// 4 or more//////////\n        if (i < count - 1) {\n            // Pick a dominant\n            chords.push(utils_1.pickOne(D));\n            i++;\n        }\n        if (i < count - 1) {\n            // Pick a predominant\n            chords.push(utils_1.pickOne(P));\n            i++;\n        }\n        if (i < count - 1) {\n            // Pick a dominant\n            chords.push(utils_1.pickOne(D));\n            i++;\n        }\n        // Pick a predominant if possible\n        if (i < count - 1 && utils_1.dice()) {\n            chords.push(utils_1.pickOne(P));\n            i++;\n        }\n        ////////////////////////////\n        // Fill the rest with dominant\n        while (i < count) {\n            chords.push(utils_1.pickOne(D));\n            i++;\n        }\n        return chords;\n    };\n};\nvar M = getProgFactory({ T: ['I', 'vi'], P: ['ii', 'IV'], D: ['V'] });\nvar m = getProgFactory({ T: ['i', 'VI'], P: ['ii', 'iv'], D: ['V'] });\n/**\n * Generate a chord progression based on basic music theory\n * where we follow tonic to optionally predominant and then dominant\n * and then randomly to predominant and continue this till we reach `count`\n * @param scaleType e.g. M (for major chord progression), m (for minor chord progression)\n * @param count e.g. 4\n */\nexports.progression = function (scaleType, count) {\n    if (count === void 0) { count = 4; }\n    if (scaleType === 'major' || scaleType === 'M') {\n        return M(count);\n    }\n    if (scaleType === 'minor' || scaleType === 'm') {\n        return m(count);\n    }\n};\n","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.arp = void 0;\nvar scales_n_chords_1 = require(\"./scales-n-chords\");\n/**\n * Take an array and fill it with it s own elements in the next octave till it s of the specified `len`\n * @param  {Array} arr e.g. ['a4', 'b4']\n * @param  {Number} e.g. len 4\n * @return {Array} e.g. ['a4', 'b4', 'a5', 'b5']\n */\nvar fillArr = function (arr, len) {\n    var bumpOctave = function (el) {\n        var note = el.replace(/\\d/, '');\n        var oct = el.replace(/\\D/g, '');\n        return note + (+oct + 1);\n    };\n    // Create a couple of chord arrays with bumped octaves\n    // so that something like [c3, e3, g4] turns into [c4, e4, g5] and [c5, e5, g6]\n    var arr1 = arr.map(bumpOctave);\n    var arr2 = arr1.map(bumpOctave);\n    var finalArr = __spreadArrays(arr, arr1, arr2);\n    // Slice and return only as much as required\n    return finalArr.slice(0, len);\n};\n/**\n *\n * @param chordsOrParams a string that denotes comma separated chords to be used or an object with additional properties\n * By default, if this is a string, the the count of notes generated is 8 and the order is ascending.\n * For instance arp('CM FM') will result in an array of notes [C4, E4, G4, F4, A4, C4, C5, E5]\n * You can even provide Params as an object.\n * For e.g. arp({count: 8, order: '10325476', chords: 'FM_4 Gm7b5_4 AbM_4 Bbm_4 Cm_5 DbM_5 EbM_5})\n */\nexports.arp = function (chordsOrParams) {\n    var finalArr = [];\n    var params = {\n        count: 4,\n        order: '0123',\n        chords: '',\n    };\n    if (typeof chordsOrParams === 'string') {\n        params.chords = chordsOrParams;\n    }\n    else {\n        if (chordsOrParams.order && chordsOrParams.order.match(/\\D/g)) {\n            throw new TypeError('Invalid value for order');\n        }\n        if (chordsOrParams.count > 8 || chordsOrParams.count < 2) {\n            throw new TypeError('Invalid value for count');\n        }\n        // Provision a order for the notes in case only count was provided\n        if (chordsOrParams.count && !chordsOrParams.order) {\n            params.order = Array.from(Array(chordsOrParams.count).keys()).join('');\n        }\n        Object.assign(params, chordsOrParams);\n    }\n    // Chords can be passed as a string, e.g. CM_4 FM_4\n    // or as an array of notes arrays e.g. [['C3', 'E3', 'G3', 'B3'], ['F3', 'A3', 'C4', 'E4']]\n    if (typeof params.chords === 'string') {\n        var chordsArr = params.chords.split(' ');\n        var _loop_1 = function (c) {\n            var filledArr = fillArr(scales_n_chords_1.chord(c), params.count);\n            // reorder the filledArr as per params.order\n            var reorderedArr = params.order\n                .split('')\n                .map(function (idx) { return filledArr[idx]; });\n            finalArr = __spreadArrays(finalArr, reorderedArr);\n        };\n        for (var _i = 0, chordsArr_1 = chordsArr; _i < chordsArr_1.length; _i++) {\n            var c = chordsArr_1[_i];\n            _loop_1(c);\n        }\n    }\n    else if (Array.isArray(params.chords)) {\n        var _loop_2 = function (c) {\n            var filledArr = fillArr(c, params.count);\n            // reorder the filledArr as per params.order\n            var reorderedArr = params.order\n                .split('')\n                .map(function (idx) { return filledArr[idx]; });\n            finalArr = __spreadArrays(finalArr, reorderedArr);\n        };\n        for (var _a = 0, _b = params.chords; _a < _b.length; _a++) {\n            var c = _b[_a];\n            _loop_2(c);\n        }\n    }\n    else {\n        throw new TypeError('Invalid value for chords');\n    }\n    return finalArr;\n};\n","\"use strict\";\n/*global LiveAPI:true*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.midi = void 0;\nvar fs_1 = __importDefault(require(\"fs\"));\nvar jsmidgen = __importStar(require(\"jsmidgen\"));\n/**\n * Take an array of note objects to generate a MIDI file in the same location as this method is called\n * @param  {<Array>NoteObject} notes    Notes are in the format: {note: ['c3'], level: 127, length: 64}\n * @param  {String | null} fileName If a filename is not provided, then `music.mid` is used by default\n * If `null` is passed for `fileName`, bytes are returned instead of creating a file\n * If this method is called from a browser then it will return a HTML link that you can append in your page\n * This link will enable the generated MIDI as a downloadable file.\n * @param {Number | null} bpm If a value is provided, the generated midi file will be set to this bpm value.\n */\nexports.midi = function (notes, fileName, bpm) {\n    if (fileName === void 0) { fileName = 'music.mid'; }\n    var file = createFileFromNotes(notes, bpm);\n    var bytes = file.toBytes();\n    if (fileName === null) {\n        return bytes;\n    }\n    if (!fileName.endsWith('.mid')) {\n        fileName = fileName + '.mid';\n    }\n    if (typeof window !== 'undefined' &&\n        window.URL &&\n        window.URL.createObjectURL) {\n        return createDownloadLink(bytes, fileName);\n    }\n    fs_1.default.writeFileSync(fileName, bytes, 'binary');\n    console.log(\"MIDI file generated: \" + fileName + \".\");\n};\n/**\n * Create a downloadable link\n * @param b\n */\nvar createDownloadLink = function (b, fileName) {\n    // Convert bytes to array buffer\n    // Accepted answer on https://stackoverflow.com/questions/35038884/download-file-from-bytes-in-javascript\n    var bytes = new Uint8Array(b.length);\n    for (var i = 0; i < b.length; i++) {\n        var ascii = b.charCodeAt(i);\n        bytes[i] = ascii;\n    }\n    // Create a Blob so that we can set it up with the type of file we want (for eg MIDI)\n    var blob = new Blob([bytes], { type: 'audio/midi' });\n    // Create a link element to be used (you can use an existing link on the page as well)\n    var link = document.createElement('a');\n    link.href =\n        (typeof window !== 'undefined' &&\n            typeof window.URL !== 'undefined' &&\n            typeof window.URL.createObjectURL !== 'undefined' &&\n            window.URL.createObjectURL(blob)) ||\n            '';\n    // Give the downloadable file a name\n    link.download = fileName;\n    link.innerText = 'Download MIDI file';\n    return link;\n};\nvar createFileFromNotes = function (notes, bpm) {\n    var file = new jsmidgen.File();\n    var track = new jsmidgen.Track();\n    // set the track's bpm if it is provided\n    if (typeof bpm === 'number') {\n        track.setTempo(bpm);\n    }\n    file.addTrack(track);\n    for (var _i = 0, notes_1 = notes; _i < notes_1.length; _i++) {\n        var noteObj = notes_1[_i];\n        var level = noteObj.level || 127;\n        // While writing chords (multiple notes per tick)\n        // only the first noteOn (or noteOff) needs the complete arity of the function call\n        // subsequent calls need only the first 2 args (channel and note)\n        if (noteObj.note) {\n            if (typeof noteObj.note === 'string') {\n                track.noteOn(0, noteObj.note, noteObj.length, level); // channel, pitch(note), length, velocity\n                track.noteOff(0, noteObj.note, noteObj.length, level);\n            }\n            else {\n                track.addChord(0, noteObj.note, noteObj.length, level);\n            }\n        }\n        else {\n            track.noteOff(0, '', noteObj.length);\n        }\n    }\n    return file;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__9__;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Session = void 0;\nvar channel_1 = require(\"./channel\");\nvar Session = /** @class */ (function () {\n    function Session(arr) {\n        arr = arr || [];\n        this.sessionChannels = arr.map(function (ch, i) {\n            ch.idx = ch.idx || i;\n            return new channel_1.Channel(ch);\n        });\n    }\n    Session.prototype.createChannel = function (ch) {\n        ch.idx = ch.idx || this.sessionChannels.length;\n        var newChannel = new channel_1.Channel(ch);\n        this.sessionChannels.push(newChannel);\n        return newChannel;\n    };\n    Object.defineProperty(Session.prototype, \"channels\", {\n        get: function () {\n            return this.sessionChannels;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Start the clips at a specific index in all the channels\n    Session.prototype.startRow = function (idx) {\n        this.sessionChannels.forEach(function (ch) {\n            ch.startClip(idx);\n        });\n    };\n    Session.prototype.play = function (params) {\n        var _this = this;\n        var channelPatterns = params.channelPatterns;\n        var clipDuration = params.clipDuration || '4:0:0';\n        var clipDurationInSeconds = Tone.Time(clipDuration).toSeconds();\n        var stopClips = function (clips, time) {\n            clips.forEach(function (c) { return c.stop(time); });\n        };\n        var startClips = function (channelIdx, clipIdx, time) {\n            return clipIdx === '-'\n                ? []\n                : _this.channels\n                    .filter(function (c) { return c.idx === channelIdx; })\n                    .map(function (c) { return c.clips[clipIdx].start(time); });\n        };\n        channelPatterns.forEach(function (_a) {\n            var channelIdx = _a.channelIdx, pattern = _a.pattern;\n            var clips = [];\n            var time = 0;\n            var prevClipIdx = '-';\n            pattern.split('').forEach(function (clipIdx) {\n                if (clipIdx !== prevClipIdx && clipIdx !== '_') {\n                    stopClips(clips, time);\n                    clips = startClips(channelIdx, clipIdx, time);\n                }\n                prevClipIdx = clipIdx;\n                time += clipDurationInSeconds;\n            });\n            stopClips(clips, time);\n        });\n    };\n    return Session;\n}());\nexports.Session = Session;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Channel = void 0;\nvar clip_1 = require(\"./clip\");\n/**\n * Get the next logical position to play in the session\n * Tone has a build-in method `Tone.Transport.nextSubdivision('4n')`\n * but I think it s better to round off as follows for live performance\n */\nvar getNextPos = function () {\n    var arr = Tone.Transport.position.split(':');\n    // If we are still around 0:0:0x, then set start position to 0\n    if (arr[0] === '0' && arr[1] === '0') {\n        return 0;\n    }\n    // Else set it to the next bar\n    return +arr[0] + 1 + ':0:0';\n};\n/**\n * Channel\n * A channel is made up of a Tone.js Player/Instrument, one or more\n * Tone.js sequences (known as clips in Scribbletune)\n * & optionally a set of effects (with or without presets)\n *\n * API:\n * clips -> Get all clips for this channel\n * addClip -> Add a new clip to the channel\n * startClip -> Start a clip at the provided index\n * stopClip -> Stop a clip at the provided index\n * activeClipIdx -> Get the clip that is currently playing\n */\nvar Channel = /** @class */ (function () {\n    function Channel(params) {\n        var _this = this;\n        (this.idx = params.idx || 0), (this.activePatternIdx = -1);\n        this.channelClips = [];\n        if (params.sample) {\n            this.player = new Tone.Player(params.sample);\n        }\n        if (params.synth) {\n            this.instrument = new Tone[params.synth]();\n        }\n        if (params.samples) {\n            this.sampler = new Tone.Sampler(params.samples);\n        }\n        // Filter out unrequired params and create clip params object\n        var clips = params.clips, samples = params.samples, sample = params.sample, synth = params.synth, originalParamsFiltered = __rest(params, [\"clips\", \"samples\", \"sample\", \"synth\"]);\n        params.clips.forEach(function (c) {\n            _this.addClip(__assign(__assign({}, c), originalParamsFiltered));\n        }, this);\n    }\n    Object.defineProperty(Channel.prototype, \"clips\", {\n        get: function () {\n            return this.channelClips;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Channel.prototype.startClip = function (idx) {\n        // Stop any other currently running clip\n        if (this.activePatternIdx > -1 && this.activePatternIdx !== idx) {\n            this.stopClip(this.activePatternIdx);\n        }\n        if (this.channelClips[idx] && this.channelClips[idx].state !== 'started') {\n            this.activePatternIdx = idx;\n            this.channelClips[idx].start(getNextPos());\n        }\n    };\n    Channel.prototype.stopClip = function (idx) {\n        this.channelClips[idx].stop(getNextPos());\n    };\n    Channel.prototype.addClip = function (clipParams, idx) {\n        idx = idx || this.channelClips.length;\n        if (clipParams.pattern) {\n            this.channelClips[idx] = clip_1.clip(__assign({ player: this.player, instrument: this.instrument, sampler: this.sampler }, clipParams));\n        }\n        else {\n            // Allow creation of empty clips\n            this.channelClips[idx] = null;\n        }\n    };\n    Object.defineProperty(Channel.prototype, \"activeClipIdx\", {\n        get: function () {\n            return this.activePatternIdx;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Channel;\n}());\nexports.Channel = Channel;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clip = void 0;\nvar utils_1 = require(\"./utils\");\nvar scales_n_chords_1 = require(\"./scales-n-chords\");\n/**\n * Get default params for a clip, such as root note, pattern etc\n * @return {Object}\n */\nvar getDefaultParams = function () { return ({\n    notes: ['C4'],\n    pattern: 'x',\n    shuffle: false,\n    sizzle: false,\n    sizzleReps: 1,\n    arpegiate: false,\n    subdiv: '4n',\n    amp: 100,\n    accentLow: 70,\n    randomNotes: null,\n    effects: [],\n    offlineRendering: false,\n}); };\n/**\n * HDR speed is denoted by the number of ticks per note\n * By default this is set to a quarter note (4n) to be in line with Tone.js' default subdivision\n * Technically a bar is 512 ticks long. So it's HDR speed is 512\n * @type {Object}\n */\nvar hdr = {\n    '1m': 2048,\n    '2m': 4096,\n    '3m': 6144,\n    '4m': 8192,\n    '1n': 512,\n    '2n': 256,\n    '4n': 128,\n    '8n': 64,\n    '16n': 32,\n};\nvar convertChordsToNotes = function (el) {\n    if (utils_1.isNote(el)) {\n        // A note needs to be an array so that it can accomodate chords or single notes with a single interface\n        return [el];\n    }\n    if (Array.isArray(el)) {\n        // This could be a chord provided as an array\n        // make sure it uses valid notes\n        el.forEach(function (n) {\n            if (!utils_1.isNote(n)) {\n                throw new TypeError('array must comprise valid notes');\n            }\n        });\n        return el;\n    }\n    if (!Array.isArray(el)) {\n        var c = scales_n_chords_1.chord(el);\n        if (c && c.length) {\n            return c;\n        }\n    }\n    throw new Error(\"Chord \" + el + \" not found\");\n};\nexports.clip = function (params) {\n    params = __assign(__assign({}, getDefaultParams()), (params || {}));\n    // If notes is a string, split it into an array\n    if (typeof params.notes === 'string') {\n        // Remove any accidental double spaces\n        params.notes = params.notes.replace(/\\s{2,}/g, ' ');\n        params.notes = params.notes.split(' ');\n    }\n    params.notes = params.notes.map(convertChordsToNotes);\n    if (/[^x\\-_\\[\\]R]/.test(params.pattern)) {\n        throw new TypeError(\"pattern can only comprise x - _ [ ], found \" + params.pattern);\n    }\n    if (params.shuffle) {\n        params.notes = utils_1.shuffle(params.notes);\n    }\n    if (params.randomNotes && typeof params.randomNotes === 'string') {\n        params.randomNotes = params.randomNotes.replace(/\\s{2,}/g, ' ').split(/\\s/);\n    }\n    if (params.randomNotes) {\n        params.randomNotes = params.randomNotes.map(convertChordsToNotes);\n    }\n    var clipNotes = [];\n    var step = 0;\n    /**\n     * Recursively apply pattern to notes\n     *\n     * Pass in a pattern array such as ['x', '-', 'x', 'x'] with a length for each element\n     * The length is the HDR speed or tick length (obtained from the hdr object in this script)\n     * If the element of this array is also a (pattern) array, then divide the length by\n     * the length of the inner array and then call the recursive function on that inner array\n     */\n    var recursivelyApplyPatternToNotes = function (patternArr, length) {\n        patternArr.forEach(function (char) {\n            if (typeof char === 'string') {\n                var note = params.notes[step];\n                if (char === 'R' && (Math.round(Math.random()) || params.randomNotes)) {\n                    note = params.randomNotes\n                        ? params.randomNotes[Math.round(Math.random() * (params.randomNotes.length - 1))]\n                        : params.notes[step];\n                }\n                if (char === 'x' || char === 'R') {\n                    step++;\n                }\n                // Push only note on OR off messages to the clip notes array\n                if (char === 'x' || char === '-' || char === 'R') {\n                    clipNotes.push({\n                        note: note,\n                        length: length,\n                        level: char === 'R' && !params.randomNotes\n                            ? params.accentLow\n                            : params.amp,\n                    });\n                }\n                // In case of an underscore, simply extend the previous note's length\n                if (char === '_' && clipNotes.length) {\n                    clipNotes[clipNotes.length - 1].length += length;\n                }\n                // If the pattern is longer than the notes, then repeat notes\n                if (step === params.notes.length) {\n                    step = 0;\n                }\n            }\n            if (Array.isArray(char)) {\n                recursivelyApplyPatternToNotes(char, length / char.length);\n            }\n        });\n    };\n    recursivelyApplyPatternToNotes(utils_1.expandStr(params.pattern), hdr[params.subdiv] || hdr['4n']);\n    // Many thanks to @R1G for the following functionality\n    if (params.sizzle) {\n        var volArr = [];\n        var style = params.sizzle === true ? 'sin' : params.sizzle;\n        var beats = clipNotes.length;\n        var amp = params.amp;\n        var sizzleReps = params.sizzleReps;\n        var stepLevel = amp / (beats / sizzleReps);\n        if (style === 'sin' || style === 'cos') {\n            for (var i = 0; i < beats; i++) {\n                var level = Math[style]((i * Math.PI) / (beats / sizzleReps)) * amp;\n                volArr.push(Math.round(Math.abs(level)));\n            }\n        }\n        if (style === 'rampUp') {\n            var level = 0;\n            for (var i = 0; i < beats; i++) {\n                if (i % (beats / sizzleReps) === 0) {\n                    level = 0;\n                }\n                else {\n                    level = level + stepLevel;\n                }\n                volArr.push(Math.round(Math.abs(level)));\n            }\n        }\n        if (style === 'rampDown') {\n            var level = amp;\n            for (var i = 0; i < beats; i++) {\n                if (i % (beats / sizzleReps) === 0) {\n                    level = amp;\n                }\n                else {\n                    level = level - stepLevel;\n                }\n                volArr.push(Math.round(Math.abs(level)));\n            }\n        }\n        for (var i = 0; i < volArr.length; i++) {\n            clipNotes[i].level = volArr[i] ? volArr[i] : 1; // Cannot allow 0 value on level\n        }\n    }\n    if (params.accent) {\n        if (/[^x\\-]/.test(params.accent)) {\n            throw new TypeError('Accent can only have x and - characters');\n        }\n        var a = 0;\n        for (var _i = 0, clipNotes_1 = clipNotes; _i < clipNotes_1.length; _i++) {\n            var clipNote = clipNotes_1[_i];\n            var level = params.accent[a] === 'x'\n                ? params.amp\n                : params.accentLow;\n            if (params.sizzle) {\n                level = (clipNote.level + level) / 2;\n            }\n            clipNote.level = Math.round(level);\n            // Step to the next character in the accent\n            a = a + 1;\n            // Reset `a` so that it can loop over the accent\n            if (a === params.accent.length) {\n                a = 0;\n            }\n        }\n    }\n    return clipNotes;\n};\n"],"sourceRoot":""}
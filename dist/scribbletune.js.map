{"version":3,"sources":["webpack://scribble/webpack/universalModuleDefinition","webpack://scribble/webpack/bootstrap","webpack://scribble/./node_modules/harmonics/main.js","webpack://scribble/./src/utils.ts","webpack://scribble/./src/browser-index.ts","webpack://scribble/./src/browser-clip.ts","webpack://scribble/./src/progression.ts","webpack://scribble/./src/arp.ts","webpack://scribble/./src/midi.ts","webpack://scribble/external \"fs\"","webpack://scribble/./node_modules/jsmidgen/lib/jsmidgen.js","webpack://scribble/(webpack)/buildin/module.js","webpack://scribble/./src/session.ts","webpack://scribble/./src/channel.ts","webpack://scribble/./src/clip.ts"],"names":["root","factory","exports","module","require","define","amd","window","__WEBPACK_EXTERNAL_MODULE__7__","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","413","JSON","parse","722","e","a","chord","chords","inlineChord","scale","scales","concat","indexOf","slice","replace","isNaN","b","map","u","h","f","length","push","includes","split","keys","flat","dice","pickOne","sizzleMap","shuffle","expandStr","isNote","str","test","stringify","arr","lastIndex","forEach","el","idx","rnd","Math","round","random","maxLevel","pi","PI","piArr","piArrRev","reverse","element","sin","reduce","acc","val","Session","midi","arp","progression","getChordsByProgression","getChordDegrees","clip","modes","harmonics_1","browser_clip_1","progression_1","arp_1","midi_1","session_1","__assign","this","assign","arguments","apply","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","y","g","_","label","sent","trys","ops","verb","iterator","v","op","TypeError","pop","renderingDuration","totalPatternDuration","recursivelyApplyPatternToDurations","utils_1","convertChordsToNotes","Array","isArray","Error","getNote","params","counter","randomNotes","num","notes","getDuration","durations","dur","subdiv","getSeqFn","instrument","Tone","Player","time","start","PolySynth","Sampler","triggerAttackRelease","NoiseSynth","patternArr","char","generateSequence","context","_a","getContext","pattern","player","sample","buffer","synth","sampler","samples","Ticks","toSeconds","effects","eff","recreateToneObjectInContext","toDestination","console","warn","url","volume","chain","Sequence","callback","events","subdivision","subdivOrLength","patternRegularNotesCount","filter","patternRandomNotesCount","patternNotesCount","notesCount","n1","n2","smallest","largest","leastCommonMultiple","originalContext","ongoingRenderingCounter","toneObject","_dummyVoice","_buffer","paramsFromSampler","attack","curve","release","paramsFromBuffers","baseUrl","_buffers","urls","fromEntries","entries","sizzle","sizzleReps","arpegiate","amp","accentLow","offlineRendering","duration","loop","Offline","sequence","loaded","transport","setContext","offlineRenderingCallback","sync","offlineRenderClip","theRomans","ionian","dorian","phrygian","lydian","mixolydian","aeolian","locrian","major","minor","idxByDegree","ii","iii","iv","vi","vii","noteOctaveScale","chordDegress","noteOctaveScaleArr","match","join","roman","chordName","prefix","toLowerCase","getChordName","scaleId","note","oct","toString","getProgFactory","T","D","count","M","scaleType","__spreadArrays","il","k","j","jl","fillArr","len","bumpOctave","arr1","arr2","chordsOrParams","finalArr","order","from","_loop_1","filledArr","reorderedArr","_i","chordsArr_1","_loop_2","_b","__createBinding","k2","undefined","__setModuleDefault","__importStar","mod","__importDefault","fs_1","jsmidgen","fileName","bpm","bytes","createFileFromNotes","toBytes","endsWith","URL","createObjectURL","createDownloadLink","default","writeFileSync","log","Uint8Array","ascii","charCodeAt","blob","Blob","type","link","document","createElement","href","download","innerText","file","File","track","Track","setTempo","addTrack","notes_1","noteObj","level","noteOn","noteOff","addChord","exported","DEFAULT_VOLUME","Util","DEFAULT_DURATION","DEFAULT_CHANNEL","midi_letter_pitches","midiPitchFromNote","matches","exec","accidental","parseInt","substr","ensureMidiPitch","midi_pitches_letter","midi_flattened_notes","noteFromMidiPitch","returnFlattened","noteName","octave","noteNum","floor","mpqnFromBpm","mpqn","ret","unshift","bpmFromMpqn","codes2Str","byteArray","String","fromCharCode","str2Bytes","finalBytes","chars","translateTickTime","ticks","bList","MidiEvent","channel","param1","setTime","setType","setChannel","setParam1","setParam2","param2","NOTE_OFF","NOTE_ON","AFTER_TOUCH","CONTROLLER","PROGRAM_CHANGE","CHANNEL_AFTERTOUCH","PITCH_BEND","typeChannelByte","MetaEvent","setData","data","SEQUENCE","TEXT","COPYRIGHT","TRACK_NAME","INSTRUMENT","LYRIC","MARKER","CUE_POINT","CHANNEL_PREFIX","END_OF_TRACK","TEMPO","SMPTE","TIME_SIG","KEY_SIG","SEQ_EVENT","dataBytes","x","config","START_BYTES","END_BYTES","addEvent","event","addNoteOn","pitch","velocity","addNoteOff","addNote","index","setInstrument","tempo","trackLength","eventBytes","startBytes","endBytes","lengthBytes","tracks","HDR_CHUNKID","HDR_CHUNK_SIZE","HDR_TYPE0","HDR_TYPE1","trackCount","Event","Midi","webpackPolyfill","deprecate","paths","children","channel_1","sessionChannels","ch","Channel","createChannel","newChannel","configurable","startRow","startClip","play","_this","channelPatterns","clipDuration","clipDurationInSeconds","Time","stopClips","clips","stop","channelIdx","prevClipIdx","clipIdx","channels","startClips","__rest","getOwnPropertySymbols","propertyIsEnumerable","clip_1","getNextPos","Transport","position","activePatternIdx","channelClips","originalParamsFiltered","addClip","stopClip","state","clipParams","hdr","clipNotes","recursivelyApplyPatternToNotes","parentNoteLength","totalLength","diff","abs","lastClipNote","isTriplet","volArr","style","beats","stepLevel","accent","clipNotes_1","clipNote"],"mappings":"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","file":"scribbletune.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"fs\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"fs\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"scribble\"] = factory(require(\"fs\"));\n\telse\n\t\troot[\"scribble\"] = factory(root[\"fs\"]);\n})(window, function(__WEBPACK_EXTERNAL_MODULE__7__) {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","(()=>{\"use strict\";var n={413:n=>{n.exports=JSON.parse('{\"5th\":\"100000010000\",\"M7#5sus4\":\"100001001001\",\"7#5sus4\":\"100001001010\",\"sus4\":\"100001010000\",\"M7sus4\":\"100001010001\",\"7sus4\":\"100001010010\",\"7no5\":\"100010000010\",\"aug\":\"100010001000\",\"M7b6\":\"100010001001\",\"maj7#5\":\"100010001001\",\"7#5\":\"100010001010\",\"7b13\":\"100010001010\",\"M\":\"100010010000\",\"maj7\":\"100010010001\",\"7th\":\"100010010010\",\"6th\":\"100010010100\",\"7add6\":\"100010010110\",\"7b6\":\"100010011010\",\"Mb5\":\"100010100000\",\"M7b5\":\"100010100001\",\"7b5\":\"100010100010\",\"maj#4\":\"100010110001\",\"7#11\":\"100010110010\",\"M6#11\":\"100010110100\",\"7#11b13\":\"100010111010\",\"m#5\":\"100100001000\",\"mb6M7\":\"100100001001\",\"m7#5\":\"100100001010\",\"m\":\"100100010000\",\"m/ma7\":\"100100010001\",\"m7\":\"100100010010\",\"m6\":\"100100010100\",\"mMaj7b6\":\"100100011001\",\"dim\":\"100100100000\",\"oM7\":\"100100100001\",\"m7b5\":\"100100100010\",\"dim7\":\"100100100100\",\"o7M7\":\"100100100101\",\"4th\":\"100101000010\",\"madd4\":\"100101010000\",\"m7add11\":\"100101010010\",\"+add#9\":\"100110001000\",\"7#5#9\":\"100110001010\",\"7#9\":\"100110010010\",\"13#9\":\"100110010110\",\"7#9b13\":\"100110011010\",\"maj7#9#11\":\"100110110001\",\"7#9#11\":\"100110110010\",\"13#9#11\":\"100110110110\",\"7#9#11b13\":\"100110111010\",\"sus2\":\"101000010000\",\"M9#5sus4\":\"101001001001\",\"sus24\":\"101001010000\",\"M9sus4\":\"101001010001\",\"11th\":\"101001010010\",\"9sus4\":\"101001010010\",\"13sus4\":\"101001010110\",\"9no5\":\"101010000010\",\"13no5\":\"101010000110\",\"M#5add9\":\"101010001000\",\"maj9#5\":\"101010001001\",\"9#5\":\"101010001010\",\"9b13\":\"101010001010\",\"Madd9\":\"101010010000\",\"maj9\":\"101010010001\",\"9th\":\"101010010010\",\"6/9\":\"101010010100\",\"maj13\":\"101010010101\",\"M7add13\":\"101010010101\",\"13th\":\"101010010110\",\"M9b5\":\"101010100001\",\"9b5\":\"101010100010\",\"13b5\":\"101010100110\",\"9#5#11\":\"101010101010\",\"maj9#11\":\"101010110001\",\"9#11\":\"101010110010\",\"69#11\":\"101010110100\",\"M13#11\":\"101010110101\",\"13#11\":\"101010110110\",\"9#11b13\":\"101010111010\",\"m9#5\":\"101100001010\",\"madd9\":\"101100010000\",\"mM9\":\"101100010001\",\"m9\":\"101100010010\",\"m69\":\"101100010100\",\"m13\":\"101100010110\",\"mMaj9b6\":\"101100011001\",\"m9b5\":\"101100100010\",\"m11A\":\"101101001010\",\"m11\":\"101101010010\",\"b9sus\":\"110001010010\",\"11b9\":\"110001010010\",\"7sus4b9b13\":\"110001011010\",\"alt7\":\"110010000010\",\"7#5b9\":\"110010001010\",\"Maddb9\":\"110010010000\",\"M7b9\":\"110010010001\",\"7b9\":\"110010010010\",\"13b9\":\"110010010110\",\"7b9b13\":\"110010011010\",\"7#5b9#11\":\"110010101010\",\"7b9#11\":\"110010110010\",\"13b9#11\":\"110010110110\",\"7b9b13#11\":\"110010111010\",\"mb6b9\":\"110100001000\",\"7b9#9\":\"110110010010\"}')},722:n=>{n.exports=JSON.parse('{\"major pentatonic\":\"101010010100\",\"ionian pentatonic\":\"100011010001\",\"mixolydian pentatonic\":\"100011010010\",\"ritusen\":\"101001010100\",\"egyptian\":\"101001010010\",\"neopolitan major pentatonic\":\"100011100010\",\"vietnamese 1\":\"100101011000\",\"pelog\":\"110100011000\",\"kumoijoshi\":\"110001011000\",\"hirajoshi\":\"101100011000\",\"iwato\":\"110001100010\",\"in-sen\":\"110001010010\",\"lydian pentatonic\":\"100010110001\",\"malkos raga\":\"100101001010\",\"locrian pentatonic\":\"100101100010\",\"minor pentatonic\":\"100101010010\",\"minor six pentatonic\":\"100101010100\",\"flat three pentatonic\":\"101100010100\",\"flat six pentatonic\":\"101010011000\",\"scriabin\":\"110010010100\",\"whole tone pentatonic\":\"100010101010\",\"lydian #5P pentatonic\":\"100010101001\",\"lydian dominant pentatonic\":\"100010110010\",\"minor #7M pentatonic\":\"100101010001\",\"super locrian pentatonic\":\"100110100010\",\"minor hexatonic\":\"101101010001\",\"augmented\":\"100110011001\",\"major blues\":\"101110010100\",\"piongio\":\"101001010110\",\"prometheus neopolitan\":\"110010100110\",\"prometheus\":\"101010100110\",\"mystery #1\":\"110010101010\",\"six tone symmetric\":\"110011001100\",\"whole tone\":\"101010101010\",\"messiaen\\'s mode #5\":\"110001110001\",\"minor blues\":\"100101110010\",\"locrian major\":\"101011101010\",\"double harmonic lydian\":\"110010111001\",\"harmonic minor\":\"101101011001\",\"altered\":\"110110101010\",\"locrian #2\":\"101101101010\",\"mixolydian b6\":\"101011011010\",\"lydian dominant\":\"101010110110\",\"lydian\":\"101010110101\",\"lydian augmented\":\"101010101101\",\"dorian b2\":\"110101010110\",\"melodic minor\":\"101101010101\",\"locrian\":\"110101101010\",\"ultralocrian\":\"110110101100\",\"locrian 6\":\"110101100110\",\"augmented heptatonic\":\"100111011001\",\"romanian minor\":\"101100110110\",\"dorian #4\":\"101100110110\",\"lydian diminished\":\"101100110101\",\"phrygian\":\"110101011010\",\"leading whole tone\":\"101010101011\",\"lydian minor\":\"101010111010\",\"phrygian dominant\":\"110011011010\",\"balinese\":\"110101011001\",\"neopolitan major\":\"110101010101\",\"aeolian\":\"101101011010\",\"harmonic major\":\"101011011001\",\"double harmonic major\":\"110011011001\",\"dorian\":\"101101010110\",\"hungarian minor\":\"101100111001\",\"hungarian major\":\"100110110110\",\"oriental\":\"110011100110\",\"flamenco\":\"110110110010\",\"todi raga\":\"110100111001\",\"mixolydian\":\"101011010110\",\"persian\":\"110011101001\",\"major\":\"101011010101\",\"enigmatic\":\"110010101011\",\"major augmented\":\"101011001101\",\"lydian #9\":\"100110110101\",\"messiaen\\'s mode #4\":\"111001111001\",\"purvi raga\":\"110011111001\",\"spanish heptatonic\":\"110111011010\",\"bebop\":\"101011010111\",\"bebop minor\":\"101111010110\",\"bebop major\":\"101011011101\",\"bebop locrian\":\"110101111010\",\"minor bebop\":\"101101011011\",\"diminished\":\"101101101101\",\"ichikosucho\":\"101011110101\",\"minor six diminished\":\"101101011101\",\"half-whole diminished\":\"110110110110\",\"kafi raga\":\"100111010111\",\"messiaen\\'s mode #6\":\"101011101011\",\"composite blues\":\"101111110110\",\"messiaen\\'s mode #3\":\"101110111011\",\"messiaen\\'s mode #7\":\"111101111101\",\"chromatic\":\"111111111111\",\"ionian\":\"101011010101\",\"minor\":\"101101011010\"}')}},e={};function o(a){var i=e[a];if(void 0!==i)return i.exports;var t=e[a]={exports:{}};return n[a](t,t.exports,o),t.exports}o.d=(n,e)=>{for(var a in e)o.o(e,a)&&!o.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},o.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),o.r=n=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(n,\"__esModule\",{value:!0})};var a={};(()=>{o.r(a),o.d(a,{chord:()=>m,chords:()=>r,inlineChord:()=>t,scale:()=>c,scales:()=>s});var n=o(722),e=o(413),i=function(o){var a=o.scale,i=o.chord,t=a||i,r=a?\"scale\":\"chord\";if(\"string\"!=typeof t)throw\"\".concat(t,\" is not a valid input for \").concat(r);var s=t.indexOf(\" \"),m=t.slice(s+1),c=t.slice(0,s),d=c.replace(/\\d/g,\"\"),l=+c.replace(/\\D/g,\"\");if(isNaN(l))throw\"\".concat(c[0],\" does not have a valid octave\");if(!n[m]&&!e[m])throw\"\".concat(t,\" is not a valid \").concat(r);for(var b=function(n,e){var o=[\"C\",\"Db\",\"D\",\"Eb\",\"E\",\"F\",\"Gb\",\"G\",\"Ab\",\"A\",\"Bb\",\"B\"].map((function(n){return n+e})),a=[\"C\",\"Db\",\"D\",\"Eb\",\"E\",\"F\",\"Gb\",\"G\",\"Ab\",\"A\",\"Bb\",\"B\"].map((function(n){return n+(e+1)})),i=o.concat(a);return i.slice(i.indexOf(n+e))}(d,l),u=[],p=0,h=0,f=a?n:e;p<f[m].length;)\"1\"===f[m][p]&&u.push(b[h]),p++,h++;return u},t=function(n){var e,o,a=\"b9sus\",t=4;return n.includes(a)?(o=a,e=n.slice(0,n.indexOf(a))):(e=n[0],o=n.slice(1),\"b\"!==n[1]&&\"#\"!==n[1]||(e+=n[1],o=n.slice(2))),n.includes(\"_\")&&(t=+n.split(\"_\")[1],o=o.slice(0,o.indexOf(\"_\"))),i({chord:e+t+\" \"+o})},r=function(){return Object.keys(e)},s=function(){return Object.keys(n)},m=function(n){return i({chord:n})},c=function(n){return i({scale:n})}})();var i=exports;for(var t in a)i[t]=a[t];a.__esModule&&Object.defineProperty(i,\"__esModule\",{value:!0})})();","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.flat = exports.dice = exports.pickOne = exports.sizzleMap = exports.shuffle = exports.expandStr = exports.isNote = void 0;\n/**\n * Take a string input and check if it s a note name or not\n * @param  {String} str Note name e.g. c4\n * @return {Boolean} Return true for c4 or return false for something like CM\n */\nexports.isNote = function (str) {\n    return /^[a-gA-G](?:#|b)?\\d$/.test(str);\n};\n/**\n * Take a String input such as xxx[xx[xx]]\n * and return an Array as ['x', 'x', 'x', ['x', 'x', ['x', 'x']]]\n * @param  {String} str\n * @return {Array}\n */\nexports.expandStr = function (str) {\n    str = JSON.stringify(str.split(''));\n    str = str.replace(/,\"\\[\",/g, ', [');\n    str = str.replace(/\"\\[\",/g, '[');\n    str = str.replace(/,\"\\]\"/g, ']');\n    return JSON.parse(str);\n};\n/**\n * Basic Array randomizer\n * @param  {Array} arr\n * @return {Array}\n */\nexports.shuffle = function (arr) {\n    var lastIndex = arr.length - 1;\n    arr.forEach(function (el, idx) {\n        var rnd = Math.round(Math.random() * lastIndex);\n        arr[idx] = arr[rnd];\n        arr[rnd] = el;\n    });\n    return arr;\n};\n/**\n * Return an array of numbers relative to maxLevel || 127 ordered in a Sine wave format\n * This is used by the `sizzle` param of the `clip` method to add a rudimentary variation to the accent of each note\n * @param {Number} maxLevel A number between not more than 127\n * @return {Array}  Example output [63, 90, 110, 127, 110, 90, 63, 0, 63, 90, 110, 127, 110, 90, 63, 0]\n */\nexports.sizzleMap = function (maxLevel) {\n    if (maxLevel === void 0) { maxLevel = 127; }\n    var pi = Math.PI;\n    var piArr = [\n        pi / 6,\n        pi / 4,\n        pi / 3,\n        pi / 2,\n        (2 * pi) / 3,\n        (3 * pi) / 4,\n        (5 * pi) / 6,\n        pi,\n    ];\n    var piArrRev = [\n        0,\n        pi / 6,\n        pi / 4,\n        pi / 3,\n        pi / 2,\n        (2 * pi) / 3,\n        (3 * pi) / 4,\n        (5 * pi) / 6,\n    ];\n    piArrRev.reverse();\n    var arr = piArr.concat(piArrRev);\n    return arr.map(function (element) { return Math.round(Math.sin(element) * maxLevel); });\n};\n/**\n * Pick one item randomly from an array and return it\n * @param arr\n */\nexports.pickOne = function (arr) {\n    return arr.length > 1 ? arr[Math.round(Math.random())] : arr[0];\n};\n/**\n * Boolean generator\n */\nexports.dice = function () { return !!Math.round(Math.random()); };\n/**\n * Polyfill for Array.prototype.flat\n */\nexports.flat = function (arr) {\n    return arr.reduce(function (acc, val) { return acc.concat(val); }, []);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Session = exports.midi = exports.arp = exports.progression = exports.getChordsByProgression = exports.getChordDegrees = exports.clip = exports.chords = exports.chord = exports.modes = exports.scales = exports.mode = exports.scale = void 0;\nvar harmonics_1 = require(\"harmonics\");\nObject.defineProperty(exports, \"scales\", { enumerable: true, get: function () { return harmonics_1.scales; } });\nObject.defineProperty(exports, \"modes\", { enumerable: true, get: function () { return harmonics_1.scales; } });\nObject.defineProperty(exports, \"chords\", { enumerable: true, get: function () { return harmonics_1.chords; } });\nObject.defineProperty(exports, \"scale\", { enumerable: true, get: function () { return harmonics_1.scale; } });\nObject.defineProperty(exports, \"mode\", { enumerable: true, get: function () { return harmonics_1.scale; } });\nObject.defineProperty(exports, \"chord\", { enumerable: true, get: function () { return harmonics_1.chord; } });\nvar browser_clip_1 = require(\"./browser-clip\");\nObject.defineProperty(exports, \"clip\", { enumerable: true, get: function () { return browser_clip_1.clip; } });\nvar progression_1 = require(\"./progression\");\nObject.defineProperty(exports, \"getChordDegrees\", { enumerable: true, get: function () { return progression_1.getChordDegrees; } });\nObject.defineProperty(exports, \"getChordsByProgression\", { enumerable: true, get: function () { return progression_1.getChordsByProgression; } });\nObject.defineProperty(exports, \"progression\", { enumerable: true, get: function () { return progression_1.progression; } });\nvar arp_1 = require(\"./arp\");\nObject.defineProperty(exports, \"arp\", { enumerable: true, get: function () { return arp_1.arp; } });\nvar midi_1 = require(\"./midi\");\nObject.defineProperty(exports, \"midi\", { enumerable: true, get: function () { return midi_1.midi; } });\nvar session_1 = require(\"./session\");\nObject.defineProperty(exports, \"Session\", { enumerable: true, get: function () { return session_1.Session; } });\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clip = exports.renderingDuration = exports.totalPatternDuration = exports.recursivelyApplyPatternToDurations = void 0;\nvar utils_1 = require(\"./utils\");\nvar harmonics_1 = require(\"harmonics\");\nvar defaultSubdiv = '4n';\nvar defaultDur = '8n';\n/**\n * Get default params for a clip, such as root note, pattern etc\n * @return {Object}\n */\nvar getDefaultParams = function () { return ({\n    notes: ['C4'],\n    pattern: 'x',\n    shuffle: false,\n    sizzle: false,\n    sizzleReps: 1,\n    arpegiate: false,\n    subdiv: '4n',\n    amp: 100,\n    accentLow: 70,\n    randomNotes: null,\n    effects: [],\n    offlineRendering: false,\n}); };\n/**\n * HDR speed is denoted by the number of ticks per note\n * By default this is set to a quarter note (4n) to be in line with Tone.js' default subdivision\n * Technically a bar is 512 ticks long. So it's HDR speed is 512\n * @type {Object}\n */\nvar hdr = {\n    '1m': 2048,\n    '2m': 4096,\n    '3m': 6144,\n    '4m': 8192,\n    '1n': 512,\n    '2n': 256,\n    '4n': 128,\n    '8n': 64,\n    '16n': 32,\n};\nvar convertChordsToNotes = function (el) {\n    if (utils_1.isNote(el)) {\n        // A note needs to be an array so that it can accomodate chords or single notes with a single interface\n        return [el];\n    }\n    if (Array.isArray(el)) {\n        // This could be a chord provided as an array\n        // make sure it uses valid notes\n        el.forEach(function (n) {\n            if (!utils_1.isNote(n)) {\n                throw new TypeError('array must comprise valid notes');\n            }\n        });\n        return el;\n    }\n    if (!Array.isArray(el)) {\n        var c = harmonics_1.chord(el);\n        if (c && c.length) {\n            return c;\n        }\n    }\n    throw new Error(\"Chord \" + el + \" not found\");\n};\nvar random = function (num) {\n    if (num === void 0) { num = 1; }\n    return Math.round(Math.random() * num);\n};\nvar getNote = function (el, params, counter) {\n    return el === 'R' && params.randomNotes\n        ? params.randomNotes[random(params.randomNotes.length - 1)]\n        : params.notes[counter % params.notes.length];\n};\nvar getDuration = function (params, counter) {\n    return params.durations\n        ? params.durations[counter % params.durations.length]\n        : params.dur || params.subdiv || defaultDur;\n};\n/**\n * @param  {Object}\n * @return {Function}\n * Take an object literal which has a Tone.js instrument and return a function that can be used\n * as the callback in Tone.Sequence https://tonejs.github.io/docs/Sequence\n */\nvar getSeqFn = function (params) {\n    var counter = 0;\n    if (params.instrument instanceof Tone.Player) {\n        return function (time, el) {\n            if (el === 'x' || el === 'R') {\n                params.instrument.start(time);\n                counter++;\n            }\n        };\n    }\n    else if (params.instrument instanceof Tone.PolySynth ||\n        params.instrument instanceof Tone.Sampler) {\n        return function (time, el) {\n            if (el === 'x' || el === 'R') {\n                params.instrument.triggerAttackRelease(getNote(el, params, counter), getDuration(params, counter), time);\n                counter++;\n            }\n        };\n    }\n    else if (params.instrument instanceof Tone.NoiseSynth) {\n        return function (time, el) {\n            if (el === 'x' || el === 'R') {\n                params.instrument.triggerAttackRelease(getDuration(params, counter), time);\n                counter++;\n            }\n        };\n    }\n    else {\n        return function (time, el) {\n            if (el === 'x' || el === 'R') {\n                params.instrument.triggerAttackRelease(getNote(el, params, counter)[0], getDuration(params, counter), time);\n                counter++;\n            }\n        };\n    }\n};\nexports.recursivelyApplyPatternToDurations = function (patternArr, length, durations) {\n    if (durations === void 0) { durations = []; }\n    patternArr.forEach(function (char) {\n        if (typeof char === 'string') {\n            if (char === 'x' || char === 'R') {\n                durations.push(length);\n            }\n            if (char === '_' && durations.length) {\n                durations[durations.length - 1] += length;\n            }\n        }\n        if (Array.isArray(char)) {\n            exports.recursivelyApplyPatternToDurations(char, length / char.length, durations);\n        }\n    });\n    return durations;\n};\nvar generateSequence = function (params, context) {\n    var _a;\n    context = context || Tone.getContext();\n    if (!params.pattern) {\n        throw new Error('No pattern provided!');\n    }\n    if (!params.player &&\n        !params.instrument &&\n        !params.sample &&\n        !params.buffer &&\n        !params.synth &&\n        !params.sampler &&\n        !params.samples) {\n        throw new Error('No player or instrument provided!');\n    }\n    if (!params.durations && !params.dur) {\n        params.durations = exports.recursivelyApplyPatternToDurations(utils_1.expandStr(params.pattern), Tone.Ticks(params.subdiv || defaultSubdiv).toSeconds());\n    }\n    /*\n      1. The params object can be used to pass a sample (sound source) OR a synth(Synth/FMSynth/AMSynth etc) or samples.\n      Scribbletune will then create a Tone.js Player or Tone.js Instrument or Tone.js Sampler respectively\n      2. It can also be used to pass a Tone.js Player object or instrument that was created elsewhere\n      (mostly by Scribbletune itself in the channel creation method)\n      Either ways, a pattern is required and it will be used to create a playable Tone.js Sequence\n       */\n    var effects = [];\n    var createEffect = function (eff) {\n        var effect = typeof eff === 'string'\n            ? new Tone[eff]({ context: context })\n            : eff.context !== context\n                ? recreateToneObjectInContext(eff, context)\n                : eff;\n        return effect.toDestination();\n    };\n    var startEffect = function (eff) {\n        return typeof eff.start === 'function' ? eff.start() : eff;\n    };\n    if (params.effects) {\n        if (!Array.isArray(params.effects)) {\n            params.effects = [params.effects];\n        }\n        effects = params.effects.map(createEffect).map(startEffect);\n    }\n    if (params.synth && !params.instrument) {\n        params.instrument = params.synth;\n        console.warn('The \"synth\" parameter will be deprecated in the future. Please use the \"instrument\" parameter instead.');\n    }\n    params.instrument =\n        params.sample || params.buffer\n            ? new Tone.Player({\n                url: params.sample || params.buffer,\n                context: context,\n            })\n            : params.sampler\n                ? params.sampler\n                : params.player\n                    ? params.player\n                    : params.samples\n                        ? new Tone.Sampler({ url: params.samples, context: context })\n                        : typeof params.instrument === 'string'\n                            ? new Tone[params.instrument]({ context: context })\n                            : params.instrument;\n    if (params.instrument.context !== context) {\n        params.instrument = recreateToneObjectInContext(params.instrument, context);\n    }\n    if (params.volume) {\n        params.instrument.volume.value = params.volume;\n    }\n    (_a = params.instrument).chain.apply(_a, effects).toDestination();\n    return new Tone.Sequence({\n        callback: getSeqFn(params),\n        events: utils_1.expandStr(params.pattern),\n        subdivision: params.subdiv || defaultSubdiv,\n        context: context,\n    });\n};\nexports.totalPatternDuration = function (pattern, subdivOrLength) {\n    return typeof subdivOrLength === 'number'\n        ? subdivOrLength * utils_1.expandStr(pattern).length\n        : Tone.Ticks(subdivOrLength).toSeconds() * utils_1.expandStr(pattern).length;\n};\nvar leastCommonMultiple = function (n1, n2) {\n    var _a = n1 < n2 ? [n1, n2] : [n2, n1], smallest = _a[0], largest = _a[1];\n    var i = largest;\n    while (i % smallest !== 0) {\n        i += largest;\n    }\n    return i;\n};\nexports.renderingDuration = function (pattern, subdivOrLength, notes, randomNotes) {\n    var patternRegularNotesCount = pattern.split('').filter(function (c) {\n        return c === 'x';\n    }).length;\n    var patternRandomNotesCount = pattern.split('').filter(function (c) {\n        return c === 'R';\n    }).length;\n    var patternNotesCount = (randomNotes === null || randomNotes === void 0 ? void 0 : randomNotes.length) ? patternRegularNotesCount\n        : patternRegularNotesCount + patternRandomNotesCount;\n    var notesCount = notes.length || 1;\n    return ((exports.totalPatternDuration(pattern, subdivOrLength) / patternNotesCount) *\n        leastCommonMultiple(notesCount, patternNotesCount));\n};\nvar ongoingRenderingCounter = 0;\nvar originalContext;\nvar recreateToneObjectInContext = function (toneObject, context) {\n    if (toneObject instanceof Tone.PolySynth) {\n        return new Tone.PolySynth(Tone[toneObject._dummyVoice.name], __assign(__assign({}, toneObject.get()), { context: context }));\n    }\n    else if (toneObject instanceof Tone.Player) {\n        return new Tone.Player({ url: toneObject._buffer, context: context });\n    }\n    else if (toneObject instanceof Tone.Sampler) {\n        var _a = toneObject.get(), attack = _a.attack, curve = _a.curve, release = _a.release, volume = _a.volume;\n        var paramsFromSampler = { attack: attack, curve: curve, release: release, volume: volume };\n        var paramsFromBuffers = {\n            baseUrl: toneObject._buffers.baseUrl,\n            urls: Object.fromEntries(toneObject._buffers._buffers.entries()),\n        };\n        return new Tone.Sampler(__assign(__assign(__assign({}, paramsFromSampler), paramsFromBuffers), { context: context }));\n    }\n    else {\n        return new Tone[toneObject.name](__assign(__assign({}, toneObject.get()), { context: context }));\n    }\n};\nvar offlineRenderClip = function (params, duration) {\n    if (!originalContext) {\n        originalContext = Tone.getContext();\n    }\n    ongoingRenderingCounter++;\n    var player = new Tone.Player({ context: originalContext, loop: true });\n    Tone.Offline(function (context) { return __awaiter(void 0, void 0, void 0, function () {\n        var sequence;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    sequence = generateSequence(params, context);\n                    return [4 /*yield*/, Tone.loaded()];\n                case 1:\n                    _a.sent();\n                    sequence.start();\n                    context.transport.start();\n                    return [2 /*return*/];\n            }\n        });\n    }); }, duration).then(function (buffer) {\n        var _a;\n        player.buffer = buffer;\n        ongoingRenderingCounter--;\n        if (ongoingRenderingCounter === 0) {\n            Tone.setContext(originalContext);\n            (_a = params.offlineRenderingCallback) === null || _a === void 0 ? void 0 : _a.call(params);\n        }\n    });\n    player.toDestination();\n    player.sync();\n    return player;\n};\n/**\n * @param  {Object}\n * @return {Tone.js Sequence Object}\n * Take a object literal that may have a Tone.js player OR instrument\n * or simply a sample or synth with a pattern and return a Tone.js sequence\n */\nexports.clip = function (params) {\n    params = __assign(__assign({}, getDefaultParams()), (params || {}));\n    // If notes is a string, split it into an array\n    if (typeof params.notes === 'string') {\n        // Remove any accidental double spaces\n        params.notes = params.notes.replace(/\\s{2,}/g, ' ');\n        params.notes = params.notes.split(' ');\n    }\n    params.notes = params.notes.map(convertChordsToNotes);\n    if (/[^x\\-_\\[\\]R]/.test(params.pattern)) {\n        throw new TypeError(\"pattern can only comprise x - _ [ ], found \" + params.pattern);\n    }\n    if (params.shuffle) {\n        params.notes = utils_1.shuffle(params.notes);\n    }\n    if (params.randomNotes && typeof params.randomNotes === 'string') {\n        params.randomNotes = params.randomNotes.replace(/\\s{2,}/g, ' ').split(/\\s/);\n    }\n    if (params.randomNotes) {\n        params.randomNotes = params.randomNotes.map(convertChordsToNotes);\n    }\n    if (params.offlineRendering) {\n        return offlineRenderClip(params, exports.renderingDuration(params.pattern, params.subdiv || defaultSubdiv, params.notes, params.randomNotes));\n    }\n    return generateSequence(params, originalContext);\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.progression = exports.getChordsByProgression = exports.getChordDegrees = void 0;\nvar harmonics_1 = require(\"harmonics\");\nvar utils_1 = require(\"./utils\");\n/**\n * Get the chords that go with a given scale/mode\n * This is useful only in case you want to check what chords work with a scale/mode\n * so that you can come up with chord progressions\n * @param  {String} mode e.g. major\n * @return {Array} e.g.['I', 'ii', 'iii', 'IV', 'V', 'vi', 'vii°']\n */\nexports.getChordDegrees = function (mode) {\n    var theRomans = {\n        ionian: ['I', 'ii', 'iii', 'IV', 'V', 'vi', 'vii°'],\n        dorian: ['i', 'ii', 'III', 'IV', 'v', 'vi°', 'VII'],\n        phrygian: ['i', 'II', 'III', 'iv', 'v°', 'VI', 'vii'],\n        lydian: ['I', 'II', 'iii', 'iv°', 'V', 'vi', 'vii'],\n        mixolydian: ['I', 'ii', 'iii°', 'IV', 'v', 'vi', 'VII'],\n        aeolian: ['i', 'ii°', 'III', 'iv', 'v', 'VI', 'VII'],\n        locrian: ['i°', 'II', 'iii', 'iv', 'V', 'VI', 'vii'],\n        'melodic minor': ['i', 'ii', 'III+', 'IV', 'V', 'vi°', 'vii°'],\n        'harmonic minor': ['i', 'ii°', 'III+', 'iv', 'V', 'VI', 'vii°'],\n    };\n    theRomans.major = theRomans.ionian;\n    theRomans.minor = theRomans.aeolian;\n    return theRomans[mode] || [];\n};\nvar idxByDegree = {\n    i: 0,\n    ii: 1,\n    iii: 2,\n    iv: 3,\n    v: 4,\n    vi: 5,\n    vii: 6,\n};\n/**\n * Get a chord name from degree\n * @param  {String} roman e.g. ii OR ii° OR V7\n * @return {String} e.g. m OR m7b5 OR Maj7\n */\nvar getChordName = function (roman) {\n    // remove any non character\n    var str = roman.replace(/\\W/g, '');\n    var prefix = 'M';\n    // check if it s lowercase\n    if (str.toLowerCase() === str) {\n        prefix = 'm';\n    }\n    if (roman.indexOf('°') > -1) {\n        return prefix + '7b5';\n    }\n    if (roman.indexOf('+') > -1) {\n        return prefix + '#5';\n    }\n    if (roman.indexOf('7') > -1) {\n        return prefix === 'M' ? 'maj7' : 'm7';\n    }\n    return prefix;\n};\n/**\n * Take the specified scale and degrees and return the chord names for them\n * These can be used as the value for the `notes` param of the `clip` method\n * @param {String} noteOctaveScale e.g. 'C4 major'\n * @param  {String} chordDegress e.g. 'I IV V IV'\n * @return {String} e.g. 'CM FM GM FM'\n */\nexports.getChordsByProgression = function (noteOctaveScale, chordDegress) {\n    // Set the octave if missing\n    // For example if the method was called with `C major` instead of `C4 major`, then add the 4\n    var noteOctaveScaleArr = noteOctaveScale.split(' ');\n    if (!noteOctaveScaleArr[0].match(/\\d/)) {\n        noteOctaveScaleArr[0] += '4';\n        noteOctaveScale = noteOctaveScaleArr.join(' ');\n    }\n    // Get the scale from the given note and scale/mode combination\n    var mode = harmonics_1.scale(noteOctaveScale);\n    var chordDegreesArr = chordDegress.replace(/\\s*,+\\s*/g, ' ').split(' ');\n    // Now we have something like ['i', 'ii', 'IV']\n    // Convert it to a chord family such as ['Cm', 'Dm', 'FM']\n    var chordFamily = chordDegreesArr.map(function (roman, idx) {\n        var chordName = getChordName(roman); // e.g. m\n        // get the index to be used by removing any digit or non alphabet character\n        var scaleId = idxByDegree[roman.replace(/\\W|\\d/g, '').toLowerCase()]; // e.g. 0\n        // get the note itself\n        var note = mode[scaleId]; // e.g. C\n        // get the octave of the note;\n        var oct = note.replace(/\\D+/, ''); // e.g. 4\n        // now get the chord\n        return note.replace(/\\d/, '') + chordName + '_' + oct;\n    });\n    return chordFamily.toString().replace(/,/g, ' ');\n};\nvar getProgFactory = function (_a) {\n    var T = _a.T, P = _a.P, D = _a.D;\n    return function (count) {\n        if (count === void 0) { count = 4; }\n        var chords = [];\n        // Push root/tonic\n        chords.push(utils_1.pickOne(T));\n        var i = 1;\n        // Pick a predominant\n        if (i < count - 1) {\n            chords.push(utils_1.pickOne(P));\n            i++;\n        }\n        // Try another predominant\n        if (i < count - 1 && utils_1.dice()) {\n            chords.push(utils_1.pickOne(P));\n            i++;\n        }\n        ///////// 4 or more//////////\n        if (i < count - 1) {\n            // Pick a dominant\n            chords.push(utils_1.pickOne(D));\n            i++;\n        }\n        if (i < count - 1) {\n            // Pick a predominant\n            chords.push(utils_1.pickOne(P));\n            i++;\n        }\n        if (i < count - 1) {\n            // Pick a dominant\n            chords.push(utils_1.pickOne(D));\n            i++;\n        }\n        // Pick a predominant if possible\n        if (i < count - 1 && utils_1.dice()) {\n            chords.push(utils_1.pickOne(P));\n            i++;\n        }\n        ////////////////////////////\n        // Fill the rest with dominant\n        while (i < count) {\n            chords.push(utils_1.pickOne(D));\n            i++;\n        }\n        return chords;\n    };\n};\nvar M = getProgFactory({ T: ['I', 'vi'], P: ['ii', 'IV'], D: ['V'] });\nvar m = getProgFactory({ T: ['i', 'VI'], P: ['ii', 'iv'], D: ['V'] });\n/**\n * Generate a chord progression based on basic music theory\n * where we follow tonic to optionally predominant and then dominant\n * and then randomly to predominant and continue this till we reach `count`\n * @param scaleType e.g. M (for major chord progression), m (for minor chord progression)\n * @param count e.g. 4\n */\nexports.progression = function (scaleType, count) {\n    if (count === void 0) { count = 4; }\n    if (scaleType === 'major' || scaleType === 'M') {\n        return M(count);\n    }\n    if (scaleType === 'minor' || scaleType === 'm') {\n        return m(count);\n    }\n};\n","\"use strict\";\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n            r[k] = a[j];\n    return r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.arp = void 0;\nvar harmonics_1 = require(\"harmonics\");\n/**\n * Take an array and fill it with it s own elements in the next octave till it s of the specified `len`\n * @param  {Array} arr e.g. ['a4', 'b4']\n * @param  {Number} e.g. len 4\n * @return {Array} e.g. ['a4', 'b4', 'a5', 'b5']\n */\nvar fillArr = function (arr, len) {\n    var bumpOctave = function (el) {\n        var note = el.replace(/\\d/, '');\n        var oct = el.replace(/\\D/g, '');\n        return note + (+oct + 1);\n    };\n    // Create a couple of chord arrays with bumped octaves\n    // so that something like [c3, e3, g4] turns into [c4, e4, g5] and [c5, e5, g6]\n    var arr1 = arr.map(bumpOctave);\n    var arr2 = arr1.map(bumpOctave);\n    var finalArr = __spreadArrays(arr, arr1, arr2);\n    // Slice and return only as much as required\n    return finalArr.slice(0, len);\n};\n/**\n *\n * @param chordsOrParams a string that denotes comma separated chords to be used or an object with additional properties\n * By default, if this is a string, the the count of notes generated is 8 and the order is ascending.\n * For instance arp('CM FM') will result in an array of notes [C4, E4, G4, F4, A4, C4, C5, E5]\n * You can even provide Params as an object.\n * For e.g. arp({count: 8, order: '10325476', chords: 'FM_4 Gm7b5_4 AbM_4 Bbm_4 Cm_5 DbM_5 EbM_5})\n */\nexports.arp = function (chordsOrParams) {\n    var finalArr = [];\n    var params = {\n        count: 4,\n        order: '0123',\n        chords: '',\n    };\n    if (typeof chordsOrParams === 'string') {\n        params.chords = chordsOrParams;\n    }\n    else {\n        if (chordsOrParams.order && chordsOrParams.order.match(/\\D/g)) {\n            throw new TypeError('Invalid value for order');\n        }\n        if (chordsOrParams.count > 8 || chordsOrParams.count < 2) {\n            throw new TypeError('Invalid value for count');\n        }\n        // Provision a order for the notes in case only count was provided\n        if (chordsOrParams.count && !chordsOrParams.order) {\n            params.order = Array.from(Array(chordsOrParams.count).keys()).join('');\n        }\n        Object.assign(params, chordsOrParams);\n    }\n    // Chords can be passed as a string, e.g. CM_4 FM_4\n    // or as an array of notes arrays e.g. [['C3', 'E3', 'G3', 'B3'], ['F3', 'A3', 'C4', 'E4']]\n    if (typeof params.chords === 'string') {\n        var chordsArr = params.chords.split(' ');\n        var _loop_1 = function (c) {\n            var filledArr = fillArr(harmonics_1.inlineChord(c), params.count);\n            // reorder the filledArr as per params.order\n            var reorderedArr = params.order\n                .split('')\n                .map(function (idx) { return filledArr[idx]; });\n            finalArr = __spreadArrays(finalArr, reorderedArr);\n        };\n        for (var _i = 0, chordsArr_1 = chordsArr; _i < chordsArr_1.length; _i++) {\n            var c = chordsArr_1[_i];\n            _loop_1(c);\n        }\n    }\n    else if (Array.isArray(params.chords)) {\n        var _loop_2 = function (c) {\n            var filledArr = fillArr(c, params.count);\n            // reorder the filledArr as per params.order\n            var reorderedArr = params.order\n                .split('')\n                .map(function (idx) { return filledArr[idx]; });\n            finalArr = __spreadArrays(finalArr, reorderedArr);\n        };\n        for (var _a = 0, _b = params.chords; _a < _b.length; _a++) {\n            var c = _b[_a];\n            _loop_2(c);\n        }\n    }\n    else {\n        throw new TypeError('Invalid value for chords');\n    }\n    return finalArr;\n};\n","\"use strict\";\n/*global LiveAPI:true*/\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.midi = void 0;\nvar fs_1 = __importDefault(require(\"fs\"));\nvar jsmidgen = __importStar(require(\"jsmidgen\"));\n/**\n * Take an array of note objects to generate a MIDI file in the same location as this method is called\n * @param  {<Array>NoteObject} notes    Notes are in the format: {note: ['c3'], level: 127, length: 64}\n * @param  {String | null} fileName If a filename is not provided, then `music.mid` is used by default\n * If `null` is passed for `fileName`, bytes are returned instead of creating a file\n * If this method is called from a browser then it will return a HTML link that you can append in your page\n * This link will enable the generated MIDI as a downloadable file.\n * @param {Number | null} bpm If a value is provided, the generated midi file will be set to this bpm value.\n */\nexports.midi = function (notes, fileName, bpm) {\n    if (fileName === void 0) { fileName = 'music.mid'; }\n    var file = createFileFromNotes(notes, bpm);\n    var bytes = file.toBytes();\n    if (fileName === null) {\n        return bytes;\n    }\n    if (!fileName.endsWith('.mid')) {\n        fileName = fileName + '.mid';\n    }\n    if (typeof window !== 'undefined' &&\n        window.URL &&\n        window.URL.createObjectURL) {\n        return createDownloadLink(bytes, fileName);\n    }\n    fs_1.default.writeFileSync(fileName, bytes, 'binary');\n    console.log(\"MIDI file generated: \" + fileName + \".\");\n};\n/**\n * Create a downloadable link\n * @param b\n */\nvar createDownloadLink = function (b, fileName) {\n    // Convert bytes to array buffer\n    // Accepted answer on https://stackoverflow.com/questions/35038884/download-file-from-bytes-in-javascript\n    var bytes = new Uint8Array(b.length);\n    for (var i = 0; i < b.length; i++) {\n        var ascii = b.charCodeAt(i);\n        bytes[i] = ascii;\n    }\n    // Create a Blob so that we can set it up with the type of file we want (for eg MIDI)\n    var blob = new Blob([bytes], { type: 'audio/midi' });\n    // Create a link element to be used (you can use an existing link on the page as well)\n    var link = document.createElement('a');\n    link.href =\n        (typeof window !== 'undefined' &&\n            typeof window.URL !== 'undefined' &&\n            typeof window.URL.createObjectURL !== 'undefined' &&\n            window.URL.createObjectURL(blob)) ||\n            '';\n    // Give the downloadable file a name\n    link.download = fileName;\n    link.innerText = 'Download MIDI file';\n    return link;\n};\nvar createFileFromNotes = function (notes, bpm) {\n    var file = new jsmidgen.File();\n    var track = new jsmidgen.Track();\n    // set the track's bpm if it is provided\n    if (typeof bpm === 'number') {\n        track.setTempo(bpm);\n    }\n    file.addTrack(track);\n    for (var _i = 0, notes_1 = notes; _i < notes_1.length; _i++) {\n        var noteObj = notes_1[_i];\n        var level = noteObj.level || 127;\n        // While writing chords (multiple notes per tick)\n        // only the first noteOn (or noteOff) needs the complete arity of the function call\n        // subsequent calls need only the first 2 args (channel and note)\n        if (noteObj.note) {\n            if (typeof noteObj.note === 'string') {\n                track.noteOn(0, noteObj.note, noteObj.length, level); // channel, pitch(note), length, velocity\n                track.noteOff(0, noteObj.note, noteObj.length, level);\n            }\n            else {\n                track.addChord(0, noteObj.note, noteObj.length, level);\n            }\n        }\n        else {\n            track.noteOff(0, '', noteObj.length);\n        }\n    }\n    return file;\n};\n","module.exports = __WEBPACK_EXTERNAL_MODULE__7__;","var Midi = {};\n\n(function(exported) {\n\n\tvar DEFAULT_VOLUME   = exported.DEFAULT_VOLUME   = 90;\n\tvar DEFAULT_DURATION = exported.DEFAULT_DURATION = 128;\n\tvar DEFAULT_CHANNEL  = exported.DEFAULT_CHANNEL  = 0;\n\n\t/* ******************************************************************\n\t * Utility functions\n\t ****************************************************************** */\n\n\tvar Util = {\n\n\t\tmidi_letter_pitches: { a:21, b:23, c:12, d:14, e:16, f:17, g:19 },\n\n\t\t/**\n\t\t * Convert a symbolic note name (e.g. \"c4\") to a numeric MIDI pitch (e.g.\n\t\t * 60, middle C).\n\t\t *\n\t\t * @param {string} n - The symbolic note name to parse.\n\t\t * @returns {number} The MIDI pitch that corresponds to the symbolic note\n\t\t * name.\n\t\t */\n\t\tmidiPitchFromNote: function(n) {\n\t\t\tvar matches = /([a-g])(#+|b+)?([0-9]+)$/i.exec(n);\n\t\t\tvar note = matches[1].toLowerCase(), accidental = matches[2] || '', octave = parseInt(matches[3], 10);\n\t\t\treturn (12 * octave) + Util.midi_letter_pitches[note] + (accidental.substr(0,1)=='#'?1:-1) * accidental.length;\n\t\t},\n\n\t\t/**\n\t\t * Ensure that the given argument is converted to a MIDI pitch. Note that\n\t\t * it may already be one (including a purely numeric string).\n\t\t *\n\t\t * @param {string|number} p - The pitch to convert.\n\t\t * @returns {number} The resulting numeric MIDI pitch.\n\t\t */\n\t\tensureMidiPitch: function(p) {\n\t\t\tif (typeof p == 'number' || !/[^0-9]/.test(p)) {\n\t\t\t\t// numeric pitch\n\t\t\t\treturn parseInt(p, 10);\n\t\t\t} else {\n\t\t\t\t// assume it's a note name\n\t\t\t\treturn Util.midiPitchFromNote(p);\n\t\t\t}\n\t\t},\n\n\t\tmidi_pitches_letter: { '12':'c', '13':'c#', '14':'d', '15':'d#', '16':'e', '17':'f', '18':'f#', '19':'g', '20':'g#', '21':'a', '22':'a#', '23':'b' },\n\t\tmidi_flattened_notes: { 'a#':'bb', 'c#':'db', 'd#':'eb', 'f#':'gb', 'g#':'ab' },\n\n\t\t/**\n\t\t * Convert a numeric MIDI pitch value (e.g. 60) to a symbolic note name\n\t\t * (e.g. \"c4\").\n\t\t *\n\t\t * @param {number} n - The numeric MIDI pitch value to convert.\n\t\t * @param {boolean} [returnFlattened=false] - Whether to prefer flattened\n\t\t * notes to sharpened ones. Optional, default false.\n\t\t * @returns {string} The resulting symbolic note name.\n\t\t */\n\t\tnoteFromMidiPitch: function(n, returnFlattened) {\n\t\t\tvar octave = 0, noteNum = n, noteName, returnFlattened = returnFlattened || false;\n\t\t\tif (n > 23) {\n\t\t\t\t// noteNum is on octave 1 or more\n\t\t\t\toctave = Math.floor(n/12) - 1;\n\t\t\t\t// subtract number of octaves from noteNum\n\t\t\t\tnoteNum = n - octave * 12;\n\t\t\t}\n\n\t\t\t// get note name (c#, d, f# etc)\n\t\t\tnoteName = Util.midi_pitches_letter[noteNum];\n\t\t\t// Use flattened notes if requested (e.g. f# should be output as gb)\n\t\t\tif (returnFlattened && noteName.indexOf('#') > 0) {\n\t\t\t\tnoteName = Util.midi_flattened_notes[noteName];\n\t\t\t}\n\t\t\treturn noteName + octave;\n\t\t},\n\n\t\t/**\n\t\t * Convert beats per minute (BPM) to microseconds per quarter note (MPQN).\n\t\t *\n\t\t * @param {number} bpm - A number in beats per minute.\n\t\t * @returns {number} The number of microseconds per quarter note.\n\t\t */\n\t\tmpqnFromBpm: function(bpm) {\n\t\t\tvar mpqn = Math.floor(60000000 / bpm);\n\t\t\tvar ret=[];\n\t\t\tdo {\n\t\t\t\tret.unshift(mpqn & 0xFF);\n\t\t\t\tmpqn >>= 8;\n\t\t\t} while (mpqn);\n\t\t\twhile (ret.length < 3) {\n\t\t\t\tret.push(0);\n\t\t\t}\n\t\t\treturn ret;\n\t\t},\n\n\t\t/**\n\t\t * Convert microseconds per quarter note (MPQN) to beats per minute (BPM).\n\t\t *\n\t\t * @param {number} mpqn - The number of microseconds per quarter note.\n\t\t * @returns {number} A number in beats per minute.\n\t\t */\n\t\tbpmFromMpqn: function(mpqn) {\n\t\t\tvar m = mpqn;\n\t\t\tif (typeof mpqn[0] != 'undefined') {\n\t\t\t\tm = 0;\n\t\t\t\tfor (var i=0, l=mpqn.length-1; l >= 0; ++i, --l) {\n\t\t\t\t\tm |= mpqn[i] << l;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn Math.floor(60000000 / mpqn);\n\t\t},\n\n\t\t/**\n\t\t * Converts an array of bytes to a string of hexadecimal characters. Prepares\n\t\t * it to be converted into a base64 string.\n\t\t *\n\t\t * @param {Array} byteArray - Array of bytes to be converted.\n\t\t * @returns {string} Hexadecimal string, e.g. \"097B8A\".\n\t\t */\n\t\tcodes2Str: function(byteArray) {\n\t\t\treturn String.fromCharCode.apply(null, byteArray);\n\t\t},\n\n\t\t/**\n\t\t * Converts a string of hexadecimal values to an array of bytes. It can also\n\t\t * add remaining \"0\" nibbles in order to have enough bytes in the array as the\n\t\t * `finalBytes` parameter.\n\t\t *\n\t\t * @param {string} str - string of hexadecimal values e.g. \"097B8A\"\n\t\t * @param {number} [finalBytes] - Optional. The desired number of bytes\n\t\t * (not nibbles) that the returned array should contain.\n\t\t * @returns {Array} An array of nibbles.\n\t\t */\n\t\tstr2Bytes: function (str, finalBytes) {\n\t\t\tif (finalBytes) {\n\t\t\t\twhile ((str.length / 2) < finalBytes) { str = \"0\" + str; }\n\t\t\t}\n\n\t\t\tvar bytes = [];\n\t\t\tfor (var i=str.length-1; i>=0; i = i-2) {\n\t\t\t\tvar chars = i === 0 ? str[i] : str[i-1] + str[i];\n\t\t\t\tbytes.unshift(parseInt(chars, 16));\n\t\t\t}\n\n\t\t\treturn bytes;\n\t\t},\n\n\t\t/**\n\t\t * Translates number of ticks to MIDI timestamp format, returning an array\n\t\t * of bytes with the time values. MIDI has a very particular way to express\n\t\t * time; take a good look at the spec before ever touching this function.\n\t\t *\n\t\t * @param {number} ticks - Number of ticks to be translated.\n\t\t * @returns {number} Array of bytes that form the MIDI time value.\n\t\t */\n\t\ttranslateTickTime: function(ticks) {\n\t\t\tvar buffer = ticks & 0x7F;\n\n\t\t\twhile (ticks = ticks >> 7) {\n\t\t\t\tbuffer <<= 8;\n\t\t\t\tbuffer |= ((ticks & 0x7F) | 0x80);\n\t\t\t}\n\n\t\t\tvar bList = [];\n\t\t\twhile (true) {\n\t\t\t\tbList.push(buffer & 0xff);\n\n\t\t\t\tif (buffer & 0x80) { buffer >>= 8; }\n\t\t\t\telse { break; }\n\t\t\t}\n\t\t\treturn bList;\n\t\t},\n\n\t};\n\n\t/* ******************************************************************\n\t * Event class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a MIDI event.\n\t *\n\t * Parameters include:\n\t *  - time [optional number] - Ticks since previous event.\n\t *  - type [required number] - Type of event.\n\t *  - channel [required number] - Channel for the event.\n\t *  - param1 [required number] - First event parameter.\n\t *  - param2 [optional number] - Second event parameter.\n\t */\n\tvar MidiEvent = function(params) {\n\t\tif (!this) return new MidiEvent(params);\n\t\tif (params &&\n\t\t\t\t(params.type    !== null || params.type    !== undefined) &&\n\t\t\t\t(params.channel !== null || params.channel !== undefined) &&\n\t\t\t\t(params.param1  !== null || params.param1  !== undefined)) {\n\t\t\tthis.setTime(params.time);\n\t\t\tthis.setType(params.type);\n\t\t\tthis.setChannel(params.channel);\n\t\t\tthis.setParam1(params.param1);\n\t\t\tthis.setParam2(params.param2);\n\t\t}\n\t};\n\n\t// event codes\n\tMidiEvent.NOTE_OFF           = 0x80;\n\tMidiEvent.NOTE_ON            = 0x90;\n\tMidiEvent.AFTER_TOUCH        = 0xA0;\n\tMidiEvent.CONTROLLER         = 0xB0;\n\tMidiEvent.PROGRAM_CHANGE     = 0xC0;\n\tMidiEvent.CHANNEL_AFTERTOUCH = 0xD0;\n\tMidiEvent.PITCH_BEND         = 0xE0;\n\n\n\t/**\n\t * Set the time for the event in ticks since the previous event.\n\t *\n\t * @param {number} ticks - The number of ticks since the previous event. May\n\t * be zero.\n\t */\n\tMidiEvent.prototype.setTime = function(ticks) {\n\t\tthis.time = Util.translateTickTime(ticks || 0);\n\t};\n\n\t/**\n\t * Set the type of the event. Must be one of the event codes on MidiEvent.\n\t *\n\t * @param {number} type - Event type.\n\t */\n\tMidiEvent.prototype.setType = function(type) {\n\t\tif (type < MidiEvent.NOTE_OFF || type > MidiEvent.PITCH_BEND) {\n\t\t\tthrow new Error(\"Trying to set an unknown event: \" + type);\n\t\t}\n\n\t\tthis.type = type;\n\t};\n\n\t/**\n\t * Set the channel for the event. Must be between 0 and 15, inclusive.\n\t *\n\t * @param {number} channel - The event channel.\n\t */\n\tMidiEvent.prototype.setChannel = function(channel) {\n\t\tif (channel < 0 || channel > 15) {\n\t\t\tthrow new Error(\"Channel is out of bounds.\");\n\t\t}\n\n\t\tthis.channel = channel;\n\t};\n\n\t/**\n\t * Set the first parameter for the event. Must be between 0 and 255,\n\t * inclusive.\n\t *\n\t * @param {number} p - The first event parameter value.\n\t */\n\tMidiEvent.prototype.setParam1 = function(p) {\n\t\tthis.param1 = p;\n\t};\n\n\t/**\n\t * Set the second parameter for the event. Must be between 0 and 255,\n\t * inclusive.\n\t *\n\t * @param {number} p - The second event parameter value.\n\t */\n\tMidiEvent.prototype.setParam2 = function(p) {\n\t\tthis.param2 = p;\n\t};\n\n\t/**\n\t * Serialize the event to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tMidiEvent.prototype.toBytes = function() {\n\t\tvar byteArray = [];\n\n\t\tvar typeChannelByte = this.type | (this.channel & 0xF);\n\n\t\tbyteArray.push.apply(byteArray, this.time);\n\t\tbyteArray.push(typeChannelByte);\n\t\tbyteArray.push(this.param1);\n\n\t\t// Some events don't have a second parameter\n\t\tif (this.param2 !== undefined && this.param2 !== null) {\n\t\t\tbyteArray.push(this.param2);\n\t\t}\n\t\treturn byteArray;\n\t};\n\n\t/* ******************************************************************\n\t * MetaEvent class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a meta event.\n\t *\n\t * Parameters include:\n\t *  - time [optional number] - Ticks since previous event.\n\t *  - type [required number] - Type of event.\n\t *  - data [optional array|string] - Event data.\n\t */\n\tvar MetaEvent = function(params) {\n\t\tif (!this) return new MetaEvent(params);\n\t\tvar p = params || {};\n\t\tthis.setTime(params.time);\n\t\tthis.setType(params.type);\n\t\tthis.setData(params.data);\n\t};\n\n\tMetaEvent.SEQUENCE   = 0x00;\n\tMetaEvent.TEXT       = 0x01;\n\tMetaEvent.COPYRIGHT  = 0x02;\n\tMetaEvent.TRACK_NAME = 0x03;\n\tMetaEvent.INSTRUMENT = 0x04;\n\tMetaEvent.LYRIC      = 0x05;\n\tMetaEvent.MARKER     = 0x06;\n\tMetaEvent.CUE_POINT  = 0x07;\n\tMetaEvent.CHANNEL_PREFIX = 0x20;\n\tMetaEvent.END_OF_TRACK   = 0x2f;\n\tMetaEvent.TEMPO      = 0x51;\n\tMetaEvent.SMPTE      = 0x54;\n\tMetaEvent.TIME_SIG   = 0x58;\n\tMetaEvent.KEY_SIG    = 0x59;\n\tMetaEvent.SEQ_EVENT  = 0x7f;\n\n\t/**\n\t * Set the time for the event in ticks since the previous event.\n\t *\n\t * @param {number} ticks - The number of ticks since the previous event. May\n\t * be zero.\n\t */\n\tMetaEvent.prototype.setTime = function(ticks) {\n\t\tthis.time = Util.translateTickTime(ticks || 0);\n\t};\n\n\t/**\n\t * Set the type of the event. Must be one of the event codes on MetaEvent.\n\t *\n\t * @param {number} t - Event type.\n\t */\n\tMetaEvent.prototype.setType = function(t) {\n\t\tthis.type = t;\n\t};\n\n\t/**\n\t * Set the data associated with the event. May be a string or array of byte\n\t * values.\n\t *\n\t * @param {string|Array} d - Event data.\n\t */\n\tMetaEvent.prototype.setData = function(d) {\n\t\tthis.data = d;\n\t};\n\n\t/**\n\t * Serialize the event to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tMetaEvent.prototype.toBytes = function() {\n\t\tif (!this.type) {\n\t\t\tthrow new Error(\"Type for meta-event not specified.\");\n\t\t}\n\n\t\tvar byteArray = [];\n\t\tbyteArray.push.apply(byteArray, this.time);\n\t\tbyteArray.push(0xFF, this.type);\n\n\t\t// If data is an array, we assume that it contains several bytes. We\n\t\t// apend them to byteArray.\n\t\tif (Array.isArray(this.data)) {\n\t\t\tbyteArray.push(this.data.length);\n\t\t\tbyteArray.push.apply(byteArray, this.data);\n\t\t} else if (typeof this.data == 'number') {\n\t\t\tbyteArray.push(1, this.data);\n\t\t} else if (this.data !== null && this.data !== undefined) {\n\t\t\t// assume string; may be a bad assumption\n\t\t\tbyteArray.push(this.data.length);\n\t\t\tvar dataBytes = this.data.split('').map(function(x){ return x.charCodeAt(0) });\n\t\t\tbyteArray.push.apply(byteArray, dataBytes);\n\t\t} else {\n\t\t\tbyteArray.push(0);\n\t\t}\n\n\t\treturn byteArray;\n\t};\n\n\t/* ******************************************************************\n\t * Track class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a MIDI track.\n\t *\n\t * Parameters include:\n\t *  - events [optional array] - Array of events for the track.\n\t */\n\tvar Track = function(config) {\n\t\tif (!this) return new Track(config);\n\t\tvar c = config || {};\n\t\tthis.events = c.events || [];\n\t};\n\n\tTrack.START_BYTES = [0x4d, 0x54, 0x72, 0x6b];\n\tTrack.END_BYTES   = [0x00, 0xFF, 0x2F, 0x00];\n\n\t/**\n\t * Add an event to the track.\n\t *\n\t * @param {MidiEvent|MetaEvent} event - The event to add.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addEvent = function(event) {\n\t\tthis.events.push(event);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The volume for the note, defaults to\n\t * DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNoteOn = Track.prototype.noteOn = function(channel, pitch, time, velocity) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.NOTE_ON,\n\t\t\tchannel: channel,\n\t\t\tparam1: Util.ensureMidiPitch(pitch),\n\t\t\tparam2: velocity || DEFAULT_VOLUME,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-off event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The velocity the note was released,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNoteOff = Track.prototype.noteOff = function(channel, pitch, time, velocity) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.NOTE_OFF,\n\t\t\tchannel: channel,\n\t\t\tparam1: Util.ensureMidiPitch(pitch),\n\t\t\tparam2: velocity || DEFAULT_VOLUME,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on and -off event to the track.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {number|string} pitch - The pitch of the note, either numeric or\n\t * symbolic.\n\t * @param {number} dur - The duration of the note, in ticks.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @param {number} [velocity=90] - The velocity the note was released,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addNote = Track.prototype.note = function(channel, pitch, dur, time, velocity) {\n\t\tthis.noteOn(channel, pitch, time, velocity);\n\t\tif (dur) {\n\t\t\tthis.noteOff(channel, pitch, dur, velocity);\n\t\t}\n\t\treturn this;\n\t};\n\n\t/**\n\t * Add a note-on and -off event to the track for each pitch in an array of pitches.\n\t *\n\t * @param {number} channel - The channel to add the event to.\n\t * @param {array} chord - An array of pitches, either numeric or\n\t * symbolic.\n\t * @param {number} dur - The duration of the chord, in ticks.\n\t * @param {number} [velocity=90] - The velocity of the chord,\n\t * defaults to DEFAULT_VOLUME.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.addChord = Track.prototype.chord = function(channel, chord, dur, velocity) {\n\t\tif (!Array.isArray(chord) && !chord.length) {\n\t\t\tthrow new Error('Chord must be an array of pitches');\n\t\t}\n\t\tchord.forEach(function(note) {\n\t\t\tthis.noteOn(channel, note, 0, velocity);\n\t\t}, this);\n\t\tchord.forEach(function(note, index) {\n\t\t\tif (index === 0) {\n\t\t\t\tthis.noteOff(channel, note, dur);\n\t\t\t} else {\n\t\t\t\tthis.noteOff(channel, note);\n\t\t\t}\n\t\t}, this);\n\t\treturn this;\n\t};\n\n\t/**\n\t * Set instrument for the track.\n\t *\n\t * @param {number} channel - The channel to set the instrument on.\n\t * @param {number} instrument - The instrument to set it to.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.setInstrument = Track.prototype.instrument = function(channel, instrument, time) {\n\t\tthis.events.push(new MidiEvent({\n\t\t\ttype: MidiEvent.PROGRAM_CHANGE,\n\t\t\tchannel: channel,\n\t\t\tparam1: instrument,\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Set the tempo for the track.\n\t *\n\t * @param {number} bpm - The new number of beats per minute.\n\t * @param {number} [time=0] - The number of ticks since the previous event,\n\t * defaults to 0.\n\t * @returns {Track} The current track.\n\t */\n\tTrack.prototype.setTempo = Track.prototype.tempo = function(bpm, time) {\n\t\tthis.events.push(new MetaEvent({\n\t\t\ttype: MetaEvent.TEMPO,\n\t\t\tdata: Util.mpqnFromBpm(bpm),\n\t\t\ttime: time || 0,\n\t\t}));\n\t\treturn this;\n\t};\n\n\t/**\n\t * Serialize the track to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tTrack.prototype.toBytes = function() {\n\t\tvar trackLength = 0;\n\t\tvar eventBytes = [];\n\t\tvar startBytes = Track.START_BYTES;\n\t\tvar endBytes   = Track.END_BYTES;\n\n\t\tvar addEventBytes = function(event) {\n\t\t\tvar bytes = event.toBytes();\n\t\t\ttrackLength += bytes.length;\n\t\t\teventBytes.push.apply(eventBytes, bytes);\n\t\t};\n\n\t\tthis.events.forEach(addEventBytes);\n\n\t\t// Add the end-of-track bytes to the sum of bytes for the track, since\n\t\t// they are counted (unlike the start-of-track ones).\n\t\ttrackLength += endBytes.length;\n\n\t\t// Makes sure that track length will fill up 4 bytes with 0s in case\n\t\t// the length is less than that (the usual case).\n\t\tvar lengthBytes = Util.str2Bytes(trackLength.toString(16), 4);\n\n\t\treturn startBytes.concat(lengthBytes, eventBytes, endBytes);\n\t};\n\n\t/* ******************************************************************\n\t * File class\n\t ****************************************************************** */\n\n\t/**\n\t * Construct a file object.\n\t *\n\t * Parameters include:\n\t *  - ticks [optional number] - Number of ticks per beat, defaults to 128.\n\t *    Must be 1-32767.\n\t *  - tracks [optional array] - Track data.\n\t */\n\tvar File = function(config){\n\t\tif (!this) return new File(config);\n\n\t\tvar c = config || {};\n\t\tif (c.ticks) {\n\t\t\tif (typeof c.ticks !== 'number') {\n\t\t\t\tthrow new Error('Ticks per beat must be a number!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (c.ticks <= 0 || c.ticks >= (1 << 15) || c.ticks % 1 !== 0) {\n\t\t\t\tthrow new Error('Ticks per beat must be an integer between 1 and 32767!');\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tthis.ticks = c.ticks || 128;\n\t\tthis.tracks = c.tracks || [];\n\t};\n\n\tFile.HDR_CHUNKID     = \"MThd\";             // File magic cookie\n\tFile.HDR_CHUNK_SIZE  = \"\\x00\\x00\\x00\\x06\"; // Header length for SMF\n\tFile.HDR_TYPE0       = \"\\x00\\x00\";         // Midi Type 0 id\n\tFile.HDR_TYPE1       = \"\\x00\\x01\";         // Midi Type 1 id\n\n\t/**\n\t * Add a track to the file.\n\t *\n\t * @param {Track} track - The track to add.\n\t */\n\tFile.prototype.addTrack = function(track) {\n\t\tif (track) {\n\t\t\tthis.tracks.push(track);\n\t\t\treturn this;\n\t\t} else {\n\t\t\ttrack = new Track();\n\t\t\tthis.tracks.push(track);\n\t\t\treturn track;\n\t\t}\n\t};\n\n\t/**\n\t * Serialize the MIDI file to an array of bytes.\n\t *\n\t * @returns {Array} The array of serialized bytes.\n\t */\n\tFile.prototype.toBytes = function() {\n\t\tvar trackCount = this.tracks.length.toString(16);\n\n\t\t// prepare the file header\n\t\tvar bytes = File.HDR_CHUNKID + File.HDR_CHUNK_SIZE;\n\n\t\t// set Midi type based on number of tracks\n\t\tif (parseInt(trackCount, 16) > 1) {\n\t\t\tbytes += File.HDR_TYPE1;\n\t\t} else {\n\t\t\tbytes += File.HDR_TYPE0;\n\t\t}\n\n\t\t// add the number of tracks (2 bytes)\n\t\tbytes += Util.codes2Str(Util.str2Bytes(trackCount, 2));\n\t\t// add the number of ticks per beat (currently hardcoded)\n\t\tbytes += String.fromCharCode((this.ticks/256),  this.ticks%256);;\n\n\t\t// iterate over the tracks, converting to bytes too\n\t\tthis.tracks.forEach(function(track) {\n\t\t\tbytes += Util.codes2Str(track.toBytes());\n\t\t});\n\n\t\treturn bytes;\n\t};\n\n\t/* ******************************************************************\n\t * Exports\n\t ****************************************************************** */\n\n\texported.Util = Util;\n\texported.File = File;\n\texported.Track = Track;\n\texported.Event = MidiEvent;\n\texported.MetaEvent = MetaEvent;\n\n})( Midi );\n\nif (typeof module != 'undefined' && module !== null) {\n\tmodule.exports = Midi;\n} else if (typeof exports != 'undefined' && exports !== null) {\n\texports = Midi;\n} else {\n\tthis.Midi = Midi;\n}\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Session = void 0;\nvar channel_1 = require(\"./channel\");\nvar Session = /** @class */ (function () {\n    function Session(arr) {\n        arr = arr || [];\n        this.sessionChannels = arr.map(function (ch, i) {\n            ch.idx = ch.idx || i;\n            return new channel_1.Channel(ch);\n        });\n    }\n    Session.prototype.createChannel = function (ch) {\n        ch.idx = ch.idx || this.sessionChannels.length;\n        var newChannel = new channel_1.Channel(ch);\n        this.sessionChannels.push(newChannel);\n        return newChannel;\n    };\n    Object.defineProperty(Session.prototype, \"channels\", {\n        get: function () {\n            return this.sessionChannels;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    // Start the clips at a specific index in all the channels\n    Session.prototype.startRow = function (idx) {\n        this.sessionChannels.forEach(function (ch) {\n            ch.startClip(idx);\n        });\n    };\n    Session.prototype.play = function (params) {\n        var _this = this;\n        var channelPatterns = params.channelPatterns;\n        var clipDuration = params.clipDuration || '4:0:0';\n        var clipDurationInSeconds = Tone.Time(clipDuration).toSeconds();\n        var stopClips = function (clips, time) {\n            clips.forEach(function (c) { return c.stop(time); });\n        };\n        var startClips = function (channelIdx, clipIdx, time) {\n            return clipIdx === '-'\n                ? []\n                : _this.channels\n                    .filter(function (c) { return c.idx === channelIdx; })\n                    .map(function (c) { return c.clips[clipIdx].start(time); });\n        };\n        channelPatterns.forEach(function (_a) {\n            var channelIdx = _a.channelIdx, pattern = _a.pattern;\n            var clips = [];\n            var time = 0;\n            var prevClipIdx = '-';\n            pattern.split('').forEach(function (clipIdx) {\n                if (clipIdx !== prevClipIdx && clipIdx !== '_') {\n                    stopClips(clips, time);\n                    clips = startClips(channelIdx, clipIdx, time);\n                }\n                prevClipIdx = clipIdx;\n                time += clipDurationInSeconds;\n            });\n            stopClips(clips, time);\n        });\n    };\n    return Session;\n}());\nexports.Session = Session;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Channel = void 0;\nvar clip_1 = require(\"./clip\");\n/**\n * Get the next logical position to play in the session\n * Tone has a build-in method `Tone.Transport.nextSubdivision('4n')`\n * but I think it s better to round off as follows for live performance\n */\nvar getNextPos = function () {\n    var arr = Tone.Transport.position.split(':');\n    // If we are still around 0:0:0x, then set start position to 0\n    if (arr[0] === '0' && arr[1] === '0') {\n        return 0;\n    }\n    // Else set it to the next bar\n    return +arr[0] + 1 + ':0:0';\n};\n/**\n * Channel\n * A channel is made up of a Tone.js Player/Instrument, one or more\n * Tone.js sequences (known as clips in Scribbletune)\n * & optionally a set of effects (with or without presets)\n *\n * API:\n * clips -> Get all clips for this channel\n * addClip -> Add a new clip to the channel\n * startClip -> Start a clip at the provided index\n * stopClip -> Stop a clip at the provided index\n * activeClipIdx -> Get the clip that is currently playing\n */\nvar Channel = /** @class */ (function () {\n    function Channel(params) {\n        var _this = this;\n        (this.idx = params.idx || 0), (this.activePatternIdx = -1);\n        this.channelClips = [];\n        if (params.sample) {\n            this.player = new Tone.Player(params.sample);\n        }\n        if (params.synth) {\n            this.instrument = new Tone[params.synth]();\n        }\n        if (params.samples) {\n            this.sampler = new Tone.Sampler(params.samples);\n        }\n        // Filter out unrequired params and create clip params object\n        var clips = params.clips, samples = params.samples, sample = params.sample, synth = params.synth, originalParamsFiltered = __rest(params, [\"clips\", \"samples\", \"sample\", \"synth\"]);\n        params.clips.forEach(function (c) {\n            _this.addClip(__assign(__assign({}, c), originalParamsFiltered));\n        }, this);\n    }\n    Object.defineProperty(Channel.prototype, \"clips\", {\n        get: function () {\n            return this.channelClips;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Channel.prototype.startClip = function (idx) {\n        // Stop any other currently running clip\n        if (this.activePatternIdx > -1 && this.activePatternIdx !== idx) {\n            this.stopClip(this.activePatternIdx);\n        }\n        if (this.channelClips[idx] && this.channelClips[idx].state !== 'started') {\n            this.activePatternIdx = idx;\n            this.channelClips[idx].start(getNextPos());\n        }\n    };\n    Channel.prototype.stopClip = function (idx) {\n        this.channelClips[idx].stop(getNextPos());\n    };\n    Channel.prototype.addClip = function (clipParams, idx) {\n        idx = idx || this.channelClips.length;\n        if (clipParams.pattern) {\n            this.channelClips[idx] = clip_1.clip(__assign({ player: this.player, instrument: this.instrument, sampler: this.sampler }, clipParams));\n        }\n        else {\n            // Allow creation of empty clips\n            this.channelClips[idx] = null;\n        }\n    };\n    Object.defineProperty(Channel.prototype, \"activeClipIdx\", {\n        get: function () {\n            return this.activePatternIdx;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Channel;\n}());\nexports.Channel = Channel;\n","\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.clip = void 0;\nvar utils_1 = require(\"./utils\");\nvar harmonics_1 = require(\"harmonics\");\n/**\n * Get default params for a clip, such as root note, pattern etc\n * @return {Object}\n */\nvar getDefaultParams = function () { return ({\n    notes: ['C4'],\n    pattern: 'x',\n    shuffle: false,\n    sizzle: false,\n    sizzleReps: 1,\n    arpegiate: false,\n    subdiv: '4n',\n    amp: 100,\n    accentLow: 70,\n    randomNotes: null,\n    effects: [],\n    offlineRendering: false,\n}); };\n/**\n * HDR speed is denoted by the number of ticks per note\n * By default this is set to a quarter note (4n) to be in line with Tone.js' default subdivision\n * Technically a bar is 512 ticks long. So it's HDR speed is 512\n * @type {Object}\n */\nvar hdr = {\n    '1m': 2048,\n    '2m': 4096,\n    '3m': 6144,\n    '4m': 8192,\n    '1n': 512,\n    '2n': 256,\n    '4n': 128,\n    '8n': 64,\n    '16n': 32,\n};\nvar convertChordsToNotes = function (el) {\n    if (utils_1.isNote(el)) {\n        // A note needs to be an array so that it can accomodate chords or single notes with a single interface\n        return [el];\n    }\n    if (Array.isArray(el)) {\n        // This could be a chord provided as an array\n        // make sure it uses valid notes\n        el.forEach(function (n) {\n            if (!utils_1.isNote(n)) {\n                throw new TypeError('array must comprise valid notes');\n            }\n        });\n        return el;\n    }\n    // At this point, this could be an inline chord e.g. Cmaj7 or Dbsus2_5\n    if (!Array.isArray(el)) {\n        var c = harmonics_1.inlineChord(el);\n        if (c && c.length) {\n            return c;\n        }\n    }\n    throw new Error(\"Chord \" + el + \" not found\");\n};\nexports.clip = function (params) {\n    params = __assign(__assign({}, getDefaultParams()), (params || {}));\n    // If notes is a string, split it into an array\n    if (typeof params.notes === 'string') {\n        // Remove any accidental double spaces\n        params.notes = params.notes.replace(/\\s{2,}/g, ' ');\n        params.notes = params.notes.split(' ');\n    }\n    params.notes = params.notes.map(convertChordsToNotes);\n    if (/[^x\\-_\\[\\]R]/.test(params.pattern)) {\n        throw new TypeError(\"pattern can only comprise x - _ [ ], found \" + params.pattern);\n    }\n    if (params.shuffle) {\n        params.notes = utils_1.shuffle(params.notes);\n    }\n    if (params.randomNotes && typeof params.randomNotes === 'string') {\n        params.randomNotes = params.randomNotes.replace(/\\s{2,}/g, ' ').split(/\\s/);\n    }\n    if (params.randomNotes) {\n        params.randomNotes = params.randomNotes.map(convertChordsToNotes);\n    }\n    var clipNotes = [];\n    var step = 0;\n    /**\n     * Recursively apply pattern to notes\n     *\n     * Pass in a pattern array such as ['x', '-', 'x', 'x'] with a length for each element\n     * The length is the HDR speed or tick length (obtained from the hdr object in this script)\n     * If the element of this array is also a (pattern) array, then divide the length by\n     * the length of the inner array and then call the recursive function on that inner array\n     */\n    var recursivelyApplyPatternToNotes = function (patternArr, length, parentNoteLength) {\n        var totalLength = 0;\n        patternArr.forEach(function (char, idx) {\n            if (typeof char === 'string') {\n                var note = char === '-' ? null : params.notes[step];\n                if (char === 'R' && (Math.round(Math.random()) || params.randomNotes)) {\n                    note = params.randomNotes\n                        ? params.randomNotes[Math.round(Math.random() * (params.randomNotes.length - 1))]\n                        : params.notes[step];\n                }\n                if (char === 'x' || char === 'R') {\n                    step++;\n                }\n                // Push only note on OR off messages to the clip notes array\n                if (char === 'x' || char === '-' || char === 'R') {\n                    clipNotes.push({\n                        note: note,\n                        length: length,\n                        level: char === 'R' && !params.randomNotes\n                            ? params.accentLow\n                            : params.amp,\n                    });\n                    totalLength += length;\n                }\n                // In case of an underscore, simply extend the previous note's length\n                if (char === '_' && clipNotes.length) {\n                    clipNotes[clipNotes.length - 1].length += length;\n                    totalLength += length;\n                }\n                // if there were triplets in this iteration then ajust length of the last note\n                if (parentNoteLength &&\n                    totalLength !== parentNoteLength &&\n                    idx === patternArr.length - 1) {\n                    var diff = Math.abs(parentNoteLength - totalLength);\n                    var lastClipNote = clipNotes[clipNotes.length - 1];\n                    if (lastClipNote.length > diff) {\n                        lastClipNote.length = lastClipNote.length - diff;\n                    }\n                    else {\n                        lastClipNote.length = lastClipNote.length + diff;\n                    }\n                }\n                // If the pattern is longer than the notes, then repeat notes\n                if (step === params.notes.length) {\n                    step = 0;\n                }\n            }\n            // Note: The following condition is not in a else if simply because\n            // we do need to increment the totalLength in order to support triplets\n            if (Array.isArray(char)) {\n                var isTriplet = false;\n                // either this is a triplet or not\n                if (char.length % 2 !== 0 || length % 2 !== 0) {\n                    isTriplet = true;\n                }\n                recursivelyApplyPatternToNotes(char, Math.round(length / char.length), isTriplet && length);\n                // Increment total length to support subsequent operations\n                // once we are out of the recursion\n                totalLength += length;\n            }\n        });\n    };\n    recursivelyApplyPatternToNotes(utils_1.expandStr(params.pattern), hdr[params.subdiv] || hdr['4n'], false);\n    // Many thanks to @R1G for the following functionality\n    if (params.sizzle) {\n        var volArr = [];\n        var style = params.sizzle === true ? 'sin' : params.sizzle;\n        var beats = clipNotes.length;\n        var amp = params.amp;\n        var sizzleReps = params.sizzleReps;\n        var stepLevel = amp / (beats / sizzleReps);\n        if (style === 'sin' || style === 'cos') {\n            for (var i = 0; i < beats; i++) {\n                var level = Math[style]((i * Math.PI) / (beats / sizzleReps)) * amp;\n                volArr.push(Math.round(Math.abs(level)));\n            }\n        }\n        if (style === 'rampUp') {\n            var level = 0;\n            for (var i = 0; i < beats; i++) {\n                if (i % (beats / sizzleReps) === 0) {\n                    level = 0;\n                }\n                else {\n                    level = level + stepLevel;\n                }\n                volArr.push(Math.round(Math.abs(level)));\n            }\n        }\n        if (style === 'rampDown') {\n            var level = amp;\n            for (var i = 0; i < beats; i++) {\n                if (i % (beats / sizzleReps) === 0) {\n                    level = amp;\n                }\n                else {\n                    level = level - stepLevel;\n                }\n                volArr.push(Math.round(Math.abs(level)));\n            }\n        }\n        for (var i = 0; i < volArr.length; i++) {\n            clipNotes[i].level = volArr[i] ? volArr[i] : 1; // Cannot allow 0 value on level\n        }\n    }\n    if (params.accent) {\n        if (/[^x\\-]/.test(params.accent)) {\n            throw new TypeError('Accent can only have x and - characters');\n        }\n        var a = 0;\n        for (var _i = 0, clipNotes_1 = clipNotes; _i < clipNotes_1.length; _i++) {\n            var clipNote = clipNotes_1[_i];\n            var level = params.accent[a] === 'x'\n                ? params.amp\n                : params.accentLow;\n            if (params.sizzle) {\n                level = (clipNote.level + level) / 2;\n            }\n            clipNote.level = Math.round(level);\n            // Step to the next character in the accent\n            a = a + 1;\n            // Reset `a` so that it can loop over the accent\n            if (a === params.accent.length) {\n                a = 0;\n            }\n        }\n    }\n    return clipNotes;\n};\n"],"sourceRoot":""}